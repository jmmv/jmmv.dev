<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Julio Merino</title>
    <description>This is Julio Merino's homepage.  This site is primarily my personal blog and, secondarily, a gateway to my presence in the web.
</description>
    <link>http://julio.meroh.net/</link>
    <atom:link href="http://julio.meroh.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 09 Oct 2017 10:30:15 +0000</pubDate>
    <lastBuildDate>Mon, 09 Oct 2017 10:30:15 +0000</lastBuildDate>
    <generator>Jekyll v3.5.2</generator>
    
      <item>
        <title>Fighting execs via sandboxfs on macOS</title>
        <description>
          Since the announcement of sandboxfs a few weeks ago, I've been stabilizing its integration with Bazel as a new sandboxing technique.  As part of this work, I encountered issues when macOS was immediately killing signed binaries executed through the sandbox.  Read on for the long troubleshooting process and the surprising trivial solution.
          &lt;a href=&quot;http://julio.meroh.net/2017/10/fighting-execs-sandboxfs-macos.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Fri, 06 Oct 2017 20:27:34 +0000</pubDate>
        <link>http://julio.meroh.net/2017/10/fighting-execs-sandboxfs-macos.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2017/10/fighting-execs-sandboxfs-macos.html</guid>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Introducing sandboxfs</title>
        <description>
          sandboxfs is a FUSE-based file system that exposes an arbitrary view of the
host’s file system under the mount point, and offers access controls that
differ from those of the host. You can think of sandboxfs as an advanced
version of bindfs (or mount --bind or mount_null(8)
depending on your system) in which you can combine and nest directories under
an arbitrary layout.


          &lt;a href=&quot;http://julio.meroh.net/2017/08/introducing-sandboxfs.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Fri, 25 Aug 2017 20:25:18 +0000</pubDate>
        <link>http://julio.meroh.net/2017/08/introducing-sandboxfs.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2017/08/introducing-sandboxfs.html</guid>
        
        
        <category>bazel</category>
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Introducing sourcachefs</title>
        <description>
          Announcing the launch of sourcachefs, a FUSE-based persistent caching layer.
          &lt;a href=&quot;http://julio.meroh.net/2017/07/introducing-sourcachefs.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Mon, 31 Jul 2017 00:30:00 +0000</pubDate>
        <link>http://julio.meroh.net/2017/07/introducing-sourcachefs.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2017/07/introducing-sourcachefs.html</guid>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Easy pkgsrc on macOS with pkg_comp 2.0</title>
        <description>
          This is a tutorial to guide you through the shiny new pkg_comp 2.0 on macOS using the macOS-specific self-installer.

Goals: to use pkg_comp 2.0 to build a binary repository of all the packages you are interested in; to keep the repository fresh on a daily basis; and to use that repository with pkgin to maintain your macOS system up-to-date and secure.


          &lt;a href=&quot;http://julio.meroh.net/2017/02/pkg_comp-2.0-tutorial-macos.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Thu, 23 Feb 2017 22:36:54 +0000</pubDate>
        <link>http://julio.meroh.net/2017/02/pkg_comp-2.0-tutorial-macos.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2017/02/pkg_comp-2.0-tutorial-macos.html</guid>
        
        
        <category>macos</category>
        
        <category>software</category>
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Keeping NetBSD up-to-date with pkg_comp 2.0</title>
        <description>
          This is a tutorial to guide you through the shiny new pkg_comp 2.0 on NetBSD.

Goals: to use pkg_comp 2.0 to build a binary repository of all the packages you are interested in; to keep the repository fresh on a daily basis; and to use that repository with pkgin to maintain your NetBSD system up-to-date and secure.


          &lt;a href=&quot;http://julio.meroh.net/2017/02/pkg_comp-2.0-tutorial-netbsd.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Sat, 18 Feb 2017 16:51:55 +0000</pubDate>
        <link>http://julio.meroh.net/2017/02/pkg_comp-2.0-tutorial-netbsd.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2017/02/pkg_comp-2.0-tutorial-netbsd.html</guid>
        
        
        <category>netbsd</category>
        
        <category>software</category>
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Introducing pkg_comp 2.0 (and sandboxctl 1.0)</title>
        <description>
          Announcing the launch of pkg_comp 2.0, how this differs from the 1.x series, why there was a rewrite, what sandboxctl 1.0 is, and more.
          &lt;a href=&quot;http://julio.meroh.net/2017/02/introducing-pkg_comp-2.0.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Fri, 17 Feb 2017 21:37:06 +0000</pubDate>
        <link>http://julio.meroh.net/2017/02/introducing-pkg_comp-2.0.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2017/02/introducing-pkg_comp-2.0.html</guid>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>#! /usr/bin/env considered harmful</title>
        <description>
          Many programming guides recommend to begin scripts with the #! /usr/bin/env shebang in order to to automatically locate the necessary interpreter. For example, for a Python script you would use #! /usr/bin/env python, and then the saying goes, the script would “just work” on any machine with Python installed.


          &lt;a href=&quot;http://julio.meroh.net/2016/09/env-considered-harmful.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Wed, 14 Sep 2016 11:07:46 +0000</pubDate>
        <link>http://julio.meroh.net/2016/09/env-considered-harmful.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2016/09/env-considered-harmful.html</guid>
        
        
        <category>portability</category>
        
        <category>programming</category>
        
        <category>scripts</category>
        
        <category>unix</category>
        
      </item>
    
      <item>
        <title>Welcome to my homepage, version 3.0</title>
        <description>
          Welcome to my updated homepage, this time at its third major version!


          &lt;a href=&quot;http://julio.meroh.net/2016/05/homepage-v3.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Sun, 29 May 2016 21:00:00 +0000</pubDate>
        <link>http://julio.meroh.net/2016/05/homepage-v3.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2016/05/homepage-v3.html</guid>
        
        
        <category>website</category>
        
      </item>
    
      <item>
        <title>Visual Studio Code: A modern editor</title>
        <description>
          On April 14th, 2016, Microsoft announced the 1.0 release of their open-source Visual Studio Code (VSCode) editor. I’ve been drive-testing it for a few months and have been quite pleased with it, so here go my impressions.


          &lt;a href=&quot;http://julio.meroh.net/2016/04/vscode.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Tue, 19 Apr 2016 15:30:00 +0000</pubDate>
        <link>http://julio.meroh.net/2016/04/vscode.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2016/04/vscode.html</guid>
        
        
        <category>development</category>
        
        <category>software</category>
        
        <category>workflow</category>
        
      </item>
    
      <item>
        <title>A look at Go from a newbie's perspective</title>
        <description>
          I confess I am late to the game: the Go programming language came out in 2009 and I had not had the chance to go all in for a real project until two weeks ago. Here is a summary of my experience. Spoiler alert: I’m truly pleased.


          &lt;a href=&quot;http://julio.meroh.net/2016/03/golang-review.html&quot;&gt;[Continue reading]&lt;/a&gt;
        </description>
        <pubDate>Tue, 22 Mar 2016 21:00:00 +0000</pubDate>
        <link>http://julio.meroh.net/2016/03/golang-review.html</link>
        <guid isPermaLink="true">http://julio.meroh.net/2016/03/golang-review.html</guid>
        
        
        <category>software</category>
        
      </item>
    
  </channel>
</rss>
