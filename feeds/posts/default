<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/</link><description>Recent content on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Mar 2022 09:00:00 -0700</lastBuildDate><atom:link href="https://jmmv.dev/feed.xml" rel="self" type="application/rss+xml"/><item><title>A year on Windows: Miscellaneous tools</title><link>https://jmmv.dev/2022/03/a-year-on-windows-tools.html</link><pubDate>Sun, 13 Mar 2022 09:00:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-tools.html</guid><description>&lt;p>The previous episode in this series was about PowerToys: a nice collection of first-party tools to extend the functionality of Windows for power users. But what about functionality that&amp;rsquo;s built into the system? There are a few more areas I wanted to touch on before concluding the GUI part of these series, so let&amp;rsquo;s dive in.&lt;/p></description></item><item><title>A year on Windows: PowerToys</title><link>https://jmmv.dev/2022/03/a-year-on-windows-powertoys.html</link><pubDate>Sat, 12 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-powertoys.html</guid><description>If you were around the Windows 95 days, you may remember the PowerToys addon. PowerToys was a collection of first-party miscellaneous utilities targeted at power users and it died off sometime around 2010. In a surprising (to me) move on May 2019, Microsoft relaunched this brand as an open-source project targeting modern versions of Windows.
At the time of this writing, PowerToys provides 12 different disparate tools. Which ones you find interesting will depend on your needs.</description></item><item><title>A year on Windows: Window switching</title><link>https://jmmv.dev/2022/03/a-year-on-windows-alt-tab.html</link><pubDate>Fri, 11 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-alt-tab.html</guid><description>&lt;p>Windows is about managing windows so it should excel at window switching. Uh huh? Let&amp;rsquo;s investigate how that works in this episode and how Windows' approach feels to a long-time macOS user. Spoiler alert: I never really liked macOS&amp;rsquo;s way.&lt;/p></description></item><item><title>A year on Windows: Look'n'feel</title><link>https://jmmv.dev/2022/03/a-year-on-windows-gui.html</link><pubDate>Thu, 10 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-gui.html</guid><description>&lt;p>Enough complaining about keyboards, shortcuts, and input methods. Let&amp;rsquo;s shift this one-year reflection to the user interface and slowly towards more positive topics.&lt;/p>
&lt;p>First of all, let&amp;rsquo;s make one thing clear: GUIs are like colors. There are plenty to choose from, everyone has their preferences, and that&amp;rsquo;s just &lt;em>fine&lt;/em>. Windows' GUI is what it is and doesn&amp;rsquo;t leave a lot of room for customization. If you are a macOS user, you have learnt to put up with a similar approach, but if you are a Linux user, you will despair at the lack of options.&lt;/p></description></item><item><title>A year on Windows: Input methods</title><link>https://jmmv.dev/2022/03/a-year-on-windows-input.html</link><pubDate>Wed, 09 Mar 2022 09:45:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-input.html</guid><description>&lt;p>Yesterday&amp;rsquo;s post on this series was almost a rant on how keyboard shortcuts &lt;del>don&amp;rsquo;t&lt;/del> work on Windows. &lt;code>@blude&lt;/code> on Twitter was &lt;a href="https://twitter.com/blude/status/1501214824784666628?s=20&amp;amp;t=WvhNLIzGiWVy8rmznG54xA">curious to know about inserting &amp;ldquo;special characters&amp;rdquo;&lt;/a>, which is really an euphemism for non-English letters. As a non-native English speaker, inserting such letters is something I occasionally have to do but somehow the topic didn&amp;rsquo;t cross my mind. Let&amp;rsquo;s take a look now.&lt;/p></description></item><item><title>A year on Windows: Keyboard shortcuts</title><link>https://jmmv.dev/2022/03/a-year-on-windows-shortcuts.html</link><pubDate>Tue, 08 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-shortcuts.html</guid><description>&lt;p>As I mentioned in &lt;a href="https://jmmv.dev/2022/03/a-year-on-windows-intro.html">the introduction to these series&lt;/a>, different physical keyboards are a source of frustration. This, however, pales in comparison to trying to use Windows as a former macOS user: the different keyboard shortcuts break muscle memory, and this made me feel completely unproductive and&amp;hellip; furious every time I made a mistake.&lt;/p></description></item><item><title>A year on Windows: Introduction</title><link>https://jmmv.dev/2022/03/a-year-on-windows-intro.html</link><pubDate>Mon, 07 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-intro.html</guid><description>&lt;p>A bit over a week ago, I narrated &lt;a href="https://jmmv.dev/2022/02/my-story-with-windows.html">my decades-long love and hate relationship with Windows&lt;/a>. Today, it&amp;rsquo;s time to &lt;em>start&lt;/em> covering my impressions of this platform after spending a year on it as my primary OS. This is noteworthy because I had been a Unix-only person for about 25 years and spent the last 15 on macOS alone. Switching to Windows 10 and 11 has been quite a change and&amp;hellip; for the most part, a positive one. I like what I&amp;rsquo;ve seen.&lt;/p></description></item><item><title>Windows 10 on a Mac Pro 2013</title><link>https://jmmv.dev/2022/03/windows-10-mac-pro-2013.html</link><pubDate>Tue, 01 Mar 2022 05:20:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/windows-10-mac-pro-2013.html</guid><description>The Mac Pro 2013 is the most powerful machine I have at home. I love the hardware looks, its small form factor and its quietness, plus it is still fast enough for my needs. As I realized I hadn&amp;rsquo;t used macOS for months and I needed to recover the SSD space that this system was using, I&amp;rsquo;ve done the unthinkable: I have installed Windows 10 as the only OS on this machine. Here is all you need to know to make Windows 10 work well on this hardware, no matter if you choose to use Boot Camp or do a full clean install as I did.</description></item><item><title>Configuring SSH access into WSL 1 and WSL 2</title><link>https://jmmv.dev/2022/02/wsl-ssh-access.html</link><pubDate>Sun, 27 Feb 2022 12:00:00 -0800</pubDate><guid>https://jmmv.dev/2022/02/wsl-ssh-access.html</guid><description>One of the reasons I like macOS is that it is a Unix system. Thanks to this, it&amp;rsquo;s trivial to set up an SSH server to remotely access and administer the machine, which in turn has allowed me to have a nice and powerful desktop computer which I can also leverage when I&amp;rsquo;m on the go.
Moving to Windows full time, as I briefly touched upon in My story with Windows, required that I could do the same on this platform.</description></item><item><title>My story with Windows</title><link>https://jmmv.dev/2022/02/my-story-with-windows.html</link><pubDate>Thu, 24 Feb 2022 05:00:00 -0800</pubDate><guid>https://jmmv.dev/2022/02/my-story-with-windows.html</guid><description>&lt;p>It has been a year since I went all-in on Windows as my daily driver. I had been off this platform for more than 25 years, spending the first 10 of those on Linux and the BSDs, and the latter 15 on macOS alone. This switch is A Big Deal™️&amp;mdash;to me at least.&lt;/p>
&lt;p>I want to tell you how Windows 10 and 11 feel these days to someone who hadn&amp;rsquo;t touched this OS for a long time. But, before I can do that, let me tell you my story with Windows. This might be boring so I&amp;rsquo;ve sprinkled some images to evoke retro feelings.&lt;/p></description></item><item><title>Comments are back and other news</title><link>https://jmmv.dev/2022/02/comments-and-ids.html</link><pubDate>Wed, 16 Feb 2022 10:00:00 -0800</pubDate><guid>https://jmmv.dev/2022/02/comments-and-ids.html</guid><description>Just a couple of weeks ago, I described my home-grown analytics service for this site. Today, I&amp;rsquo;m here to describe a couple of related updates: namely, the support for comments and the complete removal of client-side fingerprinting.</description></item><item><title>DIY web analytics</title><link>https://jmmv.dev/2022/02/diy-web-analytics.html</link><pubDate>Tue, 01 Feb 2022 09:15:00 -0800</pubDate><guid>https://jmmv.dev/2022/02/diy-web-analytics.html</guid><description>One thing that had been bothering me about my websites&amp;mdash;including this blog, but especially when launching https://www.endbasic.dev/ just a few months ago&amp;mdash;was this:
uBlock showing a warning that it blocked a tracker on the EndBASIC site. A tracking warning. uBlock complained that my properties had one tracker. And it&amp;rsquo;s true they had just one: it was Google Analytics, or GA for short.
GA is the de-facto standard for web analytics: it is extremely powerful and ubiquitous.</description></item><item><title>Fair on-call scheduling</title><link>https://jmmv.dev/2022/01/oncall-scheduling.html</link><pubDate>Mon, 10 Jan 2022 06:40:00 -0800</pubDate><guid>https://jmmv.dev/2022/01/oncall-scheduling.html</guid><description>Being part of an on-call rotation is a requirement for many software job positions and fulfilling this requirement should not come with stress. One process that can cause friction is how a team schedules its on-call shifts. If the on-call scheduling process is haphazard, team members will end up with shifts over their personal plans, and they&amp;rsquo;ll be unhappy. But there are ways to prevent this, which is what this post is about.</description></item><item><title>Constructors and evil initializers in C++</title><link>https://jmmv.dev/2021/11/cpp-ctors-vs-init.html</link><pubDate>Wed, 24 Nov 2021 09:15:00 -0800</pubDate><guid>https://jmmv.dev/2021/11/cpp-ctors-vs-init.html</guid><description>One of the three key tenets of Object Oriented Programming (OOP) is encapsulation: objects contain a state that, when observed from the outside, is always internally-consistent. Unfortunately, C++ codebases where exceptions are forbidden often violate this rule when they separate object initialization from construction. Let&amp;rsquo;s see why that&amp;rsquo;s a problem and how to address it.</description></item><item><title>EndBASIC 0.8: Now, with graphics!</title><link>https://jmmv.dev/2021/11/endbasic-0.8.html</link><pubDate>Thu, 11 Nov 2021 09:45:00 -0800</pubDate><guid>https://jmmv.dev/2021/11/endbasic-0.8.html</guid><description>&lt;p>Graphics support has finally landed in EndBASIC and, with that, the 0.8 release is finally here.&lt;/p>
&lt;p>This release marks a huge milestone in the development of EndBASIC. Supporting graphics is something I&amp;rsquo;ve had in mind since the very beginning but had been procrastinating on until a couple of months ago. I feared everything that would be involved in delivering this feature, and to be fair, I was right: getting the desktop console to work on all platforms, and especially getting it to work in CI for automated testing, was tedious. But it&amp;rsquo;s done now.&lt;/p></description></item></channel></rss>