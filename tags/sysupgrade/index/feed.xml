<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sysupgrade on Julio Merino (jmmv.dev)</title>
    <link>https://jmmv.dev/tags/sysupgrade/index/</link>
    <description>Recent content in sysupgrade on Julio Merino (jmmv.dev)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 24 Aug 2020 06:30:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/sysupgrade/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>rc.d belongs in libexec, not etc</title>
      <link>https://jmmv.dev/2020/08/rcd-libexec-etc.html</link>
      <pubDate>Mon, 24 Aug 2020 06:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/08/rcd-libexec-etc.html</guid>
      <description>The scripts that live under /etc/rc.d/ in FreeBSD, NetBSD, and OpenBSD are in the wrong place. They all should live in /libexec/rc.d/ because they are code, not configuration. Let&amp;rsquo;s look at the history of these systems to see how we got here, why this is problematic, and how things would look like in a better world.</description>
    </item>
    
    <item>
      <title>Moving projects to GitHub</title>
      <link>https://jmmv.dev/2014/02/moving-projects-to-github.html</link>
      <pubDate>Thu, 06 Feb 2014 07:12:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/02/moving-projects-to-github.html</guid>
      <description>For a couple of years or so, I have been hosting my open source projects in Google Code. The time to jump ship has come.
The major reason for this move is that Google Code stopped supporting file downloads three weeks ago. This is unfortunate given that &#34;binary&#34; releases are a must for proper software distribution. Sure, I could use a third-party service like Bintray to offer the downloads, but I&#39;d rather consolidate all project data in a single location.</description>
    </item>
    
    <item>
      <title>&#39;Hello GitHub!&#39; say shtk, sysbuild and sysupgrade</title>
      <link>https://jmmv.dev/2013/07/hello-github-say-shtk-sysbuild-and.html</link>
      <pubDate>Sun, 28 Jul 2013 20:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/07/hello-github-say-shtk-sysbuild-and.html</guid>
      <description>Over a year ago, I developed two command line utilities for NetBSD (sysbuild and sysupgrade) and a supporting library for the two tools (shtk). These were all introduced in their corresponding blog posts &amp;mdash;Introducing sysbuild for NetBSD, Introducing sysupgrade for NetBSD and Introducing shtk&amp;mdash; and since then I have heard good comments about them.
About a couple of weeks ago, I started working on the much-needed rewrite of pkg_comp and a supporting standalone tool.</description>
    </item>
    
    <item>
      <title>Introducing shtk</title>
      <link>https://jmmv.dev/2012/08/introducing-shtk.html</link>
      <pubDate>Wed, 15 Aug 2012 17:39:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/08/introducing-shtk.html</guid>
      <description>Have you ever wanted to have a collection of ready-to-use modules for shell scripts? I have, particularly because I keep reimplementing the same functions over and over and over and over again whenever I write non-trivial shell scripts, and I&#39;m tired of doing so.
That&#39;s why I have just abstracted all the common code in the aforementioned tools and put it into a new package called the &#34;Shell Toolkit&#34;, or shtk for short.</description>
    </item>
    
    <item>
      <title>Introducing sysupgrade for NetBSD</title>
      <link>https://jmmv.dev/2012/08/introducing-sysupgrade.html</link>
      <pubDate>Mon, 06 Aug 2012 13:32:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/08/introducing-sysupgrade.html</guid>
      <description>Over the last two weeks, you might have had fun rolling your own NetBSD binary releases with sysbuild. But what fun is that if you have no trivial way of upgrading your existing NetBSD installation to a newer version?
Upgrading NetBSD to a newer version from distribution sets generally looks like the following;
Fetch new distribution sets (or roll your own).Upgrade the kernel.Unpack the distribution sets over the root directory, without fat-fingering the command and unpacking etc.</description>
    </item>
    
  </channel>
</rss>
