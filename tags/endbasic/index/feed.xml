<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Endbasic on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/endbasic/index.html</link><description>Recent content in Endbasic on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&ndash;2025 Julio Merino</copyright><lastBuildDate>Fri, 26 Apr 2024 13:30:00 -0700</lastBuildDate><atom:link href="https://jmmv.dev/tags/endbasic/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Porting the EndBASIC console to an LCD</title><link>https://jmmv.dev/2024/04/endbasic-st7735s.html</link><pubDate>Fri, 26 Apr 2024 13:30:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2024/04/endbasic-st7735s.html</guid><description>&lt;p>Hello again Blog System/5 and sorry for the radio silence for the last couple of months. I had been writing too much in here and neglecting my side projects so I &lt;em>needed&lt;/em> to get back to them. And now that I&amp;rsquo;ve made significant progress on cool new features for &lt;a href="https://www.endbasic.dev/">EndBASIC&lt;/a>, it&amp;rsquo;s time to write about them a little!&lt;/p>
&lt;p>One of the defining characteristics of EndBASIC is its hybrid console: what looks like a simple text terminal at first glance can actually render overlapping graphics and text &lt;em>at the same time&lt;/em>. This is a feature that I believe is critical to simplify learning and it first appeared with &lt;a href="https://jmmv.dev/2021/11/endbasic-0.8.html">the 0.8 release&lt;/a> back in 2021.&lt;/p></description><enclosure url="https://jmmv.dev/images/2024-04-26-endbasic-st7735s-editor.jpg" length="2750893" type="image/jpeg"/></item><item><title>Unit-testing a web service in Rust</title><link>https://jmmv.dev/2023/07/unit-testing-a-web-service.html</link><pubDate>Fri, 07 Jul 2023 06:30:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2023/07/unit-testing-a-web-service.html</guid><description>&lt;p>One of the things I'm most proud of the Rust web services I have written is how I can run their tests with zero setup and within milliseconds, all while making me confident that "main" can always be shipped to production. I've previously touched upon how this all works in other articles, but it's time for a deep dive.&lt;/p>
&lt;p>To make things specific, I'll be describing the testing infrastructure of EndTRACKER, the EndBASIC Service, and the sample key/value store app of III-IV. These services are all structured in three separate layers, and I'll be covering the testing strategy for each of them.&lt;/p></description></item><item><title>BASIC parsing difficulties in EndBASIC</title><link>https://jmmv.dev/2023/01/endbasic-parsing-difficulties.html</link><pubDate>Fri, 13 Jan 2023 06:00:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2023/01/endbasic-parsing-difficulties.html</guid><description>The original BASIC parser in EndBASIC 0.1 was very rudimentary and it stayed pretty much unmodified until the 0.10 release last month. This release brought major changes to the parser to support new features, but it wasn&amp;rsquo;t easy to implement them. In this post, I want to look into various difficulties that arose implementing certain BASIC constructs in EndBASIC. Overcoming these difficulties was difficult, but it was also fascinating because it gave me a glimpse of the design choices that the original BASIC designers must have faced. Capturing these ah-ha moments in a post is also tricky, but I&amp;rsquo;ll try anyway.</description></item><item><title>EndBASIC 0.10: Core language, evolved</title><link>https://jmmv.dev/2022/12/endbasic-0.10.html</link><pubDate>Tue, 27 Dec 2022 16:30:00 +0100</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/12/endbasic-0.10.html</guid><description>&lt;p>After three months of early-morning hacking, I&amp;rsquo;m pleased to announce that EndBASIC 0.10 is now available&amp;mdash;right on time for some holiday-time experimentation!&lt;/p>
&lt;p>This release marks a &lt;em>huge&lt;/em> milestone because it makes the language usable for real-world development.&lt;/p>
&lt;p>You see, when I started this project over two years ago, I wrote a rudimentary interpreter for something that resembled BASIC and then launched EndBASIC 0.1. Since then, I have been piling onto those insufficient foundations by adding flashy features such as &lt;a href="https://jmmv.dev/2020/11/endbasic-0.3.html">a web interface&lt;/a>, &lt;a href="https://jmmv.dev/2021/07/endbasic-0.7.html">a cloud file sharing service&lt;/a>, and &lt;a href="https://jmmv.dev/2021/11/endbasic-0.8.html">a hybrid text/graphics console&lt;/a>. These features have been well-received in every demo I&amp;rsquo;ve given but&amp;hellip; the feedback that always came back was the same: &amp;ldquo;&lt;em>Give me some sort of functions or subroutines!&lt;/em>&amp;rdquo;, or &amp;ldquo;&lt;em>This is no BASIC without &lt;code>GOTO&lt;/code>!&lt;/em>&amp;rdquo;.&lt;/p>
&lt;p>And these criticisms were right. Trying to write any sort of non-trivial program in EndBASIC was a daunting and frustrating experience. I had tried to simplify coding to the foundations of structured programming, but without a way to perform unstructured jumps (aka go-tos) or define custom functions&amp;hellip; it was impossible to factor out common code, which is a need for the vast majority of programs that exceed a screenful of text. There were also usability deficits such as the lack of line numbers in error messages, which made it incredibly difficult to debug any failing program.&lt;/p>
&lt;p>The situation had to change, and change it has in EndBASIC 0.10.&lt;/p></description></item><item><title>From AST to bytecode execution in EndBASIC</title><link>https://jmmv.dev/2022/11/endbasic-bytecode.html</link><pubDate>Tue, 22 Nov 2022 06:50:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/11/endbasic-bytecode.html</guid><description>&lt;p>Since its inception two years ago, the EndBASIC interpreter has been using an AST-based execution
engine. And during all this time, people have mocked the language for not allowing &lt;code>10 GOTO 10&lt;/code>.
Well, fear not: the upcoming 0.10 release has full support for &lt;code>GOTO&lt;/code> and &lt;code>GOSUB&lt;/code>, features that
were made possible by moving to a bytecode-based interpreter. Let&amp;rsquo;s take a peek at what the
problems were and how I addressed them.&lt;/p></description></item><item><title>EndBASIC 0.9: Run shared demos easily</title><link>https://jmmv.dev/2022/06/endbasic-0.9.html</link><pubDate>Sun, 05 Jun 2022 17:20:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/06/endbasic-0.9.html</guid><description>&lt;p>It is with great pleasure that I announce the release of EndBASIC 0.9.0 😎️.&lt;/p>
&lt;p>The major feature in this new release is the ability to &lt;strong>launch publicly-shared files via a click of a URL&lt;/strong> without having to create an account first. Here, try running my &lt;a href="https://repl.endbasic.dev/?run=jmmv/bounce.bas">&lt;code>jmmv/bounce.bas&lt;/code>&lt;/a> or &lt;a href="https://repl.endbasic.dev/?run=jmmv/paint.bas">&lt;code>jmmv/paint.bas&lt;/code>&lt;/a> demos in your browser, now!&lt;/p></description></item><item><title>EndBASIC 0.8: Now, with graphics!</title><link>https://jmmv.dev/2021/11/endbasic-0.8.html</link><pubDate>Thu, 11 Nov 2021 09:45:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2021/11/endbasic-0.8.html</guid><description>&lt;p>Graphics support has finally landed in EndBASIC and, with that, the 0.8 release is finally here.&lt;/p>
&lt;p>This release marks a huge milestone in the development of EndBASIC. Supporting graphics is something I&amp;rsquo;ve had in mind since the very beginning but had been procrastinating on until a couple of months ago. I feared everything that would be involved in delivering this feature, and to be fair, I was right: getting the desktop console to work on all platforms, and especially getting it to work in CI for automated testing, was tedious. But it&amp;rsquo;s done now.&lt;/p></description></item><item><title>EndBASIC 0.7: Hello, cloud!</title><link>https://jmmv.dev/2021/07/endbasic-0.7.html</link><pubDate>Sat, 03 Jul 2021 16:45:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2021/07/endbasic-0.7.html</guid><description>&lt;p>Several months have passed since the last EndBASIC release and, since then, you might have seen me talk nonstop about an &amp;ldquo;EndBASIC service&amp;rdquo; in social media&amp;hellip; which has sounded like vaporware. That changes today.&lt;/p>
&lt;p>After about four months of work, I am ecstatic to announce that EndBASIC 0.7 is here. And these haven&amp;rsquo;t been four months of idle time. No, no, no. It has taken four months of my scarce free time to deliver this because 0.7 is a humongous release on various fronts.&lt;/p></description></item><item><title>EndBASIC 0.6 release announcement</title><link>https://jmmv.dev/2021/02/endbasic-0.6.html</link><pubDate>Fri, 19 Feb 2021 06:30:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2021/02/endbasic-0.6.html</guid><description>&lt;p>After a very active month of development since the &lt;a href="https://jmmv.dev/2021/01/endbasic-0.5.html">0.5 announcement&lt;/a>, it is time to welcome EndBASIC 0.6!&lt;/p>
&lt;p>This new 0.6 release is super-exciting for three reasons:&lt;/p>
&lt;ul>
&lt;li>preliminary GPIO support in the standard library specifically tailored to the Raspberry Pi;&lt;/li>
&lt;li>multidimensional array support in the language; and&lt;/li>
&lt;li>availability of binary releases for the most common platforms.&lt;/li>
&lt;/ul>
&lt;p>You can dive right in by:&lt;/p>
&lt;ul>
&lt;li>visiting &lt;a href="https://repl.endbasic.dev/">https://repl.endbasic.dev/&lt;/a> for an interactive session,&lt;/li>
&lt;li>reading more about the project at &lt;a href="https://www.endbasic.dev/">https://www.endbasic.dev/&lt;/a>, or&lt;/li>
&lt;li>downloading and installing any of the new &lt;a href="https://github.com/endbasic/endbasic/releases/tag/endbasic-0.6.0">prebuilt binaries&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>But stick around and continue reading if you are interested in many more details about these major changes 😉&lt;/p></description></item><item><title>Embedding EndBASIC into a (Rust) program</title><link>https://jmmv.dev/2021/01/embedding-endbasic.html</link><pubDate>Tue, 26 Jan 2021 07:20:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2021/01/embedding-endbasic.html</guid><description>One thing that bothers me quite a lot about various language implementations is that the core of their interpreter isn&amp;rsquo;t clearly separate from their standard library. This makes it hard to embed those interpreters into other programs because it&amp;rsquo;s not obvious how to limit their side-effects and because the interpreter dependency can be heavy. In this post, we will see how EndBASIC&amp;rsquo;s design tries hard to keep the core as small as possible, and we will see some examples on how to use EndBASIC from Rust and vice versa.</description></item><item><title>EndBASIC 0.5 release announcement</title><link>https://jmmv.dev/2021/01/endbasic-0.5.html</link><pubDate>Sun, 24 Jan 2021 08:00:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2021/01/endbasic-0.5.html</guid><description>A month has passed since the 0.4.0 announcement so it is about time to say hello to yet another EndBASIC release because 0.5.0 is here! So, what&amp;rsquo;s new? Not much&amp;hellip; unless you look under the covers, in which case a &lt;em>ton&lt;/em> has changed. About 30% of the codebase has been affected in one way or another to improve general quality, so read on to see how.</description></item><item><title>Why am I wasting time on EndBASIC?</title><link>https://jmmv.dev/2021/01/why-endbasic.html</link><pubDate>Tue, 19 Jan 2021 07:10:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2021/01/why-endbasic.html</guid><description>&lt;p>If you have been following this blog or my social profiles for the last year, you are probably aware that &lt;a href="https://jmmv.dev/tags/endbasic">I have been working on something called EndBASIC&lt;/a>. You also probably know that this is a retro-looking BASIC interpreter written in Rust that &lt;a href="https://repl.endbasic.dev/">happens to run on the web&lt;/a>. And if you know those two things, you are probably wondering, like some of my friends do: why am I &lt;em>wasting&lt;/em> time developing such a useless project? &lt;strong>Because.&lt;/strong>&lt;/p></description></item><item><title>EndBASIC 0.4 release announcement</title><link>https://jmmv.dev/2020/12/endbasic-0.4.html</link><pubDate>Fri, 25 Dec 2020 19:30:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/12/endbasic-0.4.html</guid><description>&lt;p>About a month ago and after a long hiatus, I &lt;a href="https://jmmv.dev/2020/11/endbasic-0.3.html">published EndBASIC 0.3&lt;/a> and the adrenaline rush that came with it got my wheels spinning again full-steam ahead. So here I am today, ready to announce the 0.4 release. But&amp;hellip; &amp;ldquo;what could have possibly changed in just a month of someone&amp;rsquo;s free time&amp;rdquo;, you wonder? Enough, actually!&lt;/p>
&lt;p>EndBASIC 0.4 is the release that fulfills my original goal of being able to run a &amp;ldquo;guess the number&amp;rdquo; game. The &amp;ldquo;only&amp;rdquo; change needed after 0.3 to make this possible was the addition of random numbers, but these in turn required adding function calls to back &lt;code>RND()&lt;/code> and also supporting floating point numbers because that&amp;rsquo;s what this function is supposed to return.&lt;/p></description></item><item><title>Unit-testing a console app (a text editor)</title><link>https://jmmv.dev/2020/12/unit-testing-a-console-app.html</link><pubDate>Tue, 08 Dec 2020 10:00:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/12/unit-testing-a-console-app.html</guid><description>The most notable feature in EndBASIC 0.3 is its new full-screen console-based text editor. In this post, I describe why it is important and useful to unit-test a console app like this, and I will dive into how to implement unit tests that catch regressions and inefficiencies. Code samples are in Rust, but the concepts presented here are applicable to any language with minimal data abstraction facilities.</description></item><item><title>Using the builder pattern to define test scenarios</title><link>https://jmmv.dev/2020/12/builder-pattern-for-tests.html</link><pubDate>Fri, 04 Dec 2020 09:40:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/12/builder-pattern-for-tests.html</guid><description>&lt;p>I&amp;rsquo;ve been playing with the builder patter to express test scenarios in a succinct and declarative manner. I&amp;rsquo;ve liked the outcome and feel that this design can yield to pretty good test code, so I&amp;rsquo;ll dig through this idea here. Note that, while this post and the associated code talk about Rust, &lt;strong>the ideas presented here apply to any language&lt;/strong>. So don&amp;rsquo;t leave just because I said Rust!&lt;/p></description></item></channel></rss>