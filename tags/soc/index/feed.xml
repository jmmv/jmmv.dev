<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Soc on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/soc/index.html</link><description>Recent content in Soc on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Mar 2014 08:22:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/soc/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>GSoC 2014 idea: Port FreeBSD's old-style tests to ATF</title><link>https://jmmv.dev/2014/03/gsoc-2014-idea-port-freebsds-old-style.html</link><pubDate>Wed, 12 Mar 2014 08:22:00 -0400</pubDate><guid>https://jmmv.dev/2014/03/gsoc-2014-idea-port-freebsds-old-style.html</guid><description>&lt;p>Are you a student interested in contributing to a production-quality operating system by increasing its overall quality? If so, you have come to the right place!&lt;/p> &lt;p>As you may already know, the &lt;a href="https://www.google-melange.com/gsoc/homepage/google/gsoc2014">Google Summer of Code 2014 program&lt;/a> is on and &lt;a href="https://www.google-melange.com/gsoc/org2/google/gsoc2014/freebsd">FreeBSD has been accepted as a mentoring organization&lt;/a>. As it so happens, I have a project idea that may sound interesting to you.&lt;/p> &lt;p>During the last few months, we have been hard at work adding a standardized test suite to the FreeBSD upstream source tree as described in the &lt;a href="http://wiki.freebsd.org/TestSuite">TestSuite project page&lt;/a>. However, a test suite is of no use if it lacks a comprehensive collection of tests!&lt;/p></description></item><item><title>NetBSD in Google Summer of Code 2010</title><link>https://jmmv.dev/2010/03/netbsd-in-google-summer-of-code-2010.html</link><pubDate>Fri, 19 Mar 2010 04:36:00 -0400</pubDate><guid>https://jmmv.dev/2010/03/netbsd-in-google-summer-of-code-2010.html</guid><description>For the 6th year in a row, &lt;a href="http://www.netbsd.org/">NetBSD&lt;/a> is a mentoring organization for &lt;a href="http://code.google.com/soc/">Google Summer of Code&lt;/a> 2010!&lt;br />&lt;br />If you are a bright student willing to develop full-time for an open source project during this coming summer, consider applying with us! You will have a chance to work with very smart people and, most likely, in the area that you are most passionate about. NetBSD, being an operating system project, has offers for project ideas at all levels: from the kernel to the packaging system, passing by drivers, networking tools, user-space utilities, the system installer, automation tools and more!&lt;br />&lt;br />I would like to point you at the 3 project proposals I'm willing to directly mentor:&lt;br />&lt;ul>&lt;li>&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#optimize-atf">Optimize and speed-up ATF&lt;/a>: Make the testing framework blazing fast so that running the NetBSD automated tests does not take ages on slow platforms.&lt;br />&lt;/li>&lt;li>&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#reorganize-atf">Reorganize ATF to improve modularity&lt;/a>: Refactor pieces of the testing framework so that it is easier to redistribute, has cleaner interfaces and is easier to depend on from third-party projects.&lt;br />&lt;/li>&lt;li>&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#rewrite-pkg_comp">Rewrite pkg_comp with portability as a major goal&lt;/a>: Use Python to create a tool to automatically build binary packages from within a sandbox.&lt;/li>&lt;/ul>If you find any of the above projects interesting, or if you have any other project proposal that you think I could mentor, do not hesitate to &lt;a href="mailto:jmmv%20at%20netbsd%20dot%20org">contact me&lt;/a>. Feel free to send me a draft of &lt;a href="http://www.netbsd.org/contrib/soc-application.html">your application&lt;/a>, together with a bit of information about you, so that we can discuss your proposal and make sure it gets selected!&lt;br />&lt;br />Or, if none of the projects above interests you, please do check out the &lt;a href="http://www.netbsd.org/contrib/soc-projects.html">full list of NetBSD project proposals&lt;/a>. I'm sure you will find something that suits your interests :-)</description></item><item><title>NetBSD-SoC needs your application!</title><link>https://jmmv.dev/2009/04/netbsd-soc-needs-your-application.html</link><pubDate>Thu, 02 Apr 2009 05:46:00 -0400</pubDate><guid>https://jmmv.dev/2009/04/netbsd-soc-needs-your-application.html</guid><description>The Google Summer of Code 2009 application deadline for students is tomorrow and NetBSD has got very few applications so far. If you have the interest in working on a cool operating system project, where almost any project idea can fit, take the time to read &lt;a href="http://www.netbsd.org/contrib/soc-projects.html">our proposals&lt;/a> and apply! New, original ideas not listed there will also be considered.&lt;br />&lt;br />It'd be a pity if the number of assigned slots to NetBSD was small due to the low number of applications! We did much better past year.&lt;br />&lt;br />Note that there are a couple of &lt;a href="http://www.NetBSD.org/~jmmv/atf/">ATF&lt;/a>-related proposals in there. Help will be certainly welcome (by me ;-) in those areas!</description></item><item><title>ATF 0.6 released</title><link>https://jmmv.dev/2009/01/atf-06-released.html</link><pubDate>Sun, 18 Jan 2009 15:01:00 -0500</pubDate><guid>https://jmmv.dev/2009/01/atf-06-released.html</guid><description>I am very happy to announce the availability of the &lt;a href="http://www.netbsd.org/~jmmv/atf/news.html#20090118-atf-0-6-released">0.6 release&lt;/a> of &lt;a href="http://www.netbsd.org/~jmmv/atf/">ATF&lt;/a>. I have to apologize for this taking so long because the code has been mostly-ready for a while. However, doing the actual release procedure is painful. Testing the code in many different configurations to make sure it works, preparing the release files, uploading them, announcing the new release on multiple sites... not something I like doing often.&lt;br />&lt;br />Doing some late reviews, I have to admit that the code has some rough edges, but these could not delay 0.6 any more. The reason is that this release will unblock the &lt;a href="http://netbsd-soc.sourceforge.net/projects/atfify/">NetBSD-SoC atfify&lt;/a> project, making it possible to finally integrate all the work done in it into the main NetBSD source tree.&lt;br />&lt;br />Explicit thanks go to Lukasz Strzygowski. He was not supposed to contribute to ATF during his Summer of Code 2008 project, but he did, and he actually provided very valuable code.&lt;br />&lt;br />The next step is to update the NetBSD source tree to ATF 0.6. I have extensive local changes for this in my working copy, but I'm very tired at the moment. I think I'll postpone their commit until tomorrow so that I don't screw up something badly.&lt;br />&lt;br />Enjoy it and I'm looking for your feedback on the new stuff!</description></item><item><title>SoC 2008 Mentor Summit</title><link>https://jmmv.dev/2008/10/soc-2008-mentor-summit.html</link><pubDate>Sun, 26 Oct 2008 23:16:00 -0400</pubDate><guid>https://jmmv.dev/2008/10/soc-2008-mentor-summit.html</guid><description>The Google SoC 2008 Mentor Summit is now officially over. The summit has taken place during the whole weekend and has been pretty intensive. The organization of the whole event has been excellent thanks to the hard work of Leslie Hawthorn among others; sorry, can't remember your names... I'm very bad at this.&lt;div>&lt;br />&lt;a href="http://2.bp.blogspot.com/_xLbGV919cEE/SQU3jIfORjI/AAAAAAAABJg/C51qMYoli28/s1600-h/IMG_2194.JPG">&lt;img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 300px;" src="https://jmmv.dev/images/2008-10-26-IMG_2194.JPG"/>&lt;/a>&lt;br />&lt;div>We have had multiple sessions, ranging from technical ones such as distributed version control systems to more political ones such as how to deal with assholes in open source projects. There were lots of passionate people in these talks, and it was quite interesting to see it all. The cool thing, though, as opposed to other conferences, is that everyone here comes from a different project and background, so you get to see lots of different opinions and points of views for each topic.&lt;/div>&lt;div>&lt;br />&lt;/div>&lt;div>As regards the Google HQ campus, it is great. I thought the NYC offices were good, but these are spectacular to see. Unfortunately, there is not much to do out of them... so I'm not sure if it could be so good to work here for a long time.&lt;/div>&lt;div>&lt;br />&lt;a href="http://3.bp.blogspot.com/_xLbGV919cEE/SQU3o5aEhgI/AAAAAAAABJo/rDsws46ht00/s1600-h/IMG_2216.JPG">&lt;img style="display:block; margin:0px auto 10px; text-align:center;cursor:pointer; cursor:hand;width: 400px; height: 300px;" src="https://jmmv.dev/images/2008-10-26-IMG_2216.JPG"/>&lt;/a>&lt;br />&lt;/div>&lt;div>Now, I'm sitting in the San Jose airport (SJC) waiting for the flight back to NYC. Amazingly, there is free internet wireless connection and electrical plugs! Very, very nice detail. And there is few people around, which makes it very quiet and relaxed.&lt;/div>&lt;div>&lt;br />&lt;/div>&lt;div>Oh, and to those who will decipher this: some more mini golf training during the summit :P&lt;/div>&lt;/div></description></item><item><title>Live@NYC: ... or not; now in MTV!</title><link>https://jmmv.dev/2008/10/livenyc-or-not-now-in-mtv.html</link><pubDate>Fri, 24 Oct 2008 19:08:00 -0400</pubDate><guid>https://jmmv.dev/2008/10/livenyc-or-not-now-in-mtv.html</guid><description>I've landed this morning in San Francisco at 9.00am (which means I left NYC at 6.00am!) and went straight down to the Google Headquarters in Mountain View. No sleep at all except for a little bit of pseudo-sleep in the plane. The Google campus is really nice. It puts the NYC offices in an inferior level than I thought :P But the only problem is that the area surrounding the campus is basically empty. Very small houses and lots of space between them, which is not bad per se... but means that there really is not much to do.&lt;br />&lt;br />Anyway. What am I doing here? I am attending the Google Summer of Code 2008 Mentors Summit this weekend, but came a bit earlier to be able to do a couple of meetings with coworkers in the Mountain View office. Pretty exhausting day, and it is not close to over yet!&lt;br />&lt;br />Just enjoy the &lt;a href="http://picasaweb.google.com/jmmv84/VisitToGoogleHQMTV#">few photos I've taken so far&lt;/a>.&lt;br />&lt;br />PS: Been playing mini-golf on-board until I got an unasked segmentation fault.</description></item><item><title>Google Summer of Code 2008 and NetBSD</title><link>https://jmmv.dev/2008/03/google-summer-of-code-2008-and-netbsd.html</link><pubDate>Wed, 19 Mar 2008 06:36:00 -0400</pubDate><guid>https://jmmv.dev/2008/03/google-summer-of-code-2008-and-netbsd.html</guid><description>Google has launched the &lt;a href="http://code.google.com/soc/2008/">Summer of Code&lt;/a> program once again this year, and &lt;a href="http://www.netbsd.org/">NetBSD&lt;/a> is a mentoring organization for the fourth time as &lt;a href="http://mail-index.netbsd.org/netbsd-announce/2008/03/18/msg000014.html">announced in a netbsd-announce post&lt;/a>. Unless things go very wrong in the following days, I will not take part this year as a &lt;i>student&lt;/i> because I will be intering at Google SRE during the Summer!&lt;br />&lt;br />However, I will try to become a mentor for the "&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#convert-regress-to-atf">Convert all remaining regression tests to ATF&lt;/a>" project. If you are looking for some interesting idea to apply for, this is a good one! Why?&lt;br />&lt;ul>&lt;li>It will let you get into NetBSD internals in almost all areas of the system: you'll need to understand how the source tree is organized, how to add new components to it (because tests are almost in all aspects regular programs), how the current pieces of the system interact with each other...&lt;br />&lt;/li>&lt;li>You will need to gain knowledge in some areas (such as the kernel or the libraries) to be able to port tests from the old framework (if it deserves that name ;-) to the new one and, if you are really up to it, even add new tests for functionality that is currently uncovered by the test suite. But adding new tests is something you will not be required to do, because the sole task of migrating the existing ones is a huge task already.&lt;br />&lt;/li>&lt;li>Get involved in &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/">ATF&lt;/a>'s development because, as you study the existing test cases and their requirements, you will most likely find that it lacks some important functionality to make things really straightforward.&lt;/li>&lt;li>And, of course, make a unvaluable contribution to the NetBSD operating system. Having a public test suite with high coverage means that the system will gain quality. Yes, you will most likely uncover bugs in many areas of the system and give them enough exposure so that someone else may fix them.&lt;/li>&lt;/ul>Note that this project is really a Summer of &lt;i>Code&lt;/i> project. It does not have a long design phase on its own so, once you have got used to the system and ATF, you'll just code and immediately make useful contributions. In the past, projects that had a heavy design phase involved were not good because, in the end, the student did not finish the code on time.&lt;br />&lt;br />So... don't hesitate to apply! I'm looking forward to see your applications for this project :-)</description></item><item><title>SoC: Second preview of NetBSD with ATF</title><link>https://jmmv.dev/2007/08/soc-second-preview-of-netbsd-with-atf.html</link><pubDate>Mon, 20 Aug 2007 15:49:00 -0400</pubDate><guid>https://jmmv.dev/2007/08/soc-second-preview-of-netbsd-with-atf.html</guid><description>Reposting from the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/news.html#20070820-second-preview-of-netbsd-with-atf">original ATF news entry&lt;/a>:&lt;br />&lt;blockquote>&lt;/blockquote>&lt;p>&lt;/p>&lt;p>&lt;/p>&lt;blockquote>&lt;p>I have just updated the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/news.html#20070808-first-preview-of-netbsd-with-atf">first preview of NetBSD-current&lt;/a> release builds with ATF merged in to match the ATF 0.1 release published today. As already stated in the old news item: These will ease testing to the casual user who is interested in this project because he will not need to mess with patches to the NetBSD source tree nor rebuild a full release, which is a delicate and slow process. For the best experience, these releases are meant to be installed from scratch even though you can also do an upgrade of a current installation. They will give you a preview of how a NetBSD installation will look like once ATF is imported into it; we are not sure when that will happen, though.&lt;/p></description></item><item><title>SoC: Some statistics</title><link>https://jmmv.dev/2007/08/soc-some-statistics.html</link><pubDate>Mon, 20 Aug 2007 12:24:00 -0400</pubDate><guid>https://jmmv.dev/2007/08/soc-some-statistics.html</guid><description>Here go some statistics about what has been done during the SoC 2007 program as regards ATF:&lt;br />&lt;br />The &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/repository.html">repository&lt;/a> weights at 293 revisions, 1,174 certificates (typically 4 per revision, but some revisions have more) and 221 files. This includes ATF, the patches to merge it into the NetBSD build tree and the website sources. (&lt;tt>mtn db info&lt;/tt> will give you some more interesting details.)&lt;br />&lt;br />The &lt;a href="http://mtn-host.prjek.net/viewmtn/atf/revision/info/b5177db1b525d850f0df932506cf6a0910eb1696">clean sources of ATF 0.1&lt;/a> (not counting the files generated by the GNU autotools) take 948Kb and are 20,607 lines long (wow!). This includes the source code, the manual pages, the tests and all other files included in the distribution.&lt;br />&lt;br />The &lt;a href="http://mtn-host.prjek.net/viewmtn/atf/revision/info/e1be38c471d5e70bf00c38563cbd5fb6f925cb93">patches to merge ATF into NetBSD&lt;/a>, according to diffstat, change 209 files, do 6,299 line insertions and 4,583 line deletions. Aside merging ATF into NetBSD, these changes also convert multiple existing regression tests to the new framework.&lt;br />&lt;br />As regards the time I have spent on it... I don't know, but it has been a lot. It should have been more as I had to postpone the start of coding some weeks due to university work, but I think the results are quite successful and according to the expectations. I have been able to cover all the requirements listed in the &lt;a href="http://netbsd-soc.sourceforge.net/projects/atf/">NetBSD-SoC project page&lt;/a> and done some work on the would-be-nice ones.&lt;br />&lt;br />I am eager to see the results of the other NetBSD-SoC 2007 projects as there was very interesting stuff in them :-)</description></item><item><title>SoC: ATF 0.1 released</title><link>https://jmmv.dev/2007/08/soc-atf-01-released.html</link><pubDate>Mon, 20 Aug 2007 08:03:00 -0400</pubDate><guid>https://jmmv.dev/2007/08/soc-atf-01-released.html</guid><description>To conclude the development of ATF as part of SoC, I've released a 0.1 version coinciding with the coding deadline (later today). This clearly draws a line between what has been done during the SoC program and what will be done afterwards.&lt;br />&lt;br />See the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/news.html#20070820-atf-0-1-released">official announcement&lt;/a> for more details!&lt;br />&lt;br />I hope you enjoy it as much as I did working on it.</description></item><item><title>SoC: Status report</title><link>https://jmmv.dev/2007/08/soc-status-report_15.html</link><pubDate>Wed, 15 Aug 2007 13:43:00 -0400</pubDate><guid>https://jmmv.dev/2007/08/soc-status-report_15.html</guid><description>SoC's deadline is just five days away! I'm quite happy with the status of my project, &lt;a href="http://netbsd-soc.sourceforge.net/projects/atf/">ATF&lt;/a>, but it will require a lot more work to be in a decent shape — i.e. ready to be imported into NetBSD — and there really is no time to get it done in five days. Furthermore, it is still to unstable (in the sense that it changes a lot) so importing it right now could cause a lot of grief to end users. However, after a couple of important changes, it may be ready for a 0.1 release, and that's what I'm aiming for.&lt;br />&lt;br />I have to confess again that some parts of the code are horrible. That's basically because it has been gaining features in an iterative way, all which were not planned beforehand... so it has ended up being hack over hack. But, don't worry: as long as there is good test coverage for all the expected features, this can easily be fixed. With a decent test suite, I'll be able to later rewrite any piece of code and be pretty sure that I have not broken anything important. (In fact, I've already been doing that for the most inner code with nice results.)&lt;br />&lt;br />So what has changed since the &lt;a href="http://julipedia.blogspot.com/2007/08/soc-first-preview-of-netbsd-with-atf.html">preview&lt;/a>?&lt;br />&lt;ul>&lt;li>All files read by ATF as well as all data formats used for serialization of data have now a header that specifies their format (a type and a version). This is very important to have from the very beginning so that the data formats can easily be changed in the future (which will certainly happen).&lt;/li>&lt;li>Rewrote how test programs and &lt;tt>atf-run&lt;/tt> print their execution status. Now, the two print a format that is machine-parseable and which is "sequential": reading the output from top to bottom, you can immediately know what the program is doing at the moment without having to wait for future data.&lt;/li>&lt;li>Added the &lt;tt>atf-report&lt;/tt> tool, which gathers the output of &lt;tt>atf-run&lt;/tt> and generates a user-friendly report. At the moment it outputs plain text only, but XML (and maybe HTML) are planned. The previous point was a pre-requisite for this one.&lt;/li>&lt;li>Merged multiple implementation files into more generic modules.&lt;/li>&lt;li>Merged the libatf and libatfprivate libraries into a single one. The simpler the better.&lt;/li>&lt;li>Added build-time tests for all public headers, to ensure that they can be included without errors.&lt;/li>&lt;li>Implemented run-time configuration variables for test programs and configuration files.&lt;/li>&lt;/ul>Wow, that's a lot of stuff :-)&lt;br />&lt;br />And talking with my mentor five days ago, we got to the following list of pending work to get done before the deadline:&lt;br />&lt;ol>&lt;li>Configuration files. Already done as of an hour ago!&lt;/li>&lt;li>A plain text format that clearly describes the results of the test cases (similar to what &lt;tt>src/regress/README&lt;/tt> explains). I haven't looked at that yet, but this will be trivial with the new &lt;tt>atf-report&lt;/tt> tool.&lt;/li>&lt;li>Would be nice: HTML output. Rather easy. But I'm unsure about this point: it may be better to define a XML format only and then use xsltproc to transform it.&lt;/li>&lt;li>Manual pages: A must for 0.1 (even if they are not too detailed), but not really required for the evaluation.&lt;/li>&lt;li>Code cleanups: Can be done after SoC, but I personally dislike showing ugly code. Unfortunately there is not enough time to spend on this. Cleaning up a module means: rewriting most of it, documenting each function/class and adding exhaustive unit tests for it. It is painful, really, but the results are rewarding.&lt;br />&lt;/li>&lt;li>Keep the NetBSD patches in sync with development: I'm continuously doing that!&lt;/li>&lt;/ol>Let's get back to work.</description></item><item><title>SoC: First preview of NetBSD with ATF</title><link>https://jmmv.dev/2007/08/soc-first-preview-of-netbsd-with-atf.html</link><pubDate>Wed, 08 Aug 2007 06:44:00 -0400</pubDate><guid>https://jmmv.dev/2007/08/soc-first-preview-of-netbsd-with-atf.html</guid><description>Reposting from the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/news.html#20070808-first-preview-of-netbsd-with-atf">original ATF news entry&lt;/a>:&lt;br />&lt;blockquote>I have just uploaded some NetBSD-current release builds with ATF merged in. These will ease testing to the casual user who is interested in this project because he will not need to mess with patches to the NetBSD source tree nor rebuild a full release, which is a delicate and slow process. For the best experience, these releases are meant to be installed from scratch even though you can also do an upgrade of a current installation. They will give you a preview of how a NetBSD installation will look like once ATF 0.1 is made public, which should happen later this month.&lt;br />&lt;br />For more details see my &lt;a href="http://mail-index.netbsd.org/current-users/2007/08/08/0000.html">post to the NetBSD's current-users&lt;/a> mailing list.&lt;/blockquote>Waiting for your feedback :-)&lt;br />&lt;br />&lt;b>Edit (Aug 20th)&lt;/b>: Fixed a link.</description></item><item><title>SoC: Status report</title><link>https://jmmv.dev/2007/07/soc-status-report_28.html</link><pubDate>Sat, 28 Jul 2007 04:07:00 -0400</pubDate><guid>https://jmmv.dev/2007/07/soc-status-report_28.html</guid><description>It has already been a week since the &lt;a href="http://julipedia.blogspot.com/2007/07/soc-atf-self-testing.html">last SoC-related post&lt;/a>, so I owe you an status report.&lt;br />&lt;br />Development has continued at a constant rate and, despite I work a lot on the project, it may seem to advance slowly from an external point of view. The thing is that getting the ATF core components complete and right is a tough job! Just look at the &lt;a href="http://mtn-host.prjek.net/viewmtn/atf/revision/file/1e5eacfc5e17dffcf1c5c64cb781c770b68d1d35/TODO">current and incomplete TODO list &lt;/a>to see what I mean.&lt;br />&lt;br />Some things worth to note:&lt;br />&lt;ul>&lt;li>The NetBSD cross-build tool-chain no longer requires a C++ compiler to build the atf-compile host tool. I wrote a simplified version in POSIX shell to be used as the host tool alone (not to be installed). This is also used by the ATF's distfile to allow "cross-building" its own test programs.&lt;br />&lt;/li>&lt;li>Improved the cleanup procedure of the test case's work directories by handling mount points in them. This is done through a new tool called atf-cleanup.&lt;/li>&lt;li>Added a property to allow test cases specify if they require root privileges or not.&lt;br />&lt;/li>&lt;li>Many bug fixes, cleanups and new test cases; these are driving development right now.&lt;/li>&lt;/ul>On the NetBSD front, there have also been several cosmetic improvements and bug fixes, but most importantly I've converted the &lt;a href="http://cvsweb.netbsd.org/bsdweb.cgi/src/regress/sys/fs/tmpfs/">tmpfs' test suite&lt;/a> to ATF. This conversion is what has spotted many bugs and missing features in ATF's code. The TODO file has grown basically due to this.&lt;br />&lt;br />So, at the moment, both the &lt;tt>regress/bin&lt;/tt> and &lt;tt>regress/sys/fs/tmpfs&lt;/tt> trees in NetBSD have been converted to ATF. I think that's enough for now and that I should focus on adding the necessary features to ATF to improve these tests. One of these is to add support for a configuration file to let the user specify how certain tests should behave; e.g. how to become root or which specific file system to use for certain tests.&lt;br />&lt;br />I also have a partial implementation to add a "fork" property to test cases to execute them in subprocesses. This way they will be able to mess all they want with the open file descriptors without disturbing the main test program. But to get here, I first need to clean up the reporting of test case's results.&lt;br />&lt;br />On the other hand, I also started preparing manual pages for the user tools as some of them should remain fairly stable at this point.</description></item><item><title>SoC: ATF self-testing</title><link>https://jmmv.dev/2007/07/soc-atf-self-testing.html</link><pubDate>Fri, 20 Jul 2007 10:52:00 -0400</pubDate><guid>https://jmmv.dev/2007/07/soc-atf-self-testing.html</guid><description>&lt;a href="http://www.netbsd.org/%7Ejmmv/atf/">ATF&lt;/a> is a program, and as happens with any application, it must be (automatically) tested to ensure it works according to its specifications. But as you already know, ATF is a testing framework so... is it possible to automatically test it? Can it test itself? Should it do it? The thing is: it can and it should, but things are not so simple.&lt;br />&lt;br />ATF &lt;i>can&lt;/i> test itself because it is possible to define test programs through ATF to check the ATF tools and libraries. ATF &lt;i>should&lt;/i> test itself because the resulting test suite will be a great source of example code and because its execution will be on its own a good stress test for the framework. See the &lt;a href="http://mtn-host.prjek.net/viewmtn/atf/revision/browse/afd5e705f02e7c57495b3a7f346c80d9592a19f3/tests/atf">tests/atf&lt;/a> directory to check what I mean; specially, the &lt;a href="http://mtn-host.prjek.net/viewmtn/atf/revision/file/afd5e705f02e7c57495b3a7f346c80d9592a19f3/tests/atf/units/t_fs.cpp">unit tests for the fs module&lt;/a>, which I've just committed, are quite nice :-) (For the record: there currently are 14 test programs in that directory, which account for a total of 60 test cases.)&lt;br />&lt;br />However, ATF should &lt;i>not&lt;/i> be tested &lt;i>exclusively&lt;/i> by means of itself. If it did so, any failure (even the most trivial one) in the ATF's code could result in false positives or false negatives during the execution of the test suite, leading to wrong results hard to discover and diagnose. Imagine, for example, that a subtle bug made the reporting of test failures to appear as test passes. All tests could start to succeed immediately and nobody could easily notice, surely leading to errors in further modifications.&lt;br />&lt;br />This is why a bootstrapping test suite is required: one that ensures that the most basic functionality of ATF works as expected, but which does not use ATF to run itself. This additional test suite is already present in the source tree, and is written using GNU Autotest, given that I'm using the GNU Autotools as the build system. Check the &lt;a href="http://mtn-host.prjek.net/viewmtn/atf/revision/browse/afd5e705f02e7c57495b3a7f346c80d9592a19f3/tests/bootstrap">tests/bootstrap&lt;/a> directory to see what all this is about.&lt;br />&lt;br />ATF's self-testing is, probably, the hardest thing I've encountered in this project so far. It is quite tricky and complex to get right, but it's cool! Despite being hard, having a complete test suite for ATF is a &lt;i>must&lt;/i> so it cannot be left aside. Would you trust a testing framework if you could not quickly check that it worked as advertised? I couldn't ;-)</description></item><item><title>SoC: Web site for ATF</title><link>https://jmmv.dev/2007/07/soc-web-site-for-atf.html</link><pubDate>Mon, 16 Jul 2007 05:01:00 -0400</pubDate><guid>https://jmmv.dev/2007/07/soc-web-site-for-atf.html</guid><description>While waiting for a NetBSD release build to finish, I've prepared the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/">web site for ATF&lt;/a>. It currently lacks information in a lot of areas, but the most important ones for now &amp;mdash; the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/rss-news.xml">RSS feed for news&lt;/a> and the &lt;a href="http://www.netbsd.org/%7Ejmmv/atf/repository.html">Repository page&lt;/a> &amp;mdash; are quite complete.&lt;br />&lt;br />Hope you like it! Comments welcome, of course :-)</description></item></channel></rss>