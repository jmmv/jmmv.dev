<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ps3 on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/ps3/index.html</link><description>Recent content in Ps3 on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 28 Feb 2008 17:27:00 -0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/ps3/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Software bloat, 2</title><link>https://jmmv.dev/2008/02/software-bloat-2.html</link><pubDate>Thu, 28 Feb 2008 17:27:00 -0500</pubDate><guid>https://jmmv.dev/2008/02/software-bloat-2.html</guid><description>A long while ago &amp;mdash; just before buying the MacBook Pro &amp;mdash; I already &lt;a href="http://julipedia.blogspot.com/2006/12/software-bloat.html">complained about software bloat&lt;/a>. A year and two months later, it is time to complain again.&lt;br />&lt;br />I am thinking on renewing my MacBook Pro assuming I can sell this one for a good price. The reasons for this are to get slightly better hardware (more disk, better GPU and maybe 4GB of RAM) and software updates. The problem is: if I am able to find a buyer, I will be left without a computer for some days, and that's not a good scenario. I certainly don't want to order the new one without being certain that I will be paid enough for the current one.&lt;br />&lt;br />So yesterday I started assembling some old components I had lying around aiming at having an old but functional computer to work with. But today I realized that I also had the PlayStation 3 with Fedora 8 already installed, and that it'd be enough to use as a desktop for a week or so. I had trimmed down the installation to the bare minimum so that it'd boot as fast as possible and to leave free resources for testing Cell-related stuff. But if I wanted to use the PS3 as a desktop, I needed, for example, GNOME.&lt;br />&lt;br />Ew. Doing a &lt;tt>yum groupinstall "GNOME Desktop Environment"&lt;/tt> took quite a while, and not because of the network connection. But even if we leave that aside, starting the environment was painful. &lt;i>Really&lt;/i> painful. And Mono was not there, at all! It is amazing how unusable the desktop is with "only" 256MB of RAM; the machine is constantly going to swap, and the disk being slow does not help either. I still remember the days when 256MB was a lot, and desktop machines were snappy enough with only half of that, or even less.&lt;br />&lt;br />OK, so GNOME is a lot for 256MB of RAM. I am now writing this from the PS3 itself running WindowMaker. Which unfortunately does not solve all the problems &amp;mdash; and the biggest one is that it is not a desktop environment. Firefox also requires lots of resources to start, and doing something else in the background still makes the machine use swap. (Note that I have disabled almost all of the system services enabled by default in Fedora, including SELinux.)&lt;br />&lt;br />If I finally sell my MBP, this will certainly be enough for a few days... but it's a pity to see how unusable it is. (Yeah, by today's standards, the PS3 is extremely short on RAM, I know, but GNOME used to run quite well with this amount of RAM just a few years ago.)</description></item><item><title>Games: Resistance: Fall of Man</title><link>https://jmmv.dev/2007/11/games-resistance-fall-of-man.html</link><pubDate>Mon, 05 Nov 2007 04:51:00 -0500</pubDate><guid>https://jmmv.dev/2007/11/games-resistance-fall-of-man.html</guid><description>Yesterday night I finished playing "&lt;a href="http://www.resistancefallofman.com/">Resistance: Fall of Man&lt;/a>", a game that came with the PlayStation 3 Starter Pack I bought. It was not as long as I expected but found it to be a very good game. The storytelling, sound and gameplay was nice, but I cannot judge the graphics. I already &lt;a href="http://julipedia.blogspot.com/2007/10/got-it-ps3.html">showed you the crappy monitor&lt;/a> used with the PS3... so I'll surely go through the whole game again when I get a nicer screen.&lt;br />&lt;br />One specific thing I liked, when comparing it to other FPS such as Doom 3 or F.E.A.R., was that you barely have to use the flashlight, which in other games gets boring after a while. Well... I guess this is because Resistance was not meant to be a frightening game, as those other two are. Another point in favor is that the game has a nice set of guns, some of which are pretty original and different to all other games I've seen in this area. And it's hard to run out of ammo, at least in the most basic (but useful) guns.&lt;br />&lt;br />Speaking of other games, there are some levels that will remind you a lot to Call of Duty, and some others to Half Life 2. Not bad, but seems like developers of FPS are running out of ideas.&lt;br />&lt;br />To conclude, let me say that playing with the Sixaxis controller, as opposed to a keyboard plus mouse, was extra nice. It was very difficult to get used to it, but in the end makes for a good gaming experience. I'm now willing to try Metroid Prime 3 or Red Stell on the Wii with its Wiimote, which surely are better in this regard.&lt;br />&lt;br />Recommended game :-)</description></item><item><title>Got it! (The PS3)</title><link>https://jmmv.dev/2007/10/got-it-ps3.html</link><pubDate>Sun, 14 Oct 2007 13:59:00 -0400</pubDate><guid>https://jmmv.dev/2007/10/got-it-ps3.html</guid><description>A bit more than a week ago, I posted about &lt;a href="http://julipedia.blogspot.com/2007/10/considering-to-buy-ps3.html">considering to buy a PlayStation 3&lt;/a> and, finally, yesterday evening I took the plunge and bought a &lt;i>Starter Pack&lt;/i> that comes with a PlayStation 3 (60GB model, about to be deprecated), 2 Sixaxis controllers (I know the DualShock 3 is about to be published) and two games (&lt;i>Resistance: Fall of Man&lt;/i> and &lt;i>Motorstorm&lt;/i>).&lt;br />&lt;br />I love the machine so far and think that the money was well spent, even though I haven't had a chance to install Linux yet. Sincerely, I tried but failed: Fedora 8 (Test 3) doesn't seem to be supported by the installer, but I'll keep trying.&lt;br />&lt;br />My setup:&lt;br />&lt;br />&lt;a href="http://1.bp.blogspot.com/_xLbGV919cEE/RxJai5mloCI/AAAAAAAAACY/2Xf7YtqxnYg/s1600-h/IMG_0427.JPG">&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="https://jmmv.dev/images/2007-10-14-IMG_0427.JPG" />&lt;/a>&lt;br />But this screws everything up:&lt;br />&lt;br />&lt;a href="http://4.bp.blogspot.com/_xLbGV919cEE/RxJajpmloDI/AAAAAAAAACg/yMFf68bTmJI/s1600-h/IMG_0429.JPG">&lt;img style="margin: 0px auto 10px; display: block; text-align: center; cursor: pointer;" src="https://jmmv.dev/images/2007-10-14-IMG_0429.JPG" />&lt;/a>&lt;br />Eww, ugly, isn't it? ;-) What's the point of a machine able to output Full HD when I only have this crappy monitor? Specially when the signal of the PS3 is going through an old Avermedia TV Phone card plugged into an old computer that is later connected to this flat panel though an analog VGA connection. Lots of image quality loss! (The Linux console looks even uglier. No joy in using it as a desktop system with this setup, as I wanted to do.)&lt;br />&lt;br />By the way, the monitor is showing the &lt;a href="http://folding.stanford.edu/">Folding@Home&lt;/a> client bundled in the PS3 system.</description></item><item><title>Considering to buy a PS3</title><link>https://jmmv.dev/2007/10/considering-to-buy-ps3.html</link><pubDate>Fri, 05 Oct 2007 07:53:00 -0400</pubDate><guid>https://jmmv.dev/2007/10/considering-to-buy-ps3.html</guid><description>For the last couple of weeks, I've been considering to get a PlayStation 3. Not because of gaming, as I'm not a hardcore gamer, but because of the development platform it provides: a rather compact and cheap machine with an heterogeneous multiprocessor — the &lt;a href="http://en.wikipedia.org/wiki/Cell_microprocessor">Cell Broadband Engine&lt;/a> — that can easily run third-part OSes. My current research tasks focus on this area, so having a personal Cell machine at home to tinker with would be nice.&lt;br />&lt;br />Sure, we do already have a PS3 at the department and access to the Cell blades at the &lt;a href="http://www.bsc.es/">BSC,&lt;/a> but none of these are easy to access physically and they are used by other researchers to do work. Leaving them unusable or doing drastic changes to the installed systems could annoy them. (OK, the PS3 is here to allow us to install custom kernels and do more bizarre changes, but still people is working on it periodically.)&lt;br />&lt;br />But making the decision is hard.&lt;br />&lt;br />Pros:&lt;br />&lt;ul>&lt;li>A machine with a Cell processor. Ideal for my current work.&lt;br />&lt;/li>&lt;li>A Blu-ray player.&lt;/li>&lt;li>Cheap considering the above two points.&lt;/li>&lt;li>Additionally *grin*, it's a gaming machine. Never owned one myself.&lt;br />&lt;/li>&lt;li>Installing third-party OSes is supported by the official firmware.&lt;/li>&lt;li>Possibility to install NetBSD and help in the port.&lt;/li>&lt;li>Possibility to try other distributions of Linux rather than the ones officially supported by the Cell SDK. (We are currently use Fedora 6 on the PS3 at the department, and I don't like it that much, but I can't easily convince my tutor to try something else.)&lt;br />&lt;/li>&lt;li>Easy access to the machine, with a monitor and keyboard.&lt;/li>&lt;li>Maybe provide a "decent" desktop computer for lightweight tasks.&lt;br />&lt;/li>&lt;li>I've heard rumors of a DVB kit for the PS3 coming in christmas. This could be a great selling point for me.&lt;br />&lt;/li>&lt;/ul>Cons:&lt;br />&lt;ul>&lt;li>Considering it's a gaming machine, it's too darn expensive.&lt;/li>&lt;li>In my eyes, it's the worst third-generation gaming machine nowadays. The Xbox 360 has a lot more games. The Wii has the Wiimote (and my brother already owns this, so I can play with it if I want to). And as I already said, I'm not a hardcore gamer (and don't want to be one). But hey, I'd be getting a gaming machine, but the worst option...&lt;br />&lt;/li>&lt;li>I'd also have to buy a monitor for it, and flat displays above 22" (the ones that support 1080 lines) are not cheap. Sum this (even if I'd end up with a 20" one) to the PS3's price and a couple of games.&lt;/li>&lt;li>It's ugly, but oh well, you can surely have a different opinion.&lt;/li>&lt;li>I'm afraid I'd not use as much as I think I'd do now.&lt;br />&lt;/li>&lt;/ul>Any other points? I see I listed more pros than cons, but still... I'm unsure.&lt;br />&lt;br />&lt;span style="font-weight: bold;">Update (Sep 6th)&lt;/span>: And now, Sony has officially &lt;a href="http://uk.reuters.com/article/technologyNews/idUKN0526033820071006">announced&lt;/a> a price drop for the PS3...</description></item><item><title>PFC report almost ready</title><link>https://jmmv.dev/2007/06/pfc-report-almost-ready.html</link><pubDate>Tue, 19 Jun 2007 11:25:00 -0400</pubDate><guid>https://jmmv.dev/2007/06/pfc-report-almost-ready.html</guid><description>The deadline for &lt;a href="http://julipedia.blogspot.com/2007/01/pfc-subject-chosen.html">my PFC&lt;/a> (the project that will conclude my computer science degree) is approaching. I have to hand out the final report next week and present the project on July 6th. Its title is "&lt;span style="font-style: italic;">Efficient resource management in heterogeneous multiprocessor systems&lt;/span>" and its basic goal is to inspect the poor management of such machines in current operating systems and how this situation could be improved in the future.&lt;br />&lt;br />Our specific case study has been the Cell processor, the PlayStation 3 and Linux, as these form a clear example of an heterogeneous multiprocessor system that may become widespread due to its relatively cheap price and the attractive features (gaming, multimedia playback, etc.) it provides to a "home user".&lt;br />&lt;br />Most of the project has been an analysis of the current state of the art and the proposal of ideas at an abstract level. Due to timing constraints and the complexity of the subject (should I also mention bad planning?), I have been unable to implement most of them even though I wanted to do so at the very beginning. The code I've done is so crappy that I won't be sharing it anytime soon, but if there is interest I might clean it up (I mean, rewrite it from the ground up) and publish it to a wider audience.&lt;br />&lt;br />Anyway, to the real point of this post. I've published an &lt;a href="http://www.netbsd.org/%7Ejmmv/PFC/report.pdf">almost definitive copy of the final report&lt;/a> so that you can take a look at it if you want to. I will certainly welcome any comments you have, be it mentioning bugs, typos, wrong explanOctations or anything! Feel free to post them as comments here or to &lt;a href="mailto:jmerino%20AT%20ac%20DOT%20upc%20DOT%20edu">send me a mail&lt;/a>, but do so before next Monday as that's the deadline for printing. Many thanks in advance if you take the time to do a quick review!&lt;br />&lt;br />(And yes... this means I'll be completely free from now on to work on my SoC project, which is being delayed too much already...)&lt;br />&lt;br />&lt;b>Edit (Oct 17th)&lt;/b>: Moved the report in the server; fixed the link here.</description></item><item><title>Building an updated kernel for the PS3</title><link>https://jmmv.dev/2007/03/building-updated-kernel-for-ps3.html</link><pubDate>Fri, 16 Mar 2007 04:25:00 -0400</pubDate><guid>https://jmmv.dev/2007/03/building-updated-kernel-for-ps3.html</guid><description>The mainstream Linux sources have some support for the PlayStation 3, but it is marked as incomplete. Trying to boot such a kernel results in a stalled machine, as the kernel configuration option says:&lt;br />&lt;blockquote>CONFIG_PPC_PS3: This option enables support for the Sony PS3 game console and other platforms using the PS3 hypervisor. Support for this platform is not yet complete, so enabling this will not result in a bootable kernel on a PS3 system.&lt;/blockquote>To make things easier, I'd simply have used the Linux sources provided by YellowDog Linux 5 (YDL5), which correspond to a modified 2.6.16 kernel. However, as I have to do some kernel development on this platform, I objected to using such old sources: when developing for an open source project, it is much better to use the development branch of the code — if available — because custom changes will remain synchronized with mainstream changes. This means that, if those changes are accepted by the maintainers, it will be a lot easier to later merge them with the upstream code.&lt;br />&lt;br />So, after a bit of fiddling, I found the public kernel branch used to develop for the PS3. It is named &lt;tt>ps3-linux&lt;/tt>, is maintained by Geoff Levand and can be found in the kernel's git repository under the project &lt;a href="http://git.kernel.org/?p=linux/kernel/git/geoff/ps3-linux.git;a=summary">linux/kernel/git/geoff/ps3-linux.git&lt;/a>.&lt;br />Fetching the code was "interesting". I was (and still am) a novice to &lt;a href="http://git.or.cz/">git&lt;/a>, but fortunately my prior experiences with CVS, Subversion and specially Monotone helped to understand what was going on.&lt;br />&lt;br />Let's now see how to fetch the code, cross-build a custom kernel and install it on the PS3 using YDL5.&lt;br />&lt;br />To checkout the latest code, which at this moment corresponds to a patched Linux 2.6.21-rc3 sources, do this:&lt;br />&lt;br />&lt;tt>$ git clone git://git.kernel.org/pub/scm/linux/kernel/git/geoff/ps3-linux.git ps3-linux&lt;/tt>&lt;br />&lt;br />This will clone the &lt;tt>ps3-linux&lt;/tt> project from the main repository and leave it in a directory with the same name. You can keep it up to date by running &lt;tt>git pull&lt;/tt> within the directory, but I'm not going to talk about git any more today.&lt;br />&lt;br />As I cross-compile the PS3 kernel from a FC6 Intel-based machine with the Cell SDK 2.0, I need to tell it which is the target platform and which is the cross-compiler before being able to build or even configure a kernel. I manually add these lines to the top-level &lt;tt>Makefile&lt;/tt>, but setting them in the environment should work too:&lt;br />&lt;br />&lt;tt>ARCH=powerpc&lt;br />&lt;br />CROSS_COMPILE=ppu-&lt;/tt>&lt;br />&lt;br />Now you can create a sample configuration file by executing the following command inside the tree:&lt;br />&lt;br />&lt;tt>$ make ps3_defconfig&lt;/tt>&lt;br />&lt;br />Then proceed to modify the default configuration to your likings. To ease development, I want my kernels to be as small and easy to install as possible; this reduces the test-build-install-reboot cycle to the minimum (well, not exactly; see below). Therefore I disable all stuff I do not need, which includes modules support. Why? Keeping all the code in a single image will make later installation a lot easier.&lt;br />&lt;br />Once the kernel is configured, it is time to build it. But before doing so you need to install a helper utility used by the PS3 build code: the &lt;a href="http://dtc.ozlabs.org/">Device Tree Compiler&lt;/a> (or dtc). Fetch its sources from the git repository that appears in that page, run &lt;tt>make&lt;/tt> to build it and manually install the &lt;tt>dtc&lt;/tt> binary into &lt;tt>/usr/local/bin&lt;/tt>.&lt;br />&lt;br />With the above done, just run &lt;tt>make&lt;/tt> and wait until your kernel is built. Then copy the resulting &lt;tt>vmlinux&lt;/tt> file to your PS3; I put mine in &lt;tt>/boot/vmlinux-jmerino&lt;/tt> to keep its name version-agnostic and specific to my user account. Note that I do not have to mess with modules as I disabled them; otherwise I'd have to copy them all to the machine — or alternatively set up a NFS root for simplicity as described in &lt;a href="http://www.kernel.org/pub/linux/kernel/people/geoff/cell/ps3-nfs-root-howto.txt">Geoff Levand's HOWTO&lt;/a>.&lt;br />&lt;br />To boot the kernel, you should know that the PS3 uses the &lt;tt>kboot&lt;/tt> boot loader, a minimal Linux system that chainloads another Linux system by means of the &lt;tt>kexec&lt;/tt> functionality. It is very powerful, but the documentation is scarce. Your best bet is to mimic the entries already present in the file. With this in mind, I added the following line to &lt;tt>/etc/kboot.conf&lt;/tt>:&lt;br />&lt;br />&lt;tt>jmerino='/dev/sda1:/vmlinux-jmerino root=/dev/sda2 init=/sbin/init 4'&lt;/tt>&lt;br />&lt;br />I'd much rather fetch the kernel from a TFTP server, but I have not got this to work yet. Anyway, note that the above line does &lt;i>not&lt;/i> specify an &lt;tt>initrd&lt;/tt> image, although all the other entries in the file do. I did this on purpose: the less magic in the boot, the better. However, bypassing the &lt;tt>initrd&lt;/tt> results in a failed boot with:&lt;br />&lt;br />&lt;tt>Warning: Unable to open an initial console.&lt;/tt>&lt;br />&lt;br />This is because the &lt;tt>/dev&lt;/tt> directory on the root partition is unpopulated, as YDL5 uses udev. Hence the need for an &lt;tt>initrd&lt;/tt> image. Getting a workaround for this is trivial though: just create the minimum necessary devices on the disk — "below udev" &amp;mdash;, as shown below.&lt;br />&lt;br />&lt;tt># mount --bind / /mnt&lt;br />&lt;br /># MAKEDEV -d /mnt/dev console zero null&lt;br />&lt;br /># umount /mnt&lt;/tt>&lt;br />&lt;br />And that's it! Your new, fresh and custom kernel is ready to be executed. Reboot the PS3, wait for the &lt;tt>kboot&lt;/tt> prompt and type your configuration name (&lt;tt>jmerino&lt;/tt> in my case). If all goes fine, the kernel should boot and then start userland initialization.&lt;br />&lt;br />Thanks go to the guys at the &lt;a href="https://ozlabs.org/mailman/listinfo/cbe-oss-dev">cbe-oss-dev&lt;/a> mailing list for &lt;a href="http://ozlabs.org/pipermail/cbe-oss-dev/2007-March/001314.html">helping me&lt;/a> in building the kernel and solving the missing console problem.&lt;br />&lt;br />&lt;b>Update (23:01)&lt;/b>: Added a link to a NFS-root tutorial.</description></item><item><title>Building the libspe2 on the PS3</title><link>https://jmmv.dev/2007/03/building-libspe2-on-ps3.html</link><pubDate>Wed, 14 Mar 2007 11:33:00 -0400</pubDate><guid>https://jmmv.dev/2007/03/building-libspe2-on-ps3.html</guid><description>The Linux kernel, when built for a Cell-based platform, provides the &lt;i>&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_0">spufs&lt;/span>&lt;/i> pseudo-file system that allows &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_1">userland&lt;/span> applications to interact with the Synergistic Processing Engines (&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_2">SPEs&lt;/span>). However, this interface is too low-level to be useful for application-level programs and hence another level of abstraction is provided over it through the &lt;i>&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_3">libspe&lt;/span>&lt;/i> library.&lt;br />&lt;br />There are two versions of the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_4">libspe&lt;/span>:&lt;br />&lt;ul>&lt;li>1.x: Distributed as part of the Cell &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_5">SDK&lt;/span> 2.0, is the most widely used nowadays by applications designed to run on the Cell architecture.&lt;/li>&lt;li>2.x: A rewrite of the library that provides a better and cleaner interface — e.g. less black boxes —, but which is currently distributed for evaluation and testing purposes. Further development will happen on this version, so I needed to have it available.&lt;br />&lt;/li>&lt;/ul>The &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_6">YellowDog&lt;/span> Linux 5.0 (&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_7">YDL&lt;/span>5) distribution for the PlayStation 3 only provides an &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_8">SRPM&lt;/span> package for the 1.x version, but there is no support for 2.x. Fortunately, installing the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_9">libspe&lt;/span>2 is trivial if you use the appropriate &lt;a href="http://www.bsc.es/plantillaH.php?cat_id=254">binary packages provided by &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_10">BSC&lt;/span>&lt;/a>, but things get interesting if you try to build it from sources. As I need to inspect its code and do some changes in it, I have to be able to rebuild its code, so I had to go with the latter option.&lt;br />&lt;br />Let's see how to build and install &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_11">libspe&lt;/span>2 from sources on a PS3 running &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_12">YDL&lt;/span>5.&lt;br />&lt;br />The first step is to download the most up-to-date &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_13">SRPM&lt;/span> package for the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_14">libspe&lt;/span>2, which at the time of this writing was &lt;a href="http://www.bsc.es/projects/deepcomputing/linuxoncell/cellsimulator/sdk2.0/libspe2-2.0.1-1.src.rpm">libspe2-2.0.1-1.src.rpm&lt;/a>. Once downloaded, install it on the system:&lt;br />&lt;br />&lt;tt># rpm -i libspe2-2.0.1-1.src.rpm&lt;/tt>&lt;br />&lt;br />The above command leaves the original source tarball, any necessary patches and the &lt;i>spec&lt;/i> file all properly laid out inside the &lt;tt>/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_15">usr&lt;/span>/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_16">src&lt;/span>/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_17">yellowdog&lt;/span>&lt;/tt> hierarchy.&lt;br />&lt;br />Now, before we can build the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_18">libspe&lt;/span>2 package, we need to fulfill two requisites. The first is the installation of quilt (for which no binary package exists in the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_19">YDL&lt;/span>5 repositories), a required tool in &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_20">libspe&lt;/span>2's build process. The second is the updating of bash to a newer version, as the one distributed in &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_21">YDL&lt;/span>5 has a quoting bug that prevents quilt from being built properly.&lt;br />&lt;br />The easiest way to solve these problems is to look for the corresponding &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_22">SRPM&lt;/span> packages for quilt and an updated bash. As &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_23">YDL&lt;/span>5 is based on Fedora Core, a safe bet is to fetch the necessary files from the Fedora Core 6 (FC6) repositories; these were: &lt;a href="ftp://ftp.rediris.es/mirror/fedora-extras/6/SRPMS/quilt-0.46-1.fc6.src.rpm">quilt-0.46-1.fc6.src.rpm&lt;/a> and &lt;a href="ftp://ftp.rediris.es/mirror/fedora/6/source/SRPMS/bash-3.1-16.1.src.rpm">bash-3.1-16.1.src.rpm&lt;/a>. After that, proceed with their installation as shown above for &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_24">libspe&lt;/span>2 (using &lt;tt>rpm -i&lt;/tt>).&lt;br />&lt;br />With all the sources in place, it is time to build and install them in the right order. Luckily the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_25">FC&lt;/span>6 &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_26">SRPMs&lt;/span> we need work fine in &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_27">YDL&lt;/span>5, but this might not be true for other packages. Here is what to do:&lt;br />&lt;br />&lt;tt># &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_28">cd&lt;/span> /&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_29">usr&lt;/span>/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_30">src&lt;/span>/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_31">yellowdog&lt;/span>/&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_32">SRPMS&lt;/span>&lt;br /># &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_33">rpmbuild&lt;/span> -&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_34">ba&lt;/span> --target=&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_35">ppc&lt;/span> bash.spec&lt;br /># rpm -U ../RPMS/ppc/bash-3.1-16.1.ppc.rpm&lt;br /># &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_36">rpmbuild&lt;/span> -&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_37">ba&lt;/span> --target=&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_38">ppc&lt;/span> quilt.spec&lt;br /># rpm -i ../RPMS/ppc/quilt-0.46-1.ppc.rpm&lt;br /># &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_39">rpmbuild&lt;/span> -&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_40">ba&lt;/span> &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_41">libspe&lt;/span>2.spec&lt;br /># rpm -i ../RPMS/ppc64/libspe2-2.0.1-1.ppc64.rpm&lt;br /># rpm -i ../RPMS/ppc64/libspe2-devel-2.0.1-1.ppc64.rpm&lt;/tt>&lt;br />&lt;br />And that's it! &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_42">libspe&lt;/span>2 is now installed and ready to be used. Of course, with the build requisites in place, you compile &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_43">libspe&lt;/span>2 in your home directory for testing purposes by using the tar.&lt;span class="blsp-spelling-error" id="SPELLING_ERROR_44">gz&lt;/span> package instead of the &lt;span class="blsp-spelling-error" id="SPELLING_ERROR_45">SRPM&lt;/span>.&lt;br />&lt;br />At last, complete the installation by adding the &lt;a href="http://www.bsc.es/projects/deepcomputing/linuxoncell/cellsimulator/sdk2.0/elfspe2-2.0.1-1.ppc.rpm">elfspe2-2.0.1-1.ppc.rpm&lt;/a> package to the mix.</description></item></channel></rss>