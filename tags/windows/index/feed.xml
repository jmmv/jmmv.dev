<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>windows on jmmv.dev</title>
    <link>https://jmmv.dev/tags/windows/index/</link>
    <description>Recent content in windows on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Nov 2020 07:50:00 -0800</lastBuildDate><atom:link href="https://jmmv.dev/tags/windows/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windows Subsystem for Linux: The lost potential</title>
      <link>https://jmmv.dev/2020/11/wsl-lost-potential.html</link>
      <pubDate>Fri, 13 Nov 2020 07:50:00 -0800</pubDate>
      
      <guid>https://jmmv.dev/2020/11/wsl-lost-potential.html</guid>
      <description>If you have followed Windows 10 at all during the last few years, you know that the Windows Subsystem for Linux, or WSL for short, is the hot topic among developers. You can finally run your Linux tooling on Windows as a first class citizen, which means you no longer have to learn PowerShell or, god forbid, suffer through the ancient CMD.EXE console.
Unfortunately, not everything is as rosy as it sounds.</description>
    </item>
    
    <item>
      <title>Argument processing in Unix and Windows</title>
      <link>https://jmmv.dev/2020/11/cmdline-args-unix-vs-windows.html</link>
      <pubDate>Mon, 02 Nov 2020 06:30:00 -0800</pubDate>
      
      <guid>https://jmmv.dev/2020/11/cmdline-args-unix-vs-windows.html</guid>
      <description>Let&amp;rsquo;s continue our dive into the very interesting topic of how Unix (or Linux or what have you) and Windows differ regarding argument processing. And by that I mean: how a program (the caller) communicates the set of arguments to pass to another program (the callee) at execution time, how the callee receives such arguments, and what are the consequences of each design.</description>
    </item>
    
    <item>
      <title>Configuring Windows for key-based SSH access</title>
      <link>https://jmmv.dev/2020/10/windows-ssh-access.html</link>
      <pubDate>Fri, 30 Oct 2020 05:45:00 -0700</pubDate>
      
      <guid>https://jmmv.dev/2020/10/windows-ssh-access.html</guid>
      <description>Windows Server 2019 and Windows 10 both ship with OpenSSH (server and client). Installing these components is a breeze, but the official documentation to set everything up is either wrong or incomplete. I wanted to set up key-based authentication and this took quite a bit of poking until I figured out all the right knobs. Here are the lab notes from my adventure.</description>
    </item>
    
    <item>
      <title>Flags parsing in PowerShell (vs. Unix)</title>
      <link>https://jmmv.dev/2020/10/powershell-cmdlet-params.html</link>
      <pubDate>Wed, 28 Oct 2020 06:45:00 -0700</pubDate>
      
      <guid>https://jmmv.dev/2020/10/powershell-cmdlet-params.html</guid>
      <description>The way PowerShell handles flags in scripts (aka cmdlets) differs completely from what Unix shells do. These differences allow PowerShell to gain insight on how scripts have to be executed, which in turn can deliver a better interactive user experience. Read on for a comparison while wearing Unix-tinted glasses.</description>
    </item>
    
    <item>
      <title>Windows 3.1 startup speed</title>
      <link>https://jmmv.dev/2009/01/windows-31-startup-speed.html</link>
      <pubDate>Wed, 14 Jan 2009 09:36:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2009/01/windows-31-startup-speed.html</guid>
      <description>Out of boredom, I installed MS-DOS and Windows 3.1 on my machine a few days ago &amp;mdash; yeah, I was inspired by the Hot Dog Stand comments in this post. Check it out here. Don&#39;t be scared, it was just a virtual machine!
Anyway, this was fun because it reminded me of something. Back in 1994, my father bought a Pentium 60Mhz. After ordering it, we imagined how fast it could be compared to our older machine, a 386DX 40Mhz.</description>
    </item>
    
  </channel>
</rss>
