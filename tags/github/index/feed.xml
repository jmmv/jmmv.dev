<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/github/index.html</link><description>Recent content in Github on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 06 Feb 2014 07:12:00 -0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/github/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Moving projects to GitHub</title><link>https://jmmv.dev/2014/02/moving-projects-to-github.html</link><pubDate>Thu, 06 Feb 2014 07:12:00 -0500</pubDate><guid>https://jmmv.dev/2014/02/moving-projects-to-github.html</guid><description>&lt;p>For a couple of years or so, I have been hosting my open source projects in Google Code. The time to jump ship has come.&lt;/p> &lt;p>The major reason for this move is that &lt;a href="http://google-opensource.blogspot.com/2013/05/a-change-to-google-code-download-service.html">Google Code stopped supporting file downloads&lt;/a> three weeks ago. This is unfortunate given that "binary" releases are a must for proper software distribution. Sure, I could use a third-party service like &lt;a href="https://bintray.com/">Bintray&lt;/a> to offer the downloads, but I'd rather consolidate all project data in a single location.&lt;/p></description></item><item><title>'Hello GitHub!' say shtk, sysbuild and sysupgrade</title><link>https://jmmv.dev/2013/07/hello-github-say-shtk-sysbuild-and.html</link><pubDate>Sun, 28 Jul 2013 20:00:00 -0400</pubDate><guid>https://jmmv.dev/2013/07/hello-github-say-shtk-sysbuild-and.html</guid><description>&lt;p>Over a year ago, I developed two command line utilities for NetBSD (sysbuild and sysupgrade) and a supporting library for the two tools (shtk). These were all introduced in their corresponding blog posts &amp;mdash;&lt;a href="https://jmmv.dev/2012/07/introducing-sysbuild-for-netbsd.html">Introducing sysbuild for NetBSD&lt;/a>, &lt;a href="https://jmmv.dev/2012/08/introducing-sysupgrade.html">Introducing sysupgrade for NetBSD&lt;/a> and &lt;a href="https://jmmv.dev/2012/08/introducing-shtk.html">Introducing shtk&lt;/a>&amp;mdash; and since then I have heard good comments about them.&lt;/p> &lt;p>About a couple of weeks ago, I started working on the much-needed rewrite of pkg_comp and a supporting standalone tool. I was using the same development methodology as with the other three projects: putting all the code in pkgsrc and implementing the build system from the package's &lt;tt>Makefile&lt;/tt>. Along the way, this became increasingly annoying to the point where I could not stand it any more. pkgsrc is a packaging system, not a development platform. Developing a project within it is difficult due to the indirections between the outer &lt;tt>Makefile&lt;/tt> and the work directory, and the expected workflow of working with packages. &lt;p>A separate issue is that having the source code in pkgsrc prevents the distribution of the packages as standalone tools for third-party operating systems. (Mind you: I've recently started building NetBSD from Linux and FreeBSD and missed sysbuild dearly.) It's hard and ugly (but not impossible) to generate tarballs for the sources in pkgsrc that can later be hosted elsewhere... and, even if doing that, using pkgsrc as the master tree for the code would seem backwards.&lt;/p></description></item></channel></rss>