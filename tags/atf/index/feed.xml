<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>atf on jmmv.dev</title>
    <link>https://jmmv.dev/tags/atf/index/</link>
    <description>Recent content in atf on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Mar 2014 08:22:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/atf/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GSoC 2014 idea: Port FreeBSD&#39;s old-style tests to ATF</title>
      <link>https://jmmv.dev/2014/03/gsoc-2014-idea-port-freebsds-old-style.html</link>
      <pubDate>Wed, 12 Mar 2014 08:22:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2014/03/gsoc-2014-idea-port-freebsds-old-style.html</guid>
      <description>Are you a student interested in contributing to a production-quality operating system by increasing its overall quality? If so, you have come to the right place!
As you may already know, the Google Summer of Code 2014 program is on and FreeBSD has been accepted as a mentoring organization. As it so happens, I have a project idea that may sound interesting to you.
During the last few months, we have been hard at work adding a standardized test suite to the FreeBSD upstream source tree as described in the TestSuite project page.</description>
    </item>
    
    <item>
      <title>Killing the ATF deprecated tools code</title>
      <link>https://jmmv.dev/2014/02/killing-atf-deprecated-tools-code.html</link>
      <pubDate>Wed, 05 Feb 2014 22:11:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/02/killing-atf-deprecated-tools-code.html</guid>
      <description>The time to kill the deprecated tools &amp;mdash;atf-report and atf-run principally&amp;mdash; from the upstream ATF distribution file has come. Unfortunately, this is not the trivial task that it may seem.
But wait, &#34;Why?&#34; and &#34;Why now?&#34;
Because NetBSD still relies on the deprecated tools to run its test suite, they cannot just be killed. Removing them from the upstream distribution, however, is actually a good change for both ATF and NetBSD.</description>
    </item>
    
    <item>
      <title>Three productive days on the Kyua front</title>
      <link>https://jmmv.dev/2013/11/three-productive-days-on-kyua-front.html</link>
      <pubDate>Thu, 28 Nov 2013 09:00:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2013/11/three-productive-days-on-kyua-front.html</guid>
      <description>This being Thanksgiving week in the U.S. and Google giving us Thursday and Friday off, I decided to take Monday to Wednesday off as well to spend some time hacking on Kyua &amp;mdash; yes, finally, after months of being inactive. And what a three productive days!
Here comes a little briefing on the three fronts in which I made progress. (This puts on hold the header files series until next Monday.</description>
    </item>
    
    <item>
      <title>Projects migrated to Git</title>
      <link>https://jmmv.dev/2012/02/projects-migrated-to-git.html</link>
      <pubDate>Sun, 26 Feb 2012 20:34:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2012/02/projects-migrated-to-git.html</guid>
      <description>I finally took the plunge. Yesterday night, I migrated the Kyua and Lutok repositories from Subversion to Git. And this morning I migrated ATF from Monotone and custom hosting to Git and Google Code; oh, and this took way longer than expected.
Migration of Kyua and Lutok
Migrating these two projects was straightforward. After preparing a fresh local Git repository following the instructions posted yesterday, pushing to Google Code is a simple matter:</description>
    </item>
    
    <item>
      <title>Switching projects to Git</title>
      <link>https://jmmv.dev/2012/02/switching-projects-to-git.html</link>
      <pubDate>Sat, 11 Feb 2012 14:48:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2012/02/switching-projects-to-git.html</guid>
      <description>The purpose of this post is to tell you the story of the Version Control System (VCS) choices I have made while maintaining my open source projects ATF, Kyua and Lutok. It also details where my thoughts are headed to these days.
This is not a description of centralized vs. distributed VCSs, and it does not intend to be one. This does not intend to compare Monotone to Git either, although you&#39;ll probably feel like it while reading the text.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2012/02/kyua-weekly-status-report_207.html</link>
      <pubDate>Tue, 07 Feb 2012 22:31:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2012/02/kyua-weekly-status-report_207.html</guid>
      <description>
Created an RPM package for Lutok for inclusion in Fedora.Created a preliminary RPM spec for ATF for Fedora. Now in discussions with the FPC to figure out how to install the tests on a Fedora system, as /usr/tests may not be appropriate.No activity on Kyua itself though, unfortunately. </description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2012/01/kyua-weekly-status-report_23_2.html</link>
      <pubDate>Mon, 23 Jan 2012 10:28:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2012/01/kyua-weekly-status-report_23_2.html</guid>
      <description>Released ATF 0.15 and imported it into NetBSD.Added support for integer/float printf-like modifiers to the utils::format module. These will be required to beautify size and time quantities in the reports and error messages.I spent way more time than I wanted on this. At first, I attempted to use std::snprintf to parse and process the format modifiers for integers and floats so that I could avoid implementing a custom parser for them.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2012/01/kyua-weekly-status-report_15_2.html</link>
      <pubDate>Sun, 15 Jan 2012 22:21:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2012/01/kyua-weekly-status-report_15_2.html</guid>
      <description>Finally some progress!
Backported the require.memory changes in NetBSD to the ATF upstream code, and extended them to support OS X as well.Backported local pkgsrc patches to ATF into the upstream code.Started to prepare ATF 0.15 by doing test runs of NetBSD/i386 and NetBSD/amd64 and by building the code in various Linux distributions. Several build bugs fixed along the way.Spent a long while trying to figure out how the Fedora package maintainer procedure has changed since 3 years ago to create packages for ATF, Lutok and Kyua.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2011/12/kyua-weekly-status-report_26_3.html</link>
      <pubDate>Mon, 26 Dec 2011 06:38:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_26_3.html</guid>
      <description>The post title should mention ATF instead of Kyua... but I&#39;m keeping the usual one for consistency:
Integrated timestamps into the XML and HTML reports generated by atf-report. These should soon show up in the continuous tests of NetBSD.Work on integrating the use of POSIX timers into atf-run after Christos Zoulas performed these changes in the NetBSD tree. The result is quite awful because I need to keep compatibility with systems that do not provide the &#34;</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2011/12/kyua-weekly-status-report_19_2.html</link>
      <pubDate>Mon, 19 Dec 2011 10:35:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_19_2.html</guid>
      <description>Unfortunately, not much activity this week due to travel reasons. Anyway, some work went in:
Preliminary code to generate HTML reports from kyua report. This is easy peasy but boring. The current code was written as a proof of concept and is awful, hence why it was not committed. I&#39;m now working in cleaning it up.Backported test program and test case timestamping into ATF based on a patch from Paul Goyette.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2011/12/kyua-weekly-status-report_11.html</link>
      <pubDate>Sun, 11 Dec 2011 22:16:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_11.html</guid>
      <description>Some significant improvements this week:
Finally submitted the code to store and load full test case definitions. This is quite tricky (and currently very, very ugly) but it works and it will allow the reports to include all kinds of information from the test cases.Removed the Atffiles from the tree; yay! For a long time, I had been using atf-run to run broken tests because atf-run allowed me to watch the output of the test case being debugged.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2011/11/kyua-weekly-status-report_14.html</link>
      <pubDate>Mon, 14 Nov 2011 11:21:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2011/11/kyua-weekly-status-report_14.html</guid>
      <description>Kyua has finally gained a report subcommand, aimed at processing the output data of an action (stored in the database) and generating a user-friendly report in a variety of formats. This is still extremely incomplete, so don&#39;t get your hopes too high yet ;-) The current version of the report command takes an action and all it does is dump its runtime context (run directory, environment variables, etc.). Consider it just a proof of concept.</description>
    </item>
    
    <item>
      <title>Diversions in Autoconf (actually, in M4sugar)</title>
      <link>https://jmmv.dev/2011/09/diversions-in-autoconf-actually-in.html</link>
      <pubDate>Tue, 06 Sep 2011 18:05:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2011/09/diversions-in-autoconf-actually-in.html</guid>
      <description>Have you ever wondered how Autoconf reorganizes certain parts of your script regardless of the order in which you invoke the macros in your configure.ac script? For example, how come you can define --with-* and --enable-* flags anywhere in your script and these are all magically moved to the option-processing section of the final shell script? After all, Autoconf is just a collection of M4 macros, and a macro preprocessor&#39;s only work is to expand macros in the input with predefined output texts.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2011/08/kyua-weekly-status-report_28.html</link>
      <pubDate>Sun, 28 Aug 2011 18:48:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2011/08/kyua-weekly-status-report_28.html</guid>
      <description>Not a very active week: I&#39;ve been on-call four days and they have been quite intense. Plus I have had to go through a &#34;hurricane&#34; in NYC. That said, I had some time to do a bit of work on Kyua and the results have been nice :-) Made calls to getopt_long(3) work with GNU Getopt by using the correct value of optind to reset option processing.Improved the configure script to error out in a clearer way when missing dependencies (pkg.</description>
    </item>
    
    <item>
      <title>Kyua: Weekly status report</title>
      <link>https://jmmv.dev/2011/08/kyua-weekly-status-report_22_2.html</link>
      <pubDate>Sun, 21 Aug 2011 23:47:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2011/08/kyua-weekly-status-report_22_2.html</guid>
      <description>Implemented the &#34;debug&#34; command. Still very rudimentary, this command allows the user to run a test case without capturing its stdout nor stderr to aid in debugging of failed test cases. In the future, this command will also allow things like keeping the work directory for manual inspection, or spawning a shell or a debugger in the work directory after a test case is executed. Many build fixes under different platforms in preparation for a 0.</description>
    </item>
    
  </channel>
</rss>
