<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Netbsd on jmmv.dev</title>
    <link>https://jmmv.dev/tags/netbsd/</link>
    <description>Recent content in Netbsd on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Aug 2020 08:55:00 -0400</lastBuildDate>
    
	<atom:link href="https://jmmv.dev/tags/netbsd/index/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>pkgdb belongs in libdata, not var</title>
      <link>https://jmmv.dev/2020/08/pkgdb-libdata-var.html</link>
      <pubDate>Wed, 26 Aug 2020 08:55:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/08/pkgdb-libdata-var.html</guid>
      <description>Right after discussing where rc.d should live, it&amp;rsquo;s time to tackle a different but related pet peeve of mine: the location of the installed packages database. For this, I&amp;rsquo;m going to focus on the system I know best, pkgsrc, which keeps its database under /var/db/pkg/ by default. I think this location is wrong and the database should move to /usr/pkg/libdata/pkgdb/.
From a cursory look, it seems that FreeBSD&amp;rsquo;s and OpenBSD&amp;rsquo;s ports databases, as well as dpkg&amp;rsquo;s and rpm&amp;rsquo;s, are also affected by this &amp;ldquo;problem&amp;rdquo;&amp;mdash;but I do not know enough about their internals to say with certainty.</description>
    </item>
    
    <item>
      <title>rc.d belongs in libexec, not etc</title>
      <link>https://jmmv.dev/2020/08/rcd-libexec-etc.html</link>
      <pubDate>Mon, 24 Aug 2020 06:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/08/rcd-libexec-etc.html</guid>
      <description>Let&amp;rsquo;s open with the controversy: the scripts that live under /etc/rc.d/ in FreeBSD, NetBSD, and OpenBSD are in the wrong place. They all should live in /libexec/rc.d/ because they are code, not configuration.
This misplacement is something that has bugged me for ages but I never had the energy to open this can of worms back when I was very involved in NetBSD. I suspect it would have been a draining discussion and a very difficult thing to change.</description>
    </item>
    
    <item>
      <title>A tour of directories as system-wide databases</title>
      <link>https://jmmv.dev/2020/08/database-directories.html</link>
      <pubDate>Fri, 21 Aug 2020 07:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/08/database-directories.html</guid>
      <description>In &amp;ldquo;Configuration files and .d directories&amp;rdquo;, we learned how .d directories permit programmatic edits to system-wide configuration with ease. But this same concept&amp;mdash;using directories with many individual files within instead of a single gigantic file&amp;mdash;can be applied to other kinds of system-wide tracking.
I know it&amp;rsquo;s a stretch, but if it helps you in these modern times, you can think of a directory as a NoSQL database or a key/value store where each file represents a row/key and its contents represent the value of that entity.</description>
    </item>
    
    <item>
      <title>Configuration files and .d directories</title>
      <link>https://jmmv.dev/2020/08/config-files-vs-directories.html</link>
      <pubDate>Mon, 17 Aug 2020 07:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/08/config-files-vs-directories.html</guid>
      <description>Have you ever wondered why an increasing number of programs are configured by placing small files in .d directories instead of by just editing a single file?
Have you ever wondered why these .d directories seem to proliferate in UnixLinux installations? Because a pretty bare-bones Debian installation (WSL) shows&amp;hellip; a ton of them:
debian:/etc&amp;gt; ls -ld *.d */*.d drwxr-xr-x 1 root root 4096 Aug 14 22:23 apparmor.d drwxr-xr-x 1 root root 4096 Aug 9 08:10 apt/apt.</description>
    </item>
    
    <item>
      <title>Keeping NetBSD up-to-date with pkg_comp 2.0</title>
      <link>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-netbsd.html</link>
      <pubDate>Sat, 18 Feb 2017 11:51:55 -0500</pubDate>
      
      <guid>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-netbsd.html</guid>
      <description>&lt;p&gt;This is a tutorial to guide you through the &lt;a href=&#34;https://jmmv.dev/2017/02/introducing-pkg_comp-2.0.html&#34;&gt;shiny new pkg_comp 2.0&lt;/a&gt; on NetBSD.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Goals:&lt;/strong&gt; to use pkg_comp 2.0 to build a binary repository of all the packages you are interested in; to keep the repository fresh on a daily basis; and to use that repository with pkgin to maintain your NetBSD system up-to-date and secure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Refocusing Kyua maybe?</title>
      <link>https://jmmv.dev/2014/05/refocusing-kyua-maybe.html</link>
      <pubDate>Fri, 23 May 2014 10:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2014/05/refocusing-kyua-maybe.html</guid>
      <description>The FreeBSD devsummit that just passed by gave me enough insight into Jenkins to question the long-term plans for Kyua. Uh, WHAT?! Let me explain.
In the beginning...
One of the original but unstated goals of Kyua was to fix the &#34;mess&#34; that is the NetBSD releng test run logs site: if you pay close attention, you will notice that various individuals have reinvented the wheel over and over again in an attempt to automate release builds and test suite runs.</description>
    </item>
    
    <item>
      <title>BSDCan 2014 summary</title>
      <link>https://jmmv.dev/2014/05/bsdcan-2014-summary.html</link>
      <pubDate>Wed, 21 May 2014 18:50:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2014/05/bsdcan-2014-summary.html</guid>
      <description>BSDCan 2014 and the accompanying FreeBSD devsummit are officially over. Let&#39;s recap.
FreeBSD devsummit
The FreeBSD devsumit at BSDCan is, by far, the largest of them all. It is true that I already visited a devsummit once —the one in EuroBSDCon 2013—, but this is the first time I participate in the &#34;real deal&#34; while also being a committer.
 The first impressive thing about this devsummit is that there were about 120 attendees.</description>
    </item>
    
    <item>
      <title>Killing the ATF deprecated tools code</title>
      <link>https://jmmv.dev/2014/02/killing-atf-deprecated-tools-code.html</link>
      <pubDate>Wed, 05 Feb 2014 22:11:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/02/killing-atf-deprecated-tools-code.html</guid>
      <description>The time to kill the deprecated tools &amp;mdash;atf-report and atf-run principally&amp;mdash; from the upstream ATF distribution file has come. Unfortunately, this is not the trivial task that it may seem.
But wait, &#34;Why?&#34; and &#34;Why now?&#34;
Because NetBSD still relies on the deprecated tools to run its test suite, they cannot just be killed. Removing them from the upstream distribution, however, is actually a good change for both ATF and NetBSD.</description>
    </item>
    
    <item>
      <title>EuroBSDCon 2013 takeaways</title>
      <link>https://jmmv.dev/2013/09/eurobsdcon-2013-takeaways.html</link>
      <pubDate>Mon, 30 Sep 2013 08:03:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/09/eurobsdcon-2013-takeaways.html</guid>
      <description>EuroBSDCon 2013 is done. If you have been following my daily posts over the last 4 days (day 1, day 2, day 3 and day 4) as well as #EuroBSDCon updates in Twitter, you may already have a pretty good idea of what went on here. However, with the conference over, it is now a good time to recap the whole event and present the takeaways of these four days which, overall, were quite interesting and productive.</description>
    </item>
    
    <item>
      <title>Live from EuroBSDCon 2013, day 3</title>
      <link>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html</link>
      <pubDate>Sat, 28 Sep 2013 12:28:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html</guid>
      <description>Live from Malta today attending the EuroBSDCon 2013 conference. Today is the first day of the conference itself. Many more people have shown up as expected and there have been tons of very interesting talks all the time. It is both good and bad that there are several tracks: you can select the topic you are most interested in, but sometimes great talks overlap!
Keynote
Today&#39;s opening session was led by Theo de Raadt, the founder of OpenBSD.</description>
    </item>
    
    <item>
      <title>Live from EuroBSDCon 2013, day 1</title>
      <link>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-1.html</link>
      <pubDate>Thu, 26 Sep 2013 12:05:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-1.html</guid>
      <description>Hello everyone! Live from Malta today attending the EuroBSDCon 2013 conference.
Today is the first day out of four: two days of tutorials and two days of actual conference. The tutorials are overlapped by two days of the usual FreeBSD Developer Summit (devsummit for short) and one day of the infrequent NetBSD Developer Summit.
The ambient here is pretty good already: lots of enthusiastic people catching up since the last time they met each other and, more importantly, discussing ongoing developments.</description>
    </item>
    
    <item>
      <title>Self-interview after leaving the NetBSD board</title>
      <link>https://jmmv.dev/2013/06/self-interview-after-leaving-netbsd.html</link>
      <pubDate>Thu, 20 Jun 2013 12:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/06/self-interview-after-leaving-netbsd.html</guid>
      <description>*The decision to not renew my NetBSD board membership was bittersweet.*
Let me put aside the Readability series posts for a moment while I recap how the two years serving the NetBSD Board of Directors have been. My term just finished a couple of weeks ago, so it is better to post this while it is still relevant.
First, let me backtrack a little bit. A couple of years ago, I was nominated to serve the NetBSD Board of Directors.</description>
    </item>
    
    <item>
      <title>Setting up my old Mac Mini G4 as a development machine</title>
      <link>https://jmmv.dev/2012/10/setting-up-my-old-mac-mini-g4-as.html</link>
      <pubDate>Mon, 22 Oct 2012 15:31:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/10/setting-up-my-old-mac-mini-g4-as.html</guid>
      <description>I&#39;ve spent quite a few time last week setting up my old Mac Mini G4 — a PPC 1.2GHz with 1GB of RAM running NetBSD/macppc current — as a &#34;workstation&#34; for the development of Kyua and other tools for NetBSD. Yes, this machine is very slow, but that&#39;s the whole point of the exercise I&#39;m going to narrate below.
I recently got approval from the NetBSD core team to import Kyua into the NetBSD source tree and replace ATF with it.</description>
    </item>
    
    <item>
      <title>Testing NetBSD&#39;s share/mk</title>
      <link>https://jmmv.dev/2012/08/testing-netbsds-sharemk.html</link>
      <pubDate>Sun, 26 Aug 2012 22:18:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/08/testing-netbsds-sharemk.html</guid>
      <description>For a long time, a pet peeve of mine has been the lack of tests for the build infrastructure files of NetBSD: i.e. those bsd.*.mk files that live under /usr/share/mk/ and on which the whole source tree depends.
One could argue that writing tests for these files is not strictly necessary because the successful build of NetBSD is the real final test of whether the files work or not. That&#39;s partly true, but unfortunately is not the whole story:</description>
    </item>
    
    <item>
      <title>Introducing shtk</title>
      <link>https://jmmv.dev/2012/08/introducing-shtk.html</link>
      <pubDate>Wed, 15 Aug 2012 17:39:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/08/introducing-shtk.html</guid>
      <description>Have you ever wanted to have a collection of ready-to-use modules for shell scripts? I have, particularly because I keep reimplementing the same functions over and over and over and over again whenever I write non-trivial shell scripts, and I&#39;m tired of doing so.
That&#39;s why I have just abstracted all the common code in the aforementioned tools and put it into a new package called the &#34;Shell Toolkit&#34;, or shtk for short.</description>
    </item>
    
  </channel>
</rss>