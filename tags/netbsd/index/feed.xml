<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Netbsd on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/netbsd/index.html</link><description>Recent content in Netbsd on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&#150;2025 Julio Merino</copyright><lastBuildDate>Fri, 17 Jan 2025 09:45:00 -0800</lastBuildDate><atom:link href="https://jmmv.dev/tags/netbsd/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Hands-on graphics without X11</title><link>https://jmmv.dev/2025/01/netbsd-graphics-wo-x11.html</link><pubDate>Fri, 17 Jan 2025 09:45:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2025/01/netbsd-graphics-wo-x11.html</guid><description>If you have been following the development of EndBASIC, you know its console can display both text and graphics at once. What you may not know is that, now, it can also achieve this feat on the NetBSD console without using X11 at all. This is done by directly rendering to the wsdisplay framebuffer, and this article presents a crash course on direct graphics and keyboard access via NetBSD&amp;rsquo;s wscons framework.</description><enclosure url="https://jmmv.dev/images/2025-01-17-cover-image.png" length="25978" type="image/jpeg"/></item><item><title>Revisiting the NetBSD build system</title><link>https://jmmv.dev/2024/12/netbsd-build-system.html</link><pubDate>Sat, 28 Dec 2024 08:50:00 +0100</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2024/12/netbsd-build-system.html</guid><description>&lt;p>I recently picked up an embedded project in which I needed to build a highly customized full system image with minimal boot times. As I explored my options, I came to the conclusion that NetBSD, the often-forgotten BSD variant, was the best viable choice for my project.&lt;/p>
&lt;p>One reason for this choice is NetBSD&amp;rsquo;s build system. Once you look and get past the fact that it feels frozen in time since 2002, you realize it is still one of the most advanced build systems you can find for an OS. And it shows: the NetBSD build system allows you to build the full OS from scratch, on pretty much any host POSIX platform, while targeting any hardware architecture supported by NetBSD. All without root privileges.&lt;/p>
&lt;p>Another reason for this choice is that NetBSD was my daily workhorse for many years and I&amp;rsquo;m quite familiar with its internals, which is useful knowledge to quickly achieve the goals I have in mind. In fact, I was a NetBSD Developer with capital D: I had commit access to the project from about 2002 through 2012 or so, and I have just revived my account in service of this project. &lt;code>jmmv@&lt;/code> is back!&lt;/p>
&lt;p>So, strap onto your seats and let&amp;rsquo;s see how today&amp;rsquo;s NetBSD build system looks like and what makes it special. I&amp;rsquo;ll add my own critique at the end, because it ain&amp;rsquo;t perfect, but overall it continues to deliver on its design goals set in the late 1990s.&lt;/p></description><enclosure url="https://jmmv.dev/images/2024-12-28-cover-image.jpg" length="403124" type="image/jpeg"/></item><item><title>Kyua graduates</title><link>https://jmmv.dev/2024/08/kyua-graduates.html</link><pubDate>Fri, 02 Aug 2024 08:45:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2024/08/kyua-graduates.html</guid><description>&lt;p>After years of inactivity, the Kyua project has graduated as an open source citizen and has &lt;a href="https://github.com/freebsd/kyua/">a new home&lt;/a> under the FreeBSD umbrella!&lt;/p>
&lt;p>But uh&amp;hellip; wait, what is Kyua and why is this exciting? To resolve confusion and celebrate this milestone, I&amp;rsquo;d like to revisit what Kyua is, how it came to be, why I stopped working on it for a while, why that was a problem for FreeBSD&amp;mdash;and, indirectly, NetBSD&amp;mdash;and how Kyua being free software has helped keep it alive.&lt;/p></description><enclosure url="https://jmmv.dev/images/2024-08-02-kyua-graduates.jpg" length="367311" type="image/jpeg"/></item><item><title>Speeding up autoconf with caching</title><link>https://jmmv.dev/2022/06/autoconf-caching.html</link><pubDate>Fri, 17 Jun 2022 06:30:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/06/autoconf-caching.html</guid><description>&lt;p>In the recent &lt;a href="https://jmmv.dev/2022/05/remembering-buildtool.html">Remembering Buildtool&lt;/a> post, I described how setting up a cache of configuration checks was an important step in Buildtool&amp;rsquo;s installation process. The goal was to avoid pointless repetitive work on every build by performing such common checks once.&lt;/p>
&lt;p>&lt;a href="https://www.bsdnow.tv/457">Episode 457 of BSD Now&lt;/a> featured my post and Allan Jude wondered how much time would be saved in a bulk build of all FreeBSD packages if we could just do that same kind of caching with GNU Autoconf. And, you know what? It is indeed possible to do so. I had mentioned it en passing in my post but I guess I wasn&amp;rsquo;t clear enough, so let&amp;rsquo;s elaborate!&lt;/p></description></item><item><title>pkgdb belongs in libdata, not var</title><link>https://jmmv.dev/2020/08/pkgdb-libdata-var.html</link><pubDate>Wed, 26 Aug 2020 08:55:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/08/pkgdb-libdata-var.html</guid><description>The pkgsrc package database, which by default lives in /var/db/pkg/, should not be there. Instead, it should be under /usr/pkg/libdata/pkgdb/. The same applies to FreeBSD&amp;rsquo;s and OpenBSD&amp;rsquo;s ports and also Debian&amp;rsquo;s dpkg, but I&amp;rsquo;ll focus on pkgsrc because it&amp;rsquo;s the system I know best. Let&amp;rsquo;s see why the current default is suboptimal and why libdata is a good alternative.</description></item><item><title>rc.d belongs in libexec, not etc</title><link>https://jmmv.dev/2020/08/rcd-libexec-etc.html</link><pubDate>Mon, 24 Aug 2020 06:30:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/08/rcd-libexec-etc.html</guid><description>The scripts that live under /etc/rc.d/ in FreeBSD, NetBSD, and OpenBSD are in the wrong place. They all should live in /libexec/rc.d/ because they are code, not configuration. Let&amp;rsquo;s look at the history of these systems to see how we got here, why this is problematic, and how things would look like in a better world.</description></item><item><title>A tour of directories as system-wide databases</title><link>https://jmmv.dev/2020/08/database-directories.html</link><pubDate>Fri, 21 Aug 2020 07:30:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/08/database-directories.html</guid><description>In the previous post, we saw how .d directories permit programmatic edits to system-wide configuration with ease. But this same concept can be applied to other kinds of tracking. Let&amp;rsquo;s dive into a few examples ranging from desktop menu entries to the package manager&amp;rsquo;s database itself.</description></item><item><title>Configuration files and .d directories</title><link>https://jmmv.dev/2020/08/config-files-vs-directories.html</link><pubDate>Mon, 17 Aug 2020 07:00:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/08/config-files-vs-directories.html</guid><description>Have you ever wondered why an increasing number of programs are configured by placing small files in .d directories instead of by just editing a single file? Have you ever wondered why these .d directories seem to proliferate in Linux installations? Read on to understand what these are and why they are useful.</description></item><item><title>Keeping NetBSD up-to-date with pkg_comp 2.0</title><link>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-netbsd.html</link><pubDate>Sat, 18 Feb 2017 11:51:55 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-netbsd.html</guid><description>&lt;p>This is a tutorial to guide you through the &lt;a href="https://jmmv.dev/2017/02/introducing-pkg_comp-2.0.html">shiny new pkg_comp 2.0&lt;/a> on NetBSD.&lt;/p>
&lt;p>&lt;strong>Goals:&lt;/strong> to use pkg_comp 2.0 to build a binary repository of all the packages you are interested in; to keep the repository fresh on a daily basis; and to use that repository with pkgin to maintain your NetBSD system up-to-date and secure.&lt;/p></description></item><item><title>Refocusing Kyua maybe?</title><link>https://jmmv.dev/2014/05/refocusing-kyua-maybe.html</link><pubDate>Fri, 23 May 2014 10:00:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2014/05/refocusing-kyua-maybe.html</guid><description>&lt;p>The FreeBSD devsummit that just passed by gave me enough insight into Jenkins to question the long-term plans for Kyua. Uh, &lt;i>WHAT&lt;/i>?! Let me explain.&lt;/p> &lt;p>&lt;b>In the beginning...&lt;/b>&lt;/p> &lt;p>One of the original but unstated goals of Kyua was to fix the "mess" that is the &lt;a href="http://releng.netbsd.org/test-results.html">NetBSD releng test run logs&lt;/a> site: if you pay close attention, you will notice that various individuals have reinvented the wheel over and over again in an attempt to &lt;i>automate release builds and test suite runs&lt;/i>. In other words: different parties have implemented independent continuous integration systems several times with more or less success.&lt;/p></description></item><item><title>BSDCan 2014 summary</title><link>https://jmmv.dev/2014/05/bsdcan-2014-summary.html</link><pubDate>Wed, 21 May 2014 18:50:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2014/05/bsdcan-2014-summary.html</guid><description>&lt;p>&lt;a href="https://www.bsdcan.org/2014/">BSDCan 2014&lt;/a> and the accompanying &lt;a href="https://wiki.freebsd.org/DevSummit">FreeBSD devsummit&lt;/a> are officially over. Let's recap.&lt;/p> &lt;p>&lt;b>FreeBSD devsummit&lt;/b>&lt;/p> &lt;p>The FreeBSD devsumit at BSDCan is, by far, the largest of them all. It is true that &lt;a href="https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-1.html">I already visited a devsummit once&lt;/a> —the one in EuroBSDCon 2013—, but this is the first time I participate in the "real deal" while also being a committer.&lt;/p> &lt;div class="separator" style="clear: both; text-align: center;">&lt;a href="http://1.bp.blogspot.com/-3PQD8mvKdXA/U30iTWjLA_I/AAAAAAAAMa4/RM0npPCidc0/s1600/IMG_20140518_085230124.jpg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;">&lt;img border="0" src="https://jmmv.dev/images/2014-05-21-IMG_20140518_085230124.jpg" />&lt;/a>&lt;/div> &lt;p>The first impressive thing about this devsummit is that there were about 120 attendees. The vast majority of these were developers, of course, but there was also a reasonable presence from vendors — including, for example, delegates from Netflix, Isilon, NetApp and even smaller parties like Tarsnap.&lt;/p></description></item><item><title>Killing the ATF deprecated tools code</title><link>https://jmmv.dev/2014/02/killing-atf-deprecated-tools-code.html</link><pubDate>Wed, 05 Feb 2014 22:11:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2014/02/killing-atf-deprecated-tools-code.html</guid><description>&lt;p>The time to kill the deprecated tools &amp;mdash;&lt;tt>atf-report&lt;/tt> and &lt;tt>atf-run&lt;/tt> principally&amp;mdash; from the upstream ATF distribution file has come. Unfortunately, this is not the trivial task that it may seem.&lt;/p> &lt;p>&lt;b>But wait, "Why?" and "Why now?"&lt;/b>&lt;/p> &lt;p>Because NetBSD still relies on the deprecated tools to run its test suite, they cannot just be killed. Removing them from the upstream distribution, however, is actually a good change for both ATF and NetBSD.&lt;/p></description></item><item><title>EuroBSDCon 2013 takeaways</title><link>https://jmmv.dev/2013/09/eurobsdcon-2013-takeaways.html</link><pubDate>Mon, 30 Sep 2013 08:03:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2013/09/eurobsdcon-2013-takeaways.html</guid><description>&lt;p>EuroBSDCon 2013 is done. If you have been following my daily posts over the last 4 days (&lt;a href="https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-1.html">day 1&lt;/a>, &lt;a href="https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-2.html">day 2&lt;/a>, &lt;a href="https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html">day 3&lt;/a> and &lt;a href="https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-4.html">day 4&lt;/a>) as well as &lt;a href="https://twitter.com/search?q=%23EuroBSDcon&amp;src=hash">#EuroBSDCon updates in Twitter&lt;/a>, you may already have a pretty good idea of what went on here. However, with the conference over, it is now a good time to recap the whole event and present the takeaways of these four days which, overall, were quite interesting and productive.&lt;/p></description></item><item><title>Live from EuroBSDCon 2013, day 3</title><link>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html</link><pubDate>Sat, 28 Sep 2013 12:28:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html</guid><description>&lt;p>Live from Malta today attending the EuroBSDCon 2013 conference. Today is the first day of the conference itself. Many more people have shown up as expected and there have been tons of very interesting talks all the time. It is both good and bad that there are several tracks: you can select the topic you are most interested in, but sometimes great talks overlap!&lt;/p> &lt;p>&lt;b>Keynote&lt;/b>&lt;/p> &lt;p>Today's opening session was led by &lt;a href="http://en.wikipedia.org/wiki/Theo_de_Raadt">Theo de Raadt&lt;/a>, the founder of OpenBSD. His keynote focused on explaining how there is no real research happening on operating systems any more and how new, risky technological changes can be tested in a real-world system like OpenBSD.&lt;/p></description></item><item><title>Live from EuroBSDCon 2013, day 1</title><link>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-1.html</link><pubDate>Thu, 26 Sep 2013 12:05:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-1.html</guid><description>&lt;p>Hello everyone! Live from Malta today attending the &lt;a href="http://2013.eurobsdcon.org/">EuroBSDCon 2013&lt;/a> conference.&lt;/p> &lt;p>Today is the first day &lt;a href="http://2013.eurobsdcon.org/eurobsdcon-2013/talks-and-schedule/">out of four&lt;/a>: two days of tutorials and two days of actual conference. The tutorials are overlapped by two days of the usual &lt;a href="https://wiki.freebsd.org/201309DevSummit">FreeBSD Developer Summit&lt;/a> (devsummit for short) and one day of the infrequent &lt;a href="http://2013.eurobsdcon.org/eurobsdcon-2013/talks-and-schedule/#netbsd-developer-summit">NetBSD Developer Summit&lt;/a>.&lt;/p> &lt;p>The ambient here is pretty good already: lots of enthusiastic people catching up since the last time they met each other and, more importantly, discussing ongoing developments.  Keeping in mind that this is only the first day of tutorials and not the proper conference, things look promising: many more people are expected to join on Saturday.&lt;/p></description></item></channel></rss>