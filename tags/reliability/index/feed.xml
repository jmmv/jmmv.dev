<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>reliability on Julio Merino (jmmv.dev)</title>
    <link>https://jmmv.dev/tags/reliability/index/</link>
    <description>Recent content in reliability on Julio Merino (jmmv.dev)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 24 Jul 2018 09:00:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/reliability/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The fallacy of forbidding assertions</title>
      <link>https://jmmv.dev/2018/07/forbidden-assertions-fallacy.html</link>
      <pubDate>Tue, 24 Jul 2018 09:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2018/07/forbidden-assertions-fallacy.html</guid>
      <description>There are two ways to handle abnormal conditions in a program: errors and assertions.
Errors are a controlled mechanism by which the program propagates details about a faulty condition up the call chainâ€”be it with explicit error return statements or with exceptions. Errors must be used to validate all conditions that might be possible but aren&amp;rsquo;t valid given the context. Examples include: sanitizing any kind of input (as provided by the user or incoming from the network), and handling error codes from system calls or libraries.</description>
    </item>
    
  </channel>
</rss>
