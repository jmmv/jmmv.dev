<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>go on jmmv.dev</title>
    <link>https://jmmv.dev/tags/go/index/</link>
    <description>Recent content in go on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jul 2018 10:45:00 +0200</lastBuildDate><atom:link href="https://jmmv.dev/tags/go/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust vs. Go</title>
      <link>https://jmmv.dev/2018/07/rust-vs-go.html</link>
      <pubDate>Fri, 13 Jul 2018 10:45:00 +0200</pubDate>
      
      <guid>https://jmmv.dev/2018/07/rust-vs-go.html</guid>
      <description>Welcome to the Rust Review&amp;rsquo;s bonus post, which I had promised from the very beginning. I&amp;rsquo;m here to cover the big elephant in the room: Rust vs. Go. Which one is better?
There is no good answer to this question because this comparison is unfounded. I think people tend to bundle the two languages together because they were released at about the same time and the release of Rust felt like a response to the release of Go.</description>
    </item>
    
  </channel>
</rss>
