<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>oss on Julio Merino (jmmv.dev)</title>
    <link>https://jmmv.dev/tags/oss/index/</link>
    <description>Recent content in oss on Julio Merino (jmmv.dev)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Feb 2014 07:12:00 -0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/oss/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Moving projects to GitHub</title>
      <link>https://jmmv.dev/2014/02/moving-projects-to-github.html</link>
      <pubDate>Thu, 06 Feb 2014 07:12:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/02/moving-projects-to-github.html</guid>
      <description>For a couple of years or so, I have been hosting my open source projects in Google Code. The time to jump ship has come.
The major reason for this move is that Google Code stopped supporting file downloads three weeks ago. This is unfortunate given that &#34;binary&#34; releases are a must for proper software distribution. Sure, I could use a third-party service like Bintray to offer the downloads, but I&#39;d rather consolidate all project data in a single location.</description>
    </item>
    
    <item>
      <title>Patch management with Quilt</title>
      <link>https://jmmv.dev/2013/11/patch-management-with-quilt.html</link>
      <pubDate>Thu, 14 Nov 2013 12:00:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2013/11/patch-management-with-quilt.html</guid>
      <description>Creating and managing patches on top of a source tree maintained in a non-distributed VCS needn&#39;t be hard. Some people handle this with Git, but I use a tool that seems to have fallen in disuse but was once very popular to create patchsets against the Linux kernel: Quilt.
What is Quilt? As the quilt(1) manual page says:
quilt - tool to manage series of patches
Quilt is a tool to manage large sets of patches by keeping track of the changes each patch makes.</description>
    </item>
    
    <item>
      <title>Book: Producing Open Source Software</title>
      <link>https://jmmv.dev/2007/07/book-producing-open-source-software.html</link>
      <pubDate>Sat, 14 Jul 2007 10:25:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2007/07/book-producing-open-source-software.html</guid>
      <description>This year, Google sent all the Summer of Code students the Producing Open Source Software: How to run a successful free software project book by Karl Fogel (ISBN 0-596-00759-0) as a welcome present.
I&#39;ve just finished reading it and I can say that it was a very nice read. The book is very easy to follow and is very complete: it covers areas such as the project&#39;s start-up, how to set things up for promoting it, how to behave in mailing lists, how to prepare releases, how to deal with volunteers or with paid developers, etc.</description>
    </item>
    
  </channel>
</rss>
