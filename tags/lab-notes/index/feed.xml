<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lab-Notes on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/lab-notes/index.html</link><description>Recent content in Lab-Notes on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&#150;2025 Julio Merino</copyright><lastBuildDate>Wed, 20 Apr 2022 19:00:00 -0700</lastBuildDate><atom:link href="https://jmmv.dev/tags/lab-notes/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>QB64 Super Dark Blue color theme</title><link>https://jmmv.dev/2022/04/qb64-super-dark-blue.html</link><pubDate>Wed, 20 Apr 2022 19:00:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/04/qb64-super-dark-blue.html</guid><description>&lt;p>Towards the end of 2021, I was playing with &lt;a href="https://qb64.org/">QB64&lt;/a> and thought that its default color scheme&amp;mdash;called &lt;em>Super Dark Blue&lt;/em>&amp;mdash;was quite neat. It reminded me of QuickBASIC, which is what the whole program is supposed to do, but the colors felt vivid and modern. Take a look:&lt;/p>
&lt;figure>
&lt;img src="https://jmmv.dev/images/2022-04-20-qb64.png" width="100%" style="max-width: 642px"/>
&lt;figcaption>QB64 with its default color configuration.&lt;/figcaption>
&lt;/figure>
&lt;p>&amp;ldquo;Naturally,&amp;rdquo; I wondered if I could adopt those colors in VSCode and Windows Terminal, as these are the apps I look at the most throughout a work day. I quickly ruled out VSCode because defining a theme seems non-trivial, but creating a scheme for Windows Terminal was very easy.&lt;/p></description></item><item><title>Abandoning GAFYD</title><link>https://jmmv.dev/2022/03/abandoning-gafyd.html</link><pubDate>Mon, 28 Mar 2022 09:00:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/03/abandoning-gafyd.html</guid><description>&lt;p>If you know what GAFYD stands for and have felt that signing up for a free account years ago was a mistake, you know you are in trouble right now. Those accounts are shutting down. The time has come to either pay up or move out, and you should decide what to do ASAP. It took me weeks of active effort to move my and my family&amp;rsquo;s data out of GAFYD and put it back into Google consumer accounts and other non-Google services.&lt;/p>
&lt;p>This post is essentially a recollection of my lab notes on what I did. The text is long and haphazard due to the many things to cover. I&amp;rsquo;ll start with a brief explanation of what GAFYD was, what&amp;rsquo;s happening now, and what&amp;rsquo;s wrong with it. After that, I&amp;rsquo;ll sketch what my new setup is and how I succeeded in moving some of the more complex services. Here is the outline:&lt;/p></description></item><item><title>Windows 10 on a Mac Pro 2013</title><link>https://jmmv.dev/2022/03/windows-10-mac-pro-2013.html</link><pubDate>Tue, 01 Mar 2022 05:20:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/03/windows-10-mac-pro-2013.html</guid><description>The Mac Pro 2013 is the most powerful machine I have at home. I love the hardware looks, its small form factor and its quietness, plus it is still fast enough for my needs. As I realized I hadn&amp;rsquo;t used macOS for months and I needed to recover the SSD space that this system was using, I&amp;rsquo;ve done the unthinkable: I have installed Windows 10 as the only OS on this machine. Here is all you need to know to make Windows 10 work well on this hardware, no matter if you choose to use Boot Camp or do a full clean install as I did.</description></item><item><title>Configuring SSH access into WSL 1 and WSL 2</title><link>https://jmmv.dev/2022/02/wsl-ssh-access.html</link><pubDate>Sun, 27 Feb 2022 12:00:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2022/02/wsl-ssh-access.html</guid><description>&lt;p>One of the reasons I like macOS is that it is a Unix system. Thanks to this, it&amp;rsquo;s trivial to set up an SSH server to remotely access and administer the machine, which in turn has allowed me to have a nice and powerful desktop computer which I can also leverage when I&amp;rsquo;m on the go.&lt;/p>
&lt;p>Moving to Windows full time, as I briefly touched upon in &lt;a href="https://jmmv.dev/2022/02/my-story-with-windows.html">My story with Windows&lt;/a>, required that I could do the same on this platform. I knew that &lt;a href="https://jmmv.dev/2020/10/windows-ssh-access.html">Windows ships with an SSH server&lt;/a> and that it works well with VSCode, but I am still much more comfortable developing my side projects on a Unix system. Windows has WSL, which had proven to be sufficient for my needs, but WSL is still a separate environment from Windows&amp;mdash;and the distinction rears its ugly head when trying to remote into the machine.&lt;/p></description></item><item><title>Updating Google Domains from DD-WRT</title><link>https://jmmv.dev/2020/11/dd-wrt-google-domains.html</link><pubDate>Sat, 07 Nov 2020 07:20:00 -0800</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/11/dd-wrt-google-domains.html</guid><description>&lt;p>I have had a &lt;a href="https://www.netgear.com/support/product/WNDR3700v2.aspx">Netgear WNDR3700v2 router&lt;/a> for a few years already and I bought this model specifically because I could flash it with the &lt;a href="https://dd-wrt.com/">open-source DD-WRT firmware&lt;/a>. The reasons remain the same as the ones &lt;a href="https://jmmv.dev/2006/09/trying-out-dd-wrt.html">I had in 2006&lt;/a>&amp;mdash;the key ones being: the ability to run a &lt;a href="http://www.thekelleys.org.uk/dnsmasq/doc.html">Dnsmasq DNS/DHCP server&lt;/a> for my local network; and the ability to update a single Dynamic DNS address so that I can access my home network when I&amp;rsquo;m on the go.&lt;/p></description></item><item><title>Configuring Windows for key-based SSH access</title><link>https://jmmv.dev/2020/10/windows-ssh-access.html</link><pubDate>Fri, 30 Oct 2020 05:45:00 -0700</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/10/windows-ssh-access.html</guid><description>Windows Server 2019 and Windows 10 both ship with OpenSSH (server and client). Installing these components is a breeze, but the official documentation to set everything up is either wrong or incomplete. I wanted to set up key-based authentication and this took quite a bit of poking until I figured out all the right knobs. Here are the lab notes from my adventure.</description></item><item><title>Novel color scheme for xterm</title><link>https://jmmv.dev/2013/09/novel-color-scheme-for-xterm.html</link><pubDate>Mon, 23 Sep 2013 12:00:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2013/09/novel-color-scheme-for-xterm.html</guid><description>&lt;p>Almost two years ago, I stopped using white on black terminal windows. I found that such a setup strained my eyesight significantly and disturbed my focus. However, the complete opposite&amp;mdash;black on white&amp;mdash;is not much better after staring at the screen for hours: a yellowish tinted background works much better in my personal case.&lt;/p>
&lt;p>The OS X Terminal emulator comes with a color set that I find quite pleasant: &lt;strong>Novel&lt;/strong>. It is a &amp;ldquo;light background&amp;rdquo;, low-contrast theme so it is easier on &lt;s>the&lt;/s> my eyes. Here is how it looks like:&lt;/p></description></item><item><title>Setting up my old Mac Mini G4 as a development machine</title><link>https://jmmv.dev/2012/10/setting-up-my-old-mac-mini-g4-as.html</link><pubDate>Mon, 22 Oct 2012 15:31:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/10/setting-up-my-old-mac-mini-g4-as.html</guid><description>I've spent quite a few time last week setting up my old Mac Mini G4 — a PPC 1.2GHz with 1GB of RAM running NetBSD/macppc current — as a "workstation" for the development of Kyua and other tools for NetBSD. Yes, this machine is very slow, but that's the whole point of the exercise I'm going to narrate below.&lt;br />&lt;br />I recently got approval from the NetBSD core team to import Kyua into the NetBSD source tree and replace ATF with it... which is great, but when thinking about it objectively, I am reluctant to unnecessarily "punish" all NetBSD users by increasing the build time of the system significantly. Don't get me wrong: Kyua itself &lt;i>runs&lt;/i>&amp;nbsp;efficiently on old machines, but &lt;i>building&lt;/i> the code — particularly the hundreds of tests that come with it — takes just too long. This slowdown is not too noticeable on a relatively-modern machine, but it's unacceptable on not-so-old machines.&lt;br />&lt;br />Of course, I could proceed with the import right now (with the code disabled by default) and make it leaner later, but this would cause quite a first bad impression on our users. So it's better to delay the import a little bit until, at least, I have had a chance to simplify some core parts of the code. Mind you, this simplification work is already in progress and quite advanced: it consists on modularizing (as separate processes) some critical parts of the code and writing these with a much simpler style and in plain C.&lt;br />&lt;br />But back to the original point of my post.&lt;br />&lt;br />The first thing to mention about this experience is that with some effort and long waits, I've got a pretty decent setup for development even on this old machine. From time to time, I miss having a real Unix desktop at hand for development (no OS X, you are not one of those). The GUI behaves relatively well with a 1920x1200 display, running Fluxbox, traditional xterms, Mutt for GMail access and a bunch of other applications.&lt;br />&lt;br />Unfortunately, too many things feel really sluggish. A few specific examples:&lt;br />&lt;br />&lt;ul>&lt;li>Firefox 16 is barely usable. I'm not sure there are many alternatives to decent web browsing for such an old non-Intel platform. Dillo is blazing fast and allows me to access online documentation and mailing list archives (just enough for development), but it's pretty much useless for any other purpose given the "Web 2.0".&lt;/li>&lt;li>Any operation that involves pkgsrc takes ages. Even when building the simplest packages, one can notice the system crawl through all of the pkgsrc infrastructure. Sometimes this is the fault of&amp;nbsp;&lt;a href="http://mail-index.netbsd.org/pkgsrc-changes/2012/10/13/msg079664.html">a bad algorithm&lt;/a>; other times it's just sh(1) being the wrong tool for something as complex as pkgsrc internals.&lt;/li>&lt;li>Things like basic code editing in Emacs 24 are slow at responding to typing. Disabling font lock mode makes it feel fast again, but it's just surprising to see that even color coding is slow.&lt;/li>&lt;/ul>I still remember my old and trusty machine from 10 years ago (a Pentium II 233 MHz): with a similar setup, it was significantly snappier. Yes, software has evolved and these packages now have many more features... but really, does editing a text file have to be sluggish?&lt;div>&lt;div>&lt;br />&lt;/div>&lt;div>Leaving aside sluggishness, there is also the problem of instability. NetBSD/macppc is a &lt;a href="http://www.netbsd.org/ports/#ports-tier2">tier 2 port&lt;/a>, and things don't work as well as one would like. I personally would enjoy bringing this port to tier 1... but I currently lack the time (and basic knowledge of the architecture) to do so :-/&lt;/div>&lt;div>&lt;br />&lt;/div>&lt;div>Anyway, the result of this exercise: the new code I'm writing to modularize Kyua builds damn fast in this machine, and keeping it this way is &lt;a href="http://blogs.msdn.com/b/oldnewthing/archive/2012/01/02/10252333.aspx">the whole point of having such an old machine as a build environment&lt;/a>. So I'll try to keep using it to develop these new components of Kyua.&lt;/div>&lt;/div></description></item></channel></rss>