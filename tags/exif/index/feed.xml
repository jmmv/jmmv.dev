<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exif on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/exif/index.html</link><description>Recent content in Exif on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&ndash;2024 Julio Merino</copyright><lastBuildDate>Sat, 07 Apr 2007 12:21:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/exif/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Fixing EXIF date information</title><link>https://jmmv.dev/2007/04/fixing-exif-date-information.html</link><pubDate>Sat, 07 Apr 2007 12:21:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2007/04/fixing-exif-date-information.html</guid><description>Back in February, some friends and I spent a week visiting Punta Cana. We made a lot of photos there but, when we came back, we realized that most of us (not all!) forgot to adjust our camera's date to the foreign timezone, which was 5 hours behind of ours.&lt;br />&lt;br />I imported all our photos in iPhoto but the difference in their timestamps made all images appear unsorted in the main view; this was very annoying. So I wondered if the EXIF information embedded in them could be easily fixed. It turns out it is possible, but the tools to do so — or at least the one I used — leave a lot to be desired: it was not exactly trivial to resolve the problem.&lt;br />&lt;br />In order to modify the EXIF information, I installed the free &lt;a href="http://libexif.sourceforge.net/">libexif&lt;/a> library alongside a very simple frontend to it named &lt;tt>exif&lt;/tt>, distributed from the same page. To painlessly get this in Mac OS X, just use the &lt;tt>graphics/exif&lt;/tt> package in &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a>.&lt;br />&lt;br />Then I had to see which fields I wanted to modify in each photo. This can be accomplished with the &lt;tt>exif --tag &amp;lt;photo-name.jpg&amp;gt;&lt;/tt> command, which shows all tags currently attached to the photo and their corresponding values. Skimming through the resulting list, it is easy to spot which fields correspond to date information. I specifically picked up &lt;tt>0x0132&lt;/tt>, &lt;tt>0x9003&lt;/tt> and &lt;tt>0x9004&lt;/tt>, but some of them may not exist in your images.&lt;br />&lt;br />With this information at hand, I wrote a little script that looped over all affected photos and, for each tag, adjusted it to the new value. It goes as follows:&lt;pre>#!/bin/sh&lt;br />&lt;br />while [ $# -gt 0 ]; do&lt;br /> file=$1; shift&lt;br />&lt;br /> for tag in 0x0132 0x9003 0x9004; do&lt;br /> date=$(exif --tag=${tag} $file | grep Value | &lt;br /> cut -d ' ' -f 4-)&lt;br /> date=$(perl adjust.pl "${date}")&lt;br /> exif --tag=${tag} --ifd=0 --set-value="${date}" ${file}&lt;br /> mv ${file}.modified.jpeg ${file}&lt;br /> done&lt;br />done&lt;/pre>The magic to subtract five hours to each date is hidden in the &lt;tt>adjust.pl&lt;/tt> script, which looks like this:&lt;pre>($date, $time) = split / /, $ARGV[0];&lt;br />&lt;br />($year, $month, $day) = split /:/, $date;&lt;br />($hour, $min, $sec) = split /:/, $time;&lt;br />$amount = 5;&lt;br />if ($hour >= $amount) {&lt;br /> $hour -= $amount;&lt;br />} else {&lt;br /> $hour = $hour - $amount + 24;&lt;br /> if ($day == 1) {&lt;br /> $day = 31;&lt;br /> $month -= 1;&lt;br /> } else {&lt;br /> $day -= 1;&lt;br /> }&lt;br />}&lt;br />&lt;br />printf "%04d:%02d:%02d %02d:%02d:%02dn",&lt;br /> $year, $month, $day, $hour, $min, $sec;&lt;/pre>I know the code is really crappy but it did the job just fine!</description></item></channel></rss>