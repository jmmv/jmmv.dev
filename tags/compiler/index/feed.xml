<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>compiler on Julio Merino (jmmv.dev)</title>
    <link>https://jmmv.dev/tags/compiler/index/</link>
    <description>Recent content in compiler on Julio Merino (jmmv.dev)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Oct 2015 12:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://jmmv.dev/tags/compiler/index/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Compiler-level parallelization and languages</title>
      <link>https://jmmv.dev/2007/06/compiler-level-parallelization-and.html</link>
      <pubDate>Sat, 09 Jun 2007 12:09:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2007/06/compiler-level-parallelization-and.html</guid>
      <description>Some days ago, Intel announced a new version of their C++ and Fortran compilers. According to their announcement:
Application performance is also accelerated by multi-core processors through the use of multiple threads.So... as far as I understand, and as some other news sites mention, this means that the compiler tries to automatically parallelize a program by creating multiple threads; the code executed on each thread is decided at build time through some algorithm that deduces which blocks of code can be executed at the same time.</description>
    </item>
    
  </channel>
</rss>