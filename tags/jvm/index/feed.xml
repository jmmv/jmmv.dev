<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Jvm on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/jvm/index.html</link><description>Recent content in Jvm on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&#150;2025 Julio Merino</copyright><lastBuildDate>Tue, 29 Jan 2019 17:15:00 -0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/jvm/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Open files limit, macOS, and the JVM</title><link>https://jmmv.dev/2019/01/open-files-limit-macos-and-jvm.html</link><pubDate>Tue, 29 Jan 2019 17:15:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2019/01/open-files-limit-macos-and-jvm.html</guid><description>&lt;p>Bazel&amp;rsquo;s original &lt;a href="https://www.dictionary.com/browse/raison-d-etre">raison d&amp;rsquo;etre&lt;/a> was to support Google&amp;rsquo;s monorepo. A consequence of using a monorepo is that some builds will become very large. And large builds can be very resource hungry, especially when using a tool like Bazel that tries to parallelize as many actions as possible for efficiency reasons. There are many resource types in a system, but today I&amp;rsquo;d like to focus on the number of open files at any given time (&lt;code>nofiles&lt;/code>).&lt;/p></description></item></channel></rss>