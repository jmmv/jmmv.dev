<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Darwin on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/darwin/index.html</link><description>Recent content in Darwin on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&ndash;2024 Julio Merino</copyright><lastBuildDate>Fri, 15 Nov 2019 11:00:00 +0000</lastBuildDate><atom:link href="https://jmmv.dev/tags/darwin/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Waiting for process groups, macOS edition</title><link>https://jmmv.dev/2019/11/wait-for-process-group-darwin.html</link><pubDate>Fri, 15 Nov 2019 11:00:00 +0000</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2019/11/wait-for-process-group-darwin.html</guid><description>&lt;p>In the previous posts, we saw why &lt;a href="https://jmmv.dev/2019/11/wait-for-process-group.html">waiting for a process group is complicated&lt;/a> and we covered a specific, bullet-proof mechanism to &lt;a href="https://jmmv.dev/2019/11/wait-for-process-group-linux.html">accomplish this on Linux&lt;/a>. Now is the time to investigate this same topic on macOS. Remember that the problem we are trying to solve (&lt;a href="https://github.com/bazelbuild/bazel/issues/10245">#10245&lt;/a>) is the following: given a process group, wait for all of its processes to fully terminate.&lt;/p>
&lt;p>macOS has a bunch of fancy features that &lt;a href="https://jmmv.dev/2019/03/macos-threads-qos-and-bazel.html">other systems do not have&lt;/a>, but process control is not among them. We do not have features like Linux&amp;rsquo;s child subreaper or PID namespaces to keep track of process groups. Therefore, we&amp;rsquo;ll have to roll our own. And the only way to do this is to scan the process table looking for processes with the desired process group identifier (PGID) and waiting until they are gone.&lt;/p></description></item></channel></rss>