<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Gnome on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/gnome/index.html</link><description>Recent content in Gnome on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 21 Apr 2010 04:08:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/gnome/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Where does Gnome use file monitoring?</title><link>https://jmmv.dev/2010/04/where-does-gnome-use-file-monitoring.html</link><pubDate>Wed, 21 Apr 2010 04:08:00 -0400</pubDate><guid>https://jmmv.dev/2010/04/where-does-gnome-use-file-monitoring.html</guid><description>One of the readers of my &lt;a href="https://jmmv.dev/2010/04/new-gio-fam-package.html">post yesterday&lt;/a>, wonders where Gnome uses the file monitoring APIs. Well, the answer is: &lt;span style="font-style: italic;">everywhere&lt;/span>.&lt;br />&lt;br />Here are some examples:&lt;br />&lt;ul>&lt;li>Nautilus monitors all open folders so that it can update their contents whenever the underlying file store changes. Say you are viewing the Documents folder and you save a new Document from within OpenOffice into that folder. You definitely want Nautilus to show it immediately, without having to manually hit Refresh from the menu.&lt;/li>&lt;li>The trash applet monitors the trash folders and updates its icon from empty to full whenever one of these folders ceases to be non-empty.&lt;/li>&lt;li>The panel monitors the applications directory to notice when new applications get installed. This allows it to update the Applications menu immediately as soon as a new program gets installed into the system.&lt;/li>&lt;li>The GTK file open/save dialogs monitor the directory they are viewing for the same reason as Nautilus. (Actually, I'm unsure about this point. My Linux installation is an old Ubuntu 8.04 LTS that does not have GIO, so I can't verify in recent ones. However, this makes perfect sense and if not implemented, it should be!)&lt;/li>&lt;li>The background switcher control panel monitors the folders containing images to be able to show new installed backgrounds. (I'm not sure about this either. It doesn't happen in my Linux installation, but it also makes sense.)&lt;/li>&lt;li>Media players such as Rhythmbox and Banshee allow you to point them to a folder containing music and have an option to automatically add music to the library as soon as it pops up in such folder.&lt;/li>&lt;li>Potentially, any document editor, picture viewer, etc. monitors the documents opened in them so that these applications can notice external notifications to those files. This is useful to prevent overwriting a file with an out-dated in-memory copy. For example: you are taking some notes with GEdit. On a separate terminal window, you quickly edit the notes file with Vim to add a new note. When you go back to GEdit, you want the editor to tell you that the file has changed out of its control and offer you a choice: e.g. reload or ignore?&lt;br />&lt;/li>&lt;/ul>And many, many more other situations that I'm surely missing...&lt;br />&lt;br />As you can see, it is fairly important to get the file monitoring subsystem working flawlessly. Otherwise, all these tiny details don't work and the end user experience is undermined.</description></item><item><title>New gio-fam package</title><link>https://jmmv.dev/2010/04/new-gio-fam-package.html</link><pubDate>Tue, 20 Apr 2010 13:48:00 -0400</pubDate><guid>https://jmmv.dev/2010/04/new-gio-fam-package.html</guid><description>As briefly outlined in the &lt;a href="https://jmmv.dev/2010/04/file-system-monitoring-gnome-and-netbsd.html">previous post&lt;/a>, new versions of Glib provide GIO, a library that intends to be a low-level file system API on top of the POSIX interface. This library provides an interface to asynchronously wait for file system change notifications including the creation, deletion and modification of files.&lt;br />&lt;br />The monitoring functionality in GIO is modular: it is backed by different loadable plugins that implement OS-specific functionality. In particular, GIO uses an inotify module in Linux and a &lt;a href="http://oss.sgi.com/projects/fam/">FAM&lt;/a> module everywhere else.&lt;br />&lt;br />Up until now, the &lt;tt>devel/glib2&lt;/tt> package in pkgsrc provided a build-time option to specify whether to build the GIO FAM plugin or not. Given that this plugin is built as a shared object that is loaded dynamically at run-time, having a build-time option for this is clearly wrong: it gives no choice to those relying on binary packages (e.g. end/new users). Furthermore, it adds a dependency on the ugly-FAM at the very bottom of the huge Gnome dependency chain. (As already stated, FAM is outdated and hard to set up.)&lt;br />&lt;br />So, based on this, I've just removed all FAM support from &lt;tt>devel/glib2&lt;/tt> altogether and packaged its loadable module as &lt;tt>sysutils/gio-fam&lt;/tt>.&lt;br />&lt;br />Now waiting for a clean rebuild of the Gnome packages to see if the desktop now works on my machine by avoiding FAM/Gamin.</description></item><item><title>File system monitoring, Gnome and NetBSD</title><link>https://jmmv.dev/2010/04/file-system-monitoring-gnome-and-netbsd.html</link><pubDate>Tue, 20 Apr 2010 09:21:00 -0400</pubDate><guid>https://jmmv.dev/2010/04/file-system-monitoring-gnome-and-netbsd.html</guid><description>A few days ago, I decided to start using NetBSD, as well as Gnome on NetBSD once again, mostly because the lack of their use makes my skills feel rusty in many different areas. While NetBSD has surprised me in a good way (I am running it on a Macbook Pro and things like wireless and DRI work), Gnome has not. There are tons of broken things that prevent a smooth user experience.&lt;br />&lt;br />One of these broken things is the monitoring of changes in the file system. Actually, this has never worked 100%. But what is this and why does it matter, you ask? Well, file system monitoring is an internal component of the Gnome infrastructure that allows the desktop to receive notifications when files or directories change. This way, if, say, you are viewing the Downloads folder in Nautilus and you start downloading a file from Epiphany into that folder, Nautilus will realize the new file and show it immediately without requiring a manual refresh.&lt;br />&lt;br />How to monitor the file system depends on the operating system. There are basically two approaches: polling and asynchronous notifications. Polling is suboptimal because the notifications are usually delayed. Asynchronous notifications are tied to the operating system: Linux provides &lt;a href="http://en.wikipedia.org/wiki/Inotify">inotify&lt;/a>, NetBSD provides &lt;a href="http://en.wikipedia.org/wiki/Kqueue">kqueue&lt;/a> and other systems provide their own APIs.&lt;span style="display: block;" id="formatbar_Buttons">&lt;span class="on down" style="display: block;" id="formatbar_CreateLink" title="Link" onmouseover="ButtonHoverOn(this);" onmouseout="ButtonHoverOff(this);" onmouseup="" onmousedown="CheckFormatting(event);FormatbarButton('richeditorframe', this, 8);ButtonMouseDown(this);">&lt;img src="https://jmmv.dev/images/2010-04-20-blank.gif" alt="Link" class="gl_link" border="0" />&lt;/span>&lt;/span>&lt;br />In the past, Gnome monitored the file system by a combination of &lt;a href="http://oss.sgi.com/projects/fam/">FAM&lt;/a>, a system-level service that provides an API to file system monitoring, and GNOME VFS, a high-level layer that hides the interaction with FAM. This approach was good in spirit (client/server separation) but didn't work well:&lt;br />&lt;ul>&lt;li>FAM is abandoned.&lt;br />&lt;/li>&lt;li>Does not support kqueue out of the box.&lt;/li>&lt;li>FAM runs as root.&lt;br />&lt;/li>&lt;li>FAM is too hard to set up: it requires rpcbind, an addition to &lt;tt>/etc/services&lt;/tt>, a sysctl tweak, and the configuration of a system-level daemon.&lt;/li>&lt;/ul>To solve some of these problems, a drop-in replacement for FAM was started. &lt;a href="http://people.gnome.org/%7Eveillard/gamin/">Gamin&lt;/a>, as it is known, still does not fix everything:&lt;br />&lt;ul>&lt;li>Gamin is abandoned.&lt;/li>&lt;li>Supports kqueue out of the box, but does not work very well.&lt;/li>&lt;li>Actually, Gamin itself does not work. Running the tests provided by the distfile in a modern Linux system results in several test failures.&lt;br />&lt;/li>&lt;/ul>Anyway. Did you notice the &lt;span style="font-style: italic;">abandoned&lt;/span> pattern above? This is important: in the new world order, Gnome does not use FAM any more.&lt;br />&lt;br />The new structure to monitor files is: the low-level glib library provides the gio module, which has some file system monitoring APIs. The GVFS module provides higher level abstractions to file system management, and relies on gio for file system monitoring. There is no more GNOME VFS any more.&lt;br />&lt;br />The &lt;span style="font-style: italic;">key&lt;/span> point is: gio uses inotify directly; no abstraction layers in between. FAM support is still there for platforms without inotify, but as it is not used in Linux any more, it rots. Linux developers will never experience what it is to have a system that needs to use FAM to get this functionality to work.&lt;br />&lt;br />At last, let's look at the status of all this in NetBSD:&lt;br />&lt;ul>&lt;li>The FAM package was &lt;a href="https://jmmv.dev/2004/10/fam-and-kqueue.html">patched to support kqueue&lt;/a>. Although this kinda works, it is not perfect. Also, as mentioned above, FAM is, I'd say, the package with the hardest installation procedure of the whole Gnome platform.&lt;br />&lt;/li>&lt;li>The Gamin packages are nicer than the FAM package regarding their configuration. However, when using Gamin instead of FAM, all sorts of bugs appear in Gnome (it actually gets stuck during startup for me). The breakage of the unit tests does not provide any confidence, and the fact that Gamin is abandoned, the idea of fixing it doesn't make me thrive.&lt;/li>&lt;li>The glib2 package &lt;span style="font-style: italic;">depends&lt;/span> on FAM. This is ugly; really ugly. I had to shout WTF when I saw this, seriously.&lt;/li>&lt;li>Seeing the direction gio/gvfs take, it is obvious that things can only get worse in the future.&lt;br />&lt;/li>&lt;/ul>If time permits, I'm planning to work on improving this whole situation. Ideas include:&lt;br />&lt;ul>&lt;li>Splitting the FAM gio module out of the glib2 package. Ideally, this would happen upstream.&lt;/li>&lt;li>Implement a gio backend for kqueue.&lt;/li>&lt;li>Check if the core packages still using gnome-vfs have a more recent version that uses gvfs instead and, if so, update them.&lt;br />&lt;/li>&lt;/ul>Can't promise you anything other than, if I get to work on it, I will keep you posted!</description></item><item><title>Software bloat, 2</title><link>https://jmmv.dev/2008/02/software-bloat-2.html</link><pubDate>Thu, 28 Feb 2008 17:27:00 -0500</pubDate><guid>https://jmmv.dev/2008/02/software-bloat-2.html</guid><description>A long while ago &amp;mdash; just before buying the MacBook Pro &amp;mdash; I already &lt;a href="http://julipedia.blogspot.com/2006/12/software-bloat.html">complained about software bloat&lt;/a>. A year and two months later, it is time to complain again.&lt;br />&lt;br />I am thinking on renewing my MacBook Pro assuming I can sell this one for a good price. The reasons for this are to get slightly better hardware (more disk, better GPU and maybe 4GB of RAM) and software updates. The problem is: if I am able to find a buyer, I will be left without a computer for some days, and that's not a good scenario. I certainly don't want to order the new one without being certain that I will be paid enough for the current one.&lt;br />&lt;br />So yesterday I started assembling some old components I had lying around aiming at having an old but functional computer to work with. But today I realized that I also had the PlayStation 3 with Fedora 8 already installed, and that it'd be enough to use as a desktop for a week or so. I had trimmed down the installation to the bare minimum so that it'd boot as fast as possible and to leave free resources for testing Cell-related stuff. But if I wanted to use the PS3 as a desktop, I needed, for example, GNOME.&lt;br />&lt;br />Ew. Doing a &lt;tt>yum groupinstall "GNOME Desktop Environment"&lt;/tt> took quite a while, and not because of the network connection. But even if we leave that aside, starting the environment was painful. &lt;i>Really&lt;/i> painful. And Mono was not there, at all! It is amazing how unusable the desktop is with "only" 256MB of RAM; the machine is constantly going to swap, and the disk being slow does not help either. I still remember the days when 256MB was a lot, and desktop machines were snappy enough with only half of that, or even less.&lt;br />&lt;br />OK, so GNOME is a lot for 256MB of RAM. I am now writing this from the PS3 itself running WindowMaker. Which unfortunately does not solve all the problems &amp;mdash; and the biggest one is that it is not a desktop environment. Firefox also requires lots of resources to start, and doing something else in the background still makes the machine use swap. (Note that I have disabled almost all of the system services enabled by default in Fedora, including SELinux.)&lt;br />&lt;br />If I finally sell my MBP, this will certainly be enough for a few days... but it's a pity to see how unusable it is. (Yeah, by today's standards, the PS3 is extremely short on RAM, I know, but GNOME used to run quite well with this amount of RAM just a few years ago.)</description></item><item><title>A letter to NetBSD</title><link>https://jmmv.dev/2006/09/letter-to-netbsd.html</link><pubDate>Sat, 23 Sep 2006 13:21:00 -0400</pubDate><guid>https://jmmv.dev/2006/09/letter-to-netbsd.html</guid><description>&lt;p>Dear NetBSD,&lt;/p>
&lt;p>It is almost five years since we first met and I still remember how much
I liked you at that time. Despite your 1.5 release had slow disk
performance when compared to the other BSDs, I found in you an operating
system that just felt right. You focused on clean and well designed code
among many other goals; sincerely, I didn&amp;rsquo;t come to you looking for
portability because I never had anything else than i386 machines. All
these feelings turned into love after installing and experimenting with
you: the system was minimal, well documented and made sense. As you
know, I soon left FreeBSD and migrated my machines to you.&lt;/p></description></item><item><title>GNOME on NetBSD needs YOU!</title><link>https://jmmv.dev/2006/09/gnome-on-netbsd-needs-you.html</link><pubDate>Fri, 01 Sep 2006 15:30:00 -0400</pubDate><guid>https://jmmv.dev/2006/09/gnome-on-netbsd-needs-you.html</guid><description>A few &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a> developers and I have been working hard for years to bring the &lt;a href="http://www.gnome.org/">GNOME Desktop&lt;/a> to this packaging system and make it work under &lt;a href="http://www.NetBSD.org/">NetBSD&lt;/a>. We are quite happy with the current results because the packages are updated very frequently and everything works. Well, &lt;i>almost&lt;/i>. There are still several missing details that really hurt the end user experience and need fixing.&lt;br />&lt;br />If things continue as have gone until now, we will always be one step (or more!) behind other operating systems such as Linux and FreeBSD. Linux, of course, gets full support from the GNOME developers because they do their daily work on it. FreeBSD, on the other hand, has more people working on the port and therefore have more manpower to resolve all the portability problems; they are doing a nice work.&lt;br />&lt;br />In our case, it is clear that we do not have enough manpower to keep up with the huge task that porting GNOME is &amp;mdash; we are &lt;i>very few&lt;/i> people working on it. Just consider that GNOME is composed of around 100 packages and that there are new major releases every 6 months (minor ones coming much faster). This updating task imposes a lot of stress on us that prevents us from working on the remaining pending items.&lt;br />&lt;br />If we were able to work on all these issues, we could have a fully-functional GNOME Desktop on top of NetBSD. I belive this is a key area to improve NetBSD's visibility: if we had a complete desktop evnrionment, more users could come and use NetBSD for their daily tasks. Eventually, this could attract more developers who would start contributing to the system itself.&lt;br />&lt;br />So... I've prepared a &lt;a href="http://www.netbsd.org/contrib/projects.html#gnome">list of GNOME-related projects&lt;/a> that details the major items that need to be addressed to have a complete GNOME Desktop installation on top of NetBSD and pkgsrc. I've tried to detail each project as much as possible, explaining the current problem, why solving it could benefit NetBSD and how to get started.&lt;br />&lt;br />Should you need more information, I've also written some generic &lt;a href="http://www.netbsd.org/Documentation/pkgsrc/gnome.html">guidelines&lt;/a> about GNOME packaging and porting. And, of course, you can &lt;a href="mailto:jmmv AT NetBSD DOT org">contact me&lt;/a> to get more details and take one of the projects! I'm willing to mentor you to make them success. You can certainly make a difference to the current status of things.&lt;br />&lt;br />Let me add that I've have &lt;i>learned a lot&lt;/i> about many different areas from my contributions to pkgsrc and NetBSD. You can seize the opportunity to learn new exciting stuff too; don't be shy! Oh... and if GNOME on NetBSD is not of your preference, please see our &lt;a href="http://www.netbsd.org/contrib/projects.html">complete list of proposed projects&lt;/a>; I bet you will find something of your interest!</description></item><item><title>Recent GNOME fixes</title><link>https://jmmv.dev/2006/08/recent-gnome-fixes.html</link><pubDate>Mon, 28 Aug 2006 11:02:00 -0400</pubDate><guid>https://jmmv.dev/2006/08/recent-gnome-fixes.html</guid><description>A week has almost passed since someone told me that D-Bus' session daemon was broken in NetBSD. I curse that day! ;-) I've been investigating that problem since then and (very) beleatedly fixing some issues in other GNOME programs during the process.&lt;br />&lt;br />D-Bus' session daemon did not work under NetBSD because it couldn't authenticate incoming connections; that was due to the lack of socket credentials. After some of days of investigation &amp;mdash; which included discovering that NetBSD does indeed support socket credentials through &lt;a href="http://julipedia.blogspot.com/2006/08/localcreds-socket-credentials.html">LOCAL_CREDS&lt;/a> &amp;mdash; and multiple attempts to implement them, I finally got D-Bus session daemon to authenticate appropriately.&lt;br />&lt;br />This served me to fix gnome-keyring too, which was broken for the exact same reason, and gnome-keyring-manager, the application I was using to check whether gnome-keyring worked or not.&lt;br />&lt;br />At last I also finally sat down and solved an annoying problem in the gnome-applets package that caused the Sticky Notes applet to crash when adding a new note; this had been happening since 2.12.0 if I recall correctly. I am sure that the root of this problem was also producing incorrect behavior in other panel applets.&lt;br />&lt;br />For more details check these out:&lt;br />&lt;ul>&lt;li>dbus: &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=7998">#7798 - Generalize kqueue support&lt;/a>&lt;/li>&lt;li>dbus: &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=8037">#8037 - Improve debugging messages in exchange_credentials&lt;/a>&lt;/li>&lt;li>dbus: &lt;a href="https://bugs.freedesktop.org/show_bug.cgi?id=8041">#8041 - Add LOCAL_CREDS socket credentials support&lt;/a>&lt;/li>&lt;li>gnome-keyring: &lt;a href="http://bugzilla.gnome.org/show_bug.cgi?id=353105">#353105 - Implement LOCAL_CREDS socket credentials&lt;/a>&lt;/li>&lt;li>gnome-applets: &lt;a href="http://bugzilla.gnome.org/show_bug.cgi?id=353239">#353239 - Get rid of AC_DEFINE_DIR&lt;/a>&lt;/li>&lt;li>gnome-keyring-manager: &lt;a href="http://bugzilla.gnome.org/show_bug.cgi?id=353251">#353251 - Better handling of null paths&lt;/a>&lt;br />&lt;/li>&lt;/ul>Ouch... and GNOME 2.16 is around the corner... I'm afraid of all the new problems to come!</description></item><item><title>GNOME 2.14.3 hits pkgsrc</title><link>https://jmmv.dev/2006/08/gnome-2143-hits-pkgsrc.html</link><pubDate>Mon, 07 Aug 2006 12:33:00 -0400</pubDate><guid>https://jmmv.dev/2006/08/gnome-2143-hits-pkgsrc.html</guid><description>Last night I finished updating the &lt;a href="http://www.gnome.org/">GNOME&lt;/a> meta packages in &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a> to the latest stable version, 2.14.3. Yes, I had to take a break from Boost.Process coding (which is progressing nicely by the way; check the &lt;a href="http://www.NetBSD.org/%7Ejmmv/process/">docs&lt;/a>).&lt;br />&lt;br />The meta packages had been stalled at 2.14.0 since the big update back in April which shows how few time I've had to do any pkgsrc work — well, you can also blame the iBook with its Mac OS X, if you want to ;-) Luckily the packages are now up to date, but I hope they'll not get stalled at this version for too long: 2.16.0 is around the corner (due in one-two months!).&lt;br />&lt;br />I must thank Matthias Drochner and Thomas Klausner for all their work in the GNOME packages during this period of time. Although they did not touch the meta packages, almost all of the components were brought up to date very promptly after each stable release; in fact, I just had to update a dozen of packages on my own to get a complete 2.14.3 installation, aside from tweaking the meta packages.&lt;br />&lt;br />Let me finish with a call for help: the biggest thing missing (in my opinion, that is) in GNOME under NetBSD right now is &lt;a href="http://freedesktop.org/wiki/Software/hal">HAL&lt;/a>. It shouldn't be too difficult to get to work but will certainly require several days of discussion and coding. Shall you want to help here (which basically boils down to adding a kernel driver and porting the userland utilities), feel free to &lt;a href="mailto:jmmv" at="" netbsd="" dot="" org="">contact me&lt;/a> for more details.</description></item><item><title>X11 and the Win keys</title><link>https://jmmv.dev/2006/08/x11-and-win-keys.html</link><pubDate>Sun, 06 Aug 2006 06:29:00 -0400</pubDate><guid>https://jmmv.dev/2006/08/x11-and-win-keys.html</guid><description>For quite some time I've been having issues with the Windows keys in my Spanish keyboard under X11. I like to use these as an extra modifier (Mod4) instead of a regular key (Super_L), because it is very handy when defining keybindings. The X11 default seems to treat them as Super_L only. For example, trying to attach Win+N as a keybinding to one of the actions in the GNOME Keyboard Shortcuts panel resulted in the Super_L combination instead of Mod4+L, hence not working at all.&lt;br />&lt;br />Fortunately, I found how to fix that within GNOME a while ago. It is simply a matter of enabling the "Meta is mapped to the left Win-key" option in the Keyboard configuration panel. But... I was now forced to use Fluxbox while I rebuild some parts of GNOME and the modifier was not working because the system was using X11 defaults again.&lt;br />&lt;br />After inspecting &lt;tt>/etc/X11/XF86Config&lt;/tt> and some of the files in &lt;tt>/usr/X11R6&lt;/tt> I found how to enable this behavior in the regular X11 configuration files, bypassing GNOME. It is a matter of adding the following line to the keyboard section of &lt;tt>XF86Config&lt;/tt>:&lt;br />&lt;br />&lt;tt>Option "XkbOptions" "altwin:left_meta_win"&lt;/tt>&lt;br />&lt;br />I guess this works the same for X.Org.&lt;br />&lt;span style="font-size:-1;">&lt;/span></description></item><item><title>Disabling bitmapped fonts</title><link>https://jmmv.dev/2006/06/disabling-bitmapped-fonts.html</link><pubDate>Sun, 25 Jun 2006 15:20:00 -0400</pubDate><guid>https://jmmv.dev/2006/06/disabling-bitmapped-fonts.html</guid><description>A week ago or so I reinstalled NetBSD &amp;mdash; 3.0_STABLE, not current &amp;mdash; on my machine, finally replacing the previous unstable and out-of-control system. I had to do it to get some work done more easily than on Windows and to be able to keep up with my developer duties.&lt;br />&lt;br />After a successful and painless installation, I built and installed Firefox and Windowmaker, both of which come handy from time to time (specially while rebuilding the entire GNOME Desktop). However, launching Firefox under a plain Windowmaker session greeted me with extremely ugly fonts. The GTK interface was OK, but web pages were rendered horribly in general. It was simply unusable.&lt;br />&lt;br />At first I thought it had to do with the anti-aliasing configuration, but several attempts to change its details only resulted in worse fonts. The same happened when dealing with DPI settings. So what was happening? It turns out that Firefox was using bitmapped fonts instead of vector ones &amp;mdash; and you know how ugly these look if they are not rendered in their native size.&lt;br />&lt;br />Firefox was asking &lt;a href="http://www.fontconfig.org/">Fontconfig&lt;/a> (X's font configuration and access library) to provide a font from the Serif family, without caring about which it could be. Fontconfig then provided it with a bitmapped font. (I still don't know why it preferred those over any other.)&lt;br />&lt;br />The nice thing is that you can tell Fontconfig how to match generic font names to the fonts you really have. And this effectively means that you can force it to never use bitmapped fonts. All I had to do was to create a custom &lt;tt>local.conf&lt;/tt> file in Fontconfig's configuration directory (&lt;tt>/etc/pkg/fontconfig&lt;/tt> in my case):&lt;pre>&amp;lt;?xml version="1.0"?&amp;gt;&lt;br />&amp;lt;!DOCTYPE fontconfig SYSTEM "fonts.dtd"&amp;gt;&lt;br />&amp;lt;fontconfig&amp;gt;&lt;br />&amp;lt;include&amp;gt;conf.d/no-bitmaps.conf&amp;lt;/include&amp;gt;&lt;br />&amp;lt;/fontconfig&amp;gt;&lt;/pre>The curious thing is that GNOME seems to take care of this on its own because Firefox uses nice fonts under it even if you do not touch Fontconfig files.&lt;br />&lt;br />Oh! Be aware that NetBSD has two Fontconfig installations: one from the native XFree86 installation and one from pkgsrc. These are configured in different directories: &lt;tt>/etc/fonts&lt;/tt> and &lt;tt>PKG_SYSCONFDIR/fontconfig&lt;/tt> respectively.&lt;br />&lt;br />Don't know if this issue also happens in other operating systems if Fontconfig is not manually configured...</description></item><item><title>GNOME 2.14.0 hits pkgsrc</title><link>https://jmmv.dev/2006/04/gnome-2140-hits-pkgsrc.html</link><pubDate>Sun, 02 Apr 2006 06:37:00 -0400</pubDate><guid>https://jmmv.dev/2006/04/gnome-2140-hits-pkgsrc.html</guid><description>After three weeks of intense work, I am pleased to announce that &lt;a href="http://www.gnome.org/start/2.14/">GNOME 2.14&lt;/a> is now available in &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a>, the NetBSD Packages Collection.&lt;br />&lt;br />As happens with all other major GNOME releases, this one provides a set of polishments, cleanups and several new features over the 2.12 series. You can find more information in the official release page (linked above).&lt;br />&lt;br />I am happy to say that this release works fairly well under NetBSD. There are still some rough edges (that is, programs that crash on startup or do not work as expected) but there shouldn't be much regressions from the previous version. I think I will prepare a list of known broken stuff in case people wants to help because fixing everything requires a lot of manpower.&lt;br />&lt;br />To give you some approximate numbers, the process consisted of 80 package updates, 8 new packages and 16 revisions of the new and updated packages. Some more may come in the following days.&lt;br />&lt;br />As usual, updating from older versions is not exactly easy using pkgsrc. I suggest you to either build the whole new release in a sandbox using pkg_comp or zap all your installed packages to reinstall from scratch.&lt;br />&lt;br />How to install it? Just use the &lt;tt>meta-pkgs/gnome&lt;/tt> package to install everything that is part of the official GNOME distribution or choose &lt;tt>meta-pkgs/gnome-base&lt;/tt> if all you want is a minimal desktop.&lt;br />&lt;br />Please &lt;a href="http://www.netbsd.org/Misc/send-pr.html#submitting">report any problems&lt;/a> you find using send-pr(1).&lt;br />&lt;br />You can also check out the &lt;a href="http://mail-index.netbsd.org/pkgsrc-users/2006/04/02/0000.html">official announcement&lt;/a>. Have fun!</description></item><item><title>Fixing GNOME's trash under NetBSD</title><link>https://jmmv.dev/2006/03/fixing-gnomes-trash-under-netbsd.html</link><pubDate>Wed, 29 Mar 2006 15:52:00 -0500</pubDate><guid>https://jmmv.dev/2006/03/fixing-gnomes-trash-under-netbsd.html</guid><description>For a very long long time (probably since forever), the trash icon in GNOME has not worked in NetBSD. You'd drag files onto it and they were appropriately deleted but, unfortunately, the trash did not update its status to reflect the removed files. If you opened the folder, it appeared empty despite &lt;tt>~/.Trash&lt;/tt> contained the deleted files. As you can image this was very annoying as it made the trash near to useless.&lt;br />&lt;br />However, and by pure luck, some days ago I noticed that the trash icon showed some files on my machine. For a moment I thought that the problem had been fixed with GNOME 2.14.0. But I was wrong: &lt;tt>~/.Trash&lt;/tt> didn't contain the files shown in the trash window; the files were really stored in &lt;tt>/vol/data/.Trash-jmmv&lt;/tt>. So why was it picking up the files from one directory but not from the other one?&lt;br />&lt;br />I started by looking for the &lt;tt>.Trash&lt;/tt> string in gnome-vfs which led me to a piece of code that returns the trash directory for a given volume. I first thought that there could be a problem detecting the home directory so I added some debugging messages there; everything looked correctly.&lt;br />&lt;br />After digging some more and thanks to the &lt;tt>test/test-volume&lt;/tt> test utility, I ended up in the &lt;tt>libgnomevfs/gnome-vfs-filesystem-type.c&lt;/tt> file. This contains a table called &lt;tt>fs_data&lt;/tt> that maps each file system name to a description and to a boolean. The boolean indicates whether the file system is supposed to hold a trash or not. As you can imagine, &lt;tt>ffs&lt;/tt> was not part of this list, so the code felt back to the default values that specify that there was no trash.&lt;br />&lt;br />Solving the issue was trivial. I just had to add the appropriate file system names to the table, rebuild gnome-vfs and experience the trash icon to its full power :-) The issue is reported in &lt;a href="http://bugzilla.gnome.org/show_bug.cgi?id=336533">bug #336533&lt;/a> and is already commited to pkgsrc. Therefore, it will be part of the forthcoming pkgsrc-2006Q1 stable branch.</description></item><item><title>GNOME and the dbus daemon</title><link>https://jmmv.dev/2006/03/gnome-and-dbus-daemon.html</link><pubDate>Mon, 27 Mar 2006 16:10:00 -0500</pubDate><guid>https://jmmv.dev/2006/03/gnome-and-dbus-daemon.html</guid><description>It is a fact that &lt;a href="http://www.freedesktop.org/wiki/Software/dbus">dbus&lt;/a> is becoming popular and that many parts of GNOME are starting to use it. Nowadays, some applications even fail to start if dbus is not present (e.g. epiphany).&lt;br />&lt;br />Unfortunately, things do not work out of the box when installing GNOME from sources &amp;mdash; or when using an "uncustomized" OS; see below &amp;mdash; because there is nothing in GNOME that launches a dbus-daemon session at startup. Therefore, the user is forced to either:&lt;ul>&lt;li>Change his &lt;tt>~/.xinitrc&lt;/tt> to do &lt;tt>exec dbus-launch gnome-session&lt;/tt> instead of the traditional &lt;tt>exec gnome-session&lt;/tt>.&lt;/li>&lt;li>Edit his gdm configuration files to launch dbus-daemon before gnome-session.&lt;/li>&lt;/ul>As you can see, both "solutions" are cumbersome because they break the previous behavior and because they require the user to take extra steps to get things working.&lt;br />&lt;br />Of course, in the disordered Linux world, distributions such as Ubuntu or Fedora Core include customized and rather complex X startup scripts that launch dbus-daemon during a session setup. Non-dbus-enabled systems (such as NetBSD) could ship modified gdm packages to avoid this problem, but users could still hit a problem when using the traditional startx or other session managers such as xdm or kdm.&lt;br />&lt;br />I do not need to mention that some systems (e.g. NetBSD again) will not ever include &amp;mdash; unless things change dramatically &amp;mdash; a call to dbus-daemon in their standard X11 scripts.&lt;br />&lt;br />A possible solution is to modify the gnome-session utility to spawn a dbus-daemon process on its own, just as it does with gconf or gnome-keyring. This way the user needn't remember to start dbus on his own as the GNOME session manager will do it automatically. With this in place, GNOME magically works again in these dbus-agnostic systems.&lt;br />&lt;br />And yes, this solution is already implemented. It has kept me busy for two days but you can find the code in &lt;a href="http://bugzilla.gnome.org/show_bug.cgi?id=336237">bug 336327&lt;/a>. I hope to get some positive feedback and integrate it into pkgsrc until an official gnome-session release does it (if ever). If it is not integrated... well, I guess I'll have to go the gdm-patching route.&lt;br />&lt;br />By the way, I have to say this: more than 300 lines of C code to do something that can be achieved in less than 10 lines of shell script... people seem to like to make their lives more complex than need be ;-)</description></item><item><title>GNOME 2.14.0 released</title><link>https://jmmv.dev/2006/03/gnome-2140-released.html</link><pubDate>Sun, 19 Mar 2006 14:40:00 -0500</pubDate><guid>https://jmmv.dev/2006/03/gnome-2140-released.html</guid><description>OK, I know this comes late but I had to publish it. &lt;a href="http://www.gnome.org/start/2.14/">GNOME 2.14.0&lt;/a> was &lt;a href="http://mail.gnome.org/archives/gnome-announce-list/2006-March/msg00053.html">published a few days ago&lt;/a>. As happens with all other major releases in the 2.x series, this one comes with several improvements and tons of bug fixes. Note that these are not "very big" changes; they can be seen as minor refinements over the previous version, aiming for a better user experience. You can check &lt;a href="http://www.linux.com/article.pl?sid=06/03/17/0350228">this review&lt;/a> for more information.&lt;br />&lt;br />I have alread played with this version in its full power: I installed Ubuntu Dapper to get it up and running in few hours, resulting in a fully working desktop environment. (I think I'm leaving KDE again ;-)&lt;br />&lt;br />Now I'm dealing with the update in pkgsrc; I've almost got the &lt;tt>gnome-base&lt;/tt> package up to date, so I hope to be able to boot into this new version tomorrow or so. Thanks to the currently running package freeze, I can work on the update without interferences for a period of two weeks in which I hope to get the new version running, shake out some bugs and feed some patches back. I hate to see some packages such as &lt;tt>gnome-vfs2&lt;/tt> or &lt;tt>libgtop2&lt;/tt> with lots of local patches, as they are almost unmaintenable.&lt;br />&lt;br />(I know, I know... the freeze is aimed at solving bugs. But I do this big update now that I have some-but-not-much free time or I won't be able to do it.)</description></item><item><title>Linux problems: binary redistribution</title><link>https://jmmv.dev/2006/03/linux-problems-binary-redistribution.html</link><pubDate>Sat, 11 Mar 2006 07:39:00 -0500</pubDate><guid>https://jmmv.dev/2006/03/linux-problems-binary-redistribution.html</guid><description>&lt;a href="http://thomas.apestaart.org/log">thomasvs&lt;/a> (who appears in &lt;a href="http://planet.gnome.org/">Planet GNOME&lt;/a>) is running a post titled &lt;a href="http://thomas.apestaart.org/log/?p=350">How not to solve a problem&lt;/a> in his blog. He talks about the aggressive tone used in &lt;a href="http://plan99.net/autopackage/Linux_Problems">a page from Autopackage's wiki&lt;/a> and how it can cause a bad impression of that project. (I was going to reply to his post in his blog but commenting is unsupported... so posting this here.)&lt;br />&lt;br />That "Linux problems" page talks about many issues that arise when trying to redistribute software in binary form for the Linux platform. It outlines many real problems that users face when using binaries not specifically built for their installation and how it prevents developers from creating binary-only versions of their programs that will work anywhere.&lt;br />&lt;br />That page is certainly a good read. It contains a lot of technical interesting details of how ABI compatibility is broken often. (But you know, &lt;i>Linux is just a kernel&lt;/i> so some of them may be unsolvable, unfortunately.)&lt;br />&lt;br />You need to have suffered these problems to understand the tone of the page (which might be improved to be a bit more polite). It is frustrating to see how people continues to do "incorrect" things that cause pain to third parties. OK, OK, this is because those people are not aware of the issues... but hey, that's what that page is for, &lt;i>to inform them&lt;/i>!&lt;br />&lt;br />I already expressed my concerns &lt;a href="http://www.onlamp.com/pub/a/onlamp/2005/03/31/packaging.html">here&lt;/a> and &lt;a href="http://www.onlamp.com/pub/a/onlamp/2005/04/28/packaging2.html">here&lt;/a>. They are not about binary portability, but I feel they are somewhat related.</description></item></channel></rss>