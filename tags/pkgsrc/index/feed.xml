<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pkgsrc on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/pkgsrc/index.html</link><description>Recent content in Pkgsrc on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&#150;2025 Julio Merino</copyright><lastBuildDate>Wed, 26 Aug 2020 08:55:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/pkgsrc/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>pkgdb belongs in libdata, not var</title><link>https://jmmv.dev/2020/08/pkgdb-libdata-var.html</link><pubDate>Wed, 26 Aug 2020 08:55:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/08/pkgdb-libdata-var.html</guid><description>The pkgsrc package database, which by default lives in /var/db/pkg/, should not be there. Instead, it should be under /usr/pkg/libdata/pkgdb/. The same applies to FreeBSD&amp;rsquo;s and OpenBSD&amp;rsquo;s ports and also Debian&amp;rsquo;s dpkg, but I&amp;rsquo;ll focus on pkgsrc because it&amp;rsquo;s the system I know best. Let&amp;rsquo;s see why the current default is suboptimal and why libdata is a good alternative.</description></item><item><title>Announcing etcutils 0.1</title><link>https://jmmv.dev/2010/05/announcing-etcutils-01.html</link><pubDate>Fri, 07 May 2010 05:03:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2010/05/announcing-etcutils-01.html</guid><description>During past week, I worked on a new package called etcutils. It provides a (reduced) tool-set to programmatically manage files in &lt;tt>/etc&lt;/tt> and is specially designed to allow pkgsrc to update &lt;tt>/etc/shells&lt;/tt> and &lt;tt>/etc/services&lt;/tt> in a more consistent way.&lt;br />&lt;br />I'm happy to say that the 0.1 release is now ready! Go to the &lt;a href="http://www.netbsd.org/%7Ejmmv/etcutils/">etcutils web page&lt;/a> for details. (I know that if you are a Linux user, you probably don't care about this because your distribution most likely already provides something similar... albeit more complex.)&lt;br />&lt;br />I'll now proceed to import this new package into pkgsrc as &lt;tt>sysutils/etcutils&lt;/tt>. Later on (most likely not today), the following should happen: rework pkginstall to use the new shells(8) utility to update &lt;tt>/etc/shells&lt;/tt>, add a new feature to pkgsrc to abstract the updates to &lt;tt>/etc/services&lt;/tt>, and swipe through pkgsrc to make all packages touching this file use the new frameworky option. (Hey FAM, that includes you!)</description></item><item><title>New gio-fam package</title><link>https://jmmv.dev/2010/04/new-gio-fam-package.html</link><pubDate>Tue, 20 Apr 2010 13:48:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2010/04/new-gio-fam-package.html</guid><description>As briefly outlined in the &lt;a href="https://jmmv.dev/2010/04/file-system-monitoring-gnome-and-netbsd.html">previous post&lt;/a>, new versions of Glib provide GIO, a library that intends to be a low-level file system API on top of the POSIX interface. This library provides an interface to asynchronously wait for file system change notifications including the creation, deletion and modification of files.&lt;br />&lt;br />The monitoring functionality in GIO is modular: it is backed by different loadable plugins that implement OS-specific functionality. In particular, GIO uses an inotify module in Linux and a &lt;a href="http://oss.sgi.com/projects/fam/">FAM&lt;/a> module everywhere else.&lt;br />&lt;br />Up until now, the &lt;tt>devel/glib2&lt;/tt> package in pkgsrc provided a build-time option to specify whether to build the GIO FAM plugin or not. Given that this plugin is built as a shared object that is loaded dynamically at run-time, having a build-time option for this is clearly wrong: it gives no choice to those relying on binary packages (e.g. end/new users). Furthermore, it adds a dependency on the ugly-FAM at the very bottom of the huge Gnome dependency chain. (As already stated, FAM is outdated and hard to set up.)&lt;br />&lt;br />So, based on this, I've just removed all FAM support from &lt;tt>devel/glib2&lt;/tt> altogether and packaged its loadable module as &lt;tt>sysutils/gio-fam&lt;/tt>.&lt;br />&lt;br />Now waiting for a clean rebuild of the Gnome packages to see if the desktop now works on my machine by avoiding FAM/Gamin.</description></item><item><title>NetBSD in Google Summer of Code 2010</title><link>https://jmmv.dev/2010/03/netbsd-in-google-summer-of-code-2010.html</link><pubDate>Fri, 19 Mar 2010 04:36:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2010/03/netbsd-in-google-summer-of-code-2010.html</guid><description>For the 6th year in a row, &lt;a href="http://www.netbsd.org/">NetBSD&lt;/a> is a mentoring organization for &lt;a href="http://code.google.com/soc/">Google Summer of Code&lt;/a> 2010!&lt;br />&lt;br />If you are a bright student willing to develop full-time for an open source project during this coming summer, consider applying with us! You will have a chance to work with very smart people and, most likely, in the area that you are most passionate about. NetBSD, being an operating system project, has offers for project ideas at all levels: from the kernel to the packaging system, passing by drivers, networking tools, user-space utilities, the system installer, automation tools and more!&lt;br />&lt;br />I would like to point you at the 3 project proposals I'm willing to directly mentor:&lt;br />&lt;ul>&lt;li>&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#optimize-atf">Optimize and speed-up ATF&lt;/a>: Make the testing framework blazing fast so that running the NetBSD automated tests does not take ages on slow platforms.&lt;br />&lt;/li>&lt;li>&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#reorganize-atf">Reorganize ATF to improve modularity&lt;/a>: Refactor pieces of the testing framework so that it is easier to redistribute, has cleaner interfaces and is easier to depend on from third-party projects.&lt;br />&lt;/li>&lt;li>&lt;a href="http://www.netbsd.org/contrib/soc-projects.html#rewrite-pkg_comp">Rewrite pkg_comp with portability as a major goal&lt;/a>: Use Python to create a tool to automatically build binary packages from within a sandbox.&lt;/li>&lt;/ul>If you find any of the above projects interesting, or if you have any other project proposal that you think I could mentor, do not hesitate to &lt;a href="mailto:jmmv%20at%20netbsd%20dot%20org">contact me&lt;/a>. Feel free to send me a draft of &lt;a href="http://www.netbsd.org/contrib/soc-application.html">your application&lt;/a>, together with a bit of information about you, so that we can discuss your proposal and make sure it gets selected!&lt;br />&lt;br />Or, if none of the projects above interests you, please do check out the &lt;a href="http://www.netbsd.org/contrib/soc-projects.html">full list of NetBSD project proposals&lt;/a>. I'm sure you will find something that suits your interests :-)</description></item><item><title>New version of the monotone-server package in pkgsrc</title><link>https://jmmv.dev/2010/03/new-version-of-monotone-server-package.html</link><pubDate>Fri, 12 Mar 2010 04:30:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2010/03/new-version-of-monotone-server-package.html</guid><description>Wow, it has been a long time... 5 years ago, I created the &lt;a href="http://cvsweb.netbsd.org/bsdweb.cgi/pkgsrc/devel/monotone-server/?only_with_tag=MAIN">monotone-server&lt;/a> package in pkgsrc, a package that provided an interactive script to set up a &lt;a href="http://monotone.ca/">monotone&lt;/a> server from scratch with, what I though, minimal hassle.&lt;br />&lt;br />My package did the job just fine, but past year I was blown away by the simplicity of the same package in &lt;a href="http://www.fedoraproject.org/">Fedora&lt;/a>: their &lt;tt>init.d&lt;/tt> script provides a set of extra commands to initialize the server before starting it up, and that is it. No need to mess with a separate interactive script; no need to create and memorize passphrases that you will never use; and, what's more, all integrated in the only single place that makes sense: in the init.d "service management" script.&lt;br />&lt;br />It has been a while since I became jealous of their approach, but I've finally got to it: I've spent the last few days rewriting the monotone-server package in pkgsrc and came up with a similar scheme. And this &lt;a href="http://mail-index.netbsd.org/pkgsrc-changes/2010/03/12/msg038844.html">new package&lt;/a> just made its way &lt;a href="http://mail-index.netbsd.org/pkgsrc-changes/2010/03/12/msg038844.html">&lt;/a>to pkgsrc-HEAD! The new package comes with what I think is a detailed manual page that explains how to configure the server from scratch. Take a look and, if you find any mistakes, inconsistencies or improvements to be done, let me know!&lt;br />&lt;br />In the meantime, I will log into my home server, rebuild the updated package and put it in production :-)</description></item><item><title>Extending sudo credentials</title><link>https://jmmv.dev/2009/09/extending-sudo-credentials.html</link><pubDate>Wed, 23 Sep 2009 05:10:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2009/09/extending-sudo-credentials.html</guid><description>If you use sudo for, e.g. pkgsrc's just-in-time su, you may have often bitten by the problem that some compilations are slow and the build process stops right in the middle to ask you for a root password. If you go away while the system compiles, you'll be frustrated when you come back, as the process may still well be at the very beginning.&lt;br />&lt;br />This happens because, unless disabled by the system administrator, your sudo credentials last for 5 minutes. If you hadn't used sudo for those 5 minutes, it will ask you for your password again. A simple workaround for the problem is to automatically renew your credentials, say, every 2 minutes. You can do this by running the following command (from the same console you are using later on!) right before starting a pkgsrc build:&lt;pre>$ ( while :; do sudo -v; sleep 120; done ) &amp;&lt;/pre></description></item><item><title>Keeping pkgsrc packages up to date</title><link>https://jmmv.dev/2007/05/keeping-pkgsrc-packages-up-to-date.html</link><pubDate>Sun, 27 May 2007 14:26:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2007/05/keeping-pkgsrc-packages-up-to-date.html</guid><description>drio asks in the &lt;a href="http://julipedia.blogspot.com/2005/10/suggestion-box.html">suggestion box&lt;/a> which is the best way to keep all the packages installed from &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a> up to date. I must confess that pkgsrc is quite weak in the updating area when compared to systems such as apt-get or yum. The problem comes from the fact that pkgsrc is a source-based packaging system, meaning that the end user builds packages by himself most of the times. Doing updates from such a system is hard because rebuilds take a long time and have high chances of breaking, leaving your system in an unusable status. Of course there is support for binary packages in pkgsrc, but we are not doing a good job in providing good sets of prebuilt binaries. Furthermore, and as drio stated, there is few documentation on the subject.&lt;br />&lt;br />The thing is there are several ways of updating all your installed packages. All of them are quite tedious and not "official", but with some work you can configure some scripts and cron jobs to automate the process as much as possible.&lt;br />&lt;br />Before doing an update, I usually start by running &lt;tt>pkg_chk -u -n&lt;/tt>; this tells me which packages are out of date and which are their new versions. If the resulting list is short, I tend to follow the &lt;tt>make replace&lt;/tt> procedure. This only works if the new versions of the packages are &lt;i>binary compatible&lt;/i> with the old ones, something that you cannot guarantee by looking at the version numbers. For example, you can assume that if you have version X.Y.A from the libfoo library, the newer X.Y.B will be compatible to the old one. This is generally true but not always. Plus you need to have some knowledge of the dependency graph of your installed packages. Anyway, if you want to take the risk, simply go to the pkgsrc's directory for the outdated packages and run &lt;tt>make replace&lt;/tt> in them. In most cases this works and is the fastest way to do minor updates.&lt;br />&lt;br />Things get worse when you have to update lots of stuff. The first and most obvious approach resorts to doing a clean reinstall. Start by issuing &lt;tt>pkg_delete -r "*"&lt;/tt> followed by wiping &lt;tt>/usr/pkg&lt;/tt> and &lt;tt>/var/db/pkg&lt;/tt>. Then rebuild your packages. The problems with this approach are that it introduces a huge downtime in the system — until you have rebuilt everything (which can take a long time), the tools won't be available — and that any build failure can prevent you from reconfiguring your system soon enough.&lt;br />&lt;br />Another approach involves using different installation prefixes for the old and new installations. I used to do that when working on major GNOME updates. To do this set &lt;tt>LOCALBASE&lt;/tt> to something like &lt;tt>/usr/pkg-YYYYMMDD&lt;/tt> (similarly for &lt;tt>PKG_SYSCONFBASE&lt;/tt>, &lt;tt>VARBASE&lt;/tt> and &lt;tt>PKG_DBDIR&lt;/tt>) where &lt;tt>YYYYMMDD&lt;/tt> is the date when you started the installation of that specific set of packages. Then install your packages as usual and at last create a &lt;tt>/usr/pkg&lt;/tt> symlink to point to the real directory. Do not change the date until you need to do major updates. When that time comes, change the date in your configuration to the current day; after that, pkgsrc will think that you don't have any packages installed so you can cleanly reinstall everything. Once you have finished installing all your packages again, update the &lt;tt>/usr/pkg&lt;/tt> symlink to point to the new directory and remove the old one. Voila, minimum downtime and build failures cannot bother you. (However, you will need to migrate configuration files to the new tree, for example.)&lt;br />&lt;br />The last approach I can think of involves using &lt;tt>pkg_comp&lt;/tt>. Use this tool to configure a sandbox in which you build &lt;i>binary packages&lt;/i> for all the stuff you are interested in. You can even set up a cron job to do this rebuild weekly, for example, which is trivial using the tool's &lt;tt>auto&lt;/tt> target. Once &lt;tt>pkg_comp&lt;/tt> has generated a clean set of binary packages for you, you can proceed to update your real system with those packages. The way you proceed is up to you though. You can remove everything and do a clean reinstall (which should be a quick process anyway because you needn't rebuild anything!) or use &lt;tt>pkg_add -u&lt;/tt> for the outdated packages. I think this is the safest way to proceed.&lt;br />&lt;br />Oh, I now notice that there is a &lt;tt>pkg_rolling-replace&lt;/tt> utility that can also be used for updates. Dunno how it works though.&lt;br />&lt;br />Hope this makes any sense!&lt;br />&lt;br />&lt;b>Edit (22:15)&lt;/b>: Peter Bex refers us to the &lt;a href="http://wiki.netbsd.se/index.php/How_to_upgrade_packages">How to upgrade packages&lt;/a> page in the unofficial NetBSD Wiki. It contains all these tricks plus many more, so it is worth to link it from here for completeness.</description></item><item><title>pkgsrcCon 2007 report</title><link>https://jmmv.dev/2007/04/pkgsrccon-2007-report.html</link><pubDate>Sun, 29 Apr 2007 18:10:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2007/04/pkgsrccon-2007-report.html</guid><description>pkgsrcCon 2007 is over. The conference started around 1:00pm on the 27th and has lasted until today^Wyesterday (the 29th) at around 7:00pm. There have been &lt;a href="http://www.pkgsrccon.org/2007/presentations.html">10 different talks&lt;/a> as planned, although we weren't able to follow the proposed &lt;a href="http://www.pkgsrccon.org/2007/schedule.html">schedule&lt;/a>. Most of the presentations were delayed and some were shifted because the speakers could not arrive on time. Not a big deal though.&lt;br />&lt;br />We have been, more or less, around 20-25 people. There were 30 registered, but a couple had to withdraw and some others did not come (for unknown reasons to us). Maybe the conferences were too technical or the schedule did not meet their expectations.&lt;br />&lt;br />The thing is I originally intended to write a short report after each day, but I have had literally no life outside pkgsrcCon since Thursday night. Taking care of the organization has been time consuming (and I have done almost nothing!), not to mention that recording all the presentations was exhausting; more on this below.&lt;br />&lt;br />Anyway, it has been an excellent experience. Meeting other pkgsrc developers in person has been very nice, plus they are all also very nice people too. Of course, their presentations were also interesting, and they showed extremely interesting ideas from their creators. I'm specially looking forward to seeing the preliminary results of one of the detailed projects (won't tell you which ;-).&lt;br />&lt;br />So, what did we do? We started with a pre-pkgsrcCon dinner on Thursday night, which was the first encounter among all developers. The talks started the day afterwards in the afternoon, and when they were over we had some beers and dinner together. Saturday was more of the same, even though it had more talks. We then had dinner on a nicer restaurant; great, great time. The last talks happened on Sunday, after which we had some more beers and the last dinner all together.&lt;br />&lt;br />I now have to compress all the video recordings and we have yet to decide if we will make them public and how. Stay tuned! (And don't hesitate to join for pkgsrcCon 2008; I'm sure you will enjoy it, at the very least as much as I did!)</description></item><item><title>A letter to NetBSD</title><link>https://jmmv.dev/2006/09/letter-to-netbsd.html</link><pubDate>Sat, 23 Sep 2006 13:21:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2006/09/letter-to-netbsd.html</guid><description>&lt;p>Dear NetBSD,&lt;/p>
&lt;p>It is almost five years since we first met and I still remember how much
I liked you at that time. Despite your 1.5 release had slow disk
performance when compared to the other BSDs, I found in you an operating
system that just felt right. You focused on clean and well designed code
among many other goals; sincerely, I didn&amp;rsquo;t come to you looking for
portability because I never had anything else than i386 machines. All
these feelings turned into love after installing and experimenting with
you: the system was minimal, well documented and made sense. As you
know, I soon left FreeBSD and migrated my machines to you.&lt;/p></description></item><item><title>GNOME on NetBSD needs YOU!</title><link>https://jmmv.dev/2006/09/gnome-on-netbsd-needs-you.html</link><pubDate>Fri, 01 Sep 2006 15:30:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2006/09/gnome-on-netbsd-needs-you.html</guid><description>A few &lt;a href="http://www.pkgsrc.org/">pkgsrc&lt;/a> developers and I have been working hard for years to bring the &lt;a href="http://www.gnome.org/">GNOME Desktop&lt;/a> to this packaging system and make it work under &lt;a href="http://www.NetBSD.org/">NetBSD&lt;/a>. We are quite happy with the current results because the packages are updated very frequently and everything works. Well, &lt;i>almost&lt;/i>. There are still several missing details that really hurt the end user experience and need fixing.&lt;br />&lt;br />If things continue as have gone until now, we will always be one step (or more!) behind other operating systems such as Linux and FreeBSD. Linux, of course, gets full support from the GNOME developers because they do their daily work on it. FreeBSD, on the other hand, has more people working on the port and therefore have more manpower to resolve all the portability problems; they are doing a nice work.&lt;br />&lt;br />In our case, it is clear that we do not have enough manpower to keep up with the huge task that porting GNOME is &amp;mdash; we are &lt;i>very few&lt;/i> people working on it. Just consider that GNOME is composed of around 100 packages and that there are new major releases every 6 months (minor ones coming much faster). This updating task imposes a lot of stress on us that prevents us from working on the remaining pending items.&lt;br />&lt;br />If we were able to work on all these issues, we could have a fully-functional GNOME Desktop on top of NetBSD. I belive this is a key area to improve NetBSD's visibility: if we had a complete desktop evnrionment, more users could come and use NetBSD for their daily tasks. Eventually, this could attract more developers who would start contributing to the system itself.&lt;br />&lt;br />So... I've prepared a &lt;a href="http://www.netbsd.org/contrib/projects.html#gnome">list of GNOME-related projects&lt;/a> that details the major items that need to be addressed to have a complete GNOME Desktop installation on top of NetBSD and pkgsrc. I've tried to detail each project as much as possible, explaining the current problem, why solving it could benefit NetBSD and how to get started.&lt;br />&lt;br />Should you need more information, I've also written some generic &lt;a href="http://www.netbsd.org/Documentation/pkgsrc/gnome.html">guidelines&lt;/a> about GNOME packaging and porting. And, of course, you can &lt;a href="mailto:jmmv AT NetBSD DOT org">contact me&lt;/a> to get more details and take one of the projects! I'm willing to mentor you to make them success. You can certainly make a difference to the current status of things.&lt;br />&lt;br />Let me add that I've have &lt;i>learned a lot&lt;/i> about many different areas from my contributions to pkgsrc and NetBSD. You can seize the opportunity to learn new exciting stuff too; don't be shy! Oh... and if GNOME on NetBSD is not of your preference, please see our &lt;a href="http://www.netbsd.org/contrib/projects.html">complete list of proposed projects&lt;/a>; I bet you will find something of your interest!</description></item></channel></rss>