<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>iii-iv on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/iii-iv/index/</link><description>Recent content in iii-iv on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Jun 2023 10:00:00 -0700</lastBuildDate><atom:link href="https://jmmv.dev/tags/iii-iv/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>MVC but for non-UI apps</title><link>https://jmmv.dev/2023/06/mvc-non-ui-apps.html</link><pubDate>Tue, 20 Jun 2023 10:00:00 -0700</pubDate><guid>https://jmmv.dev/2023/06/mvc-non-ui-apps.html</guid><description>In MVC isn&amp;rsquo;t MVC, which hit the Hacker News front page overnight, Collin Donnell describes how the MVC design pattern that we use today isn&amp;rsquo;t really what was originally envisioned in 1979 by Tyrgve Reenskaug. This prompted me to think about how this architecture, if tweaked even further, maps pretty well to today&amp;rsquo;s designs of other kinds of programs, and I want to explore two cases in this post: web services and CLI apps.</description></item><item><title>Introducing III-IV</title><link>https://jmmv.dev/2023/03/introducing-iii-iv.html</link><pubDate>Mon, 13 Mar 2023 06:45:00 -0700</pubDate><guid>https://jmmv.dev/2023/03/introducing-iii-iv.html</guid><description>&lt;p>Over the last couple of years, I have developed two small web services in Rust: &lt;a href="https://jmmv.dev/2021/07/endbasic-0.7.html">one for EndBASIC&lt;/a> and &lt;a href="https://jmmv.dev/2022/02/diy-web-analytics.html">one for this blog&lt;/a>. Those two web services contained significant copy/pasted helper code, which always bothered me because small bug fixes in one rarely propagated to the other. But because this only impacted two inconsequential side projects, the hinderance wasn&amp;rsquo;t a big deal.&lt;/p>
&lt;p>Until now. I now face the need to write two more web services (details TBA), and duplicating those foundations twice more felt just wrong. So I spent the last couple of weeks pulling the common code out of the existing services into a&amp;hellip; you guessed it&amp;hellip; framework, which I have called III-IV (&amp;quot;&lt;em>three four&lt;/em>&amp;quot; if you read it out loud) and am ready to announce.&lt;/p>
&lt;blockquote>
&lt;p>Find the code in &lt;a href="https://github.com/jmmv/iii-iv">https://github.com/jmmv/iii-iv&lt;/a>.&lt;/p>
&lt;/blockquote></description></item></channel></rss>