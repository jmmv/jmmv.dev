<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pkg_comp on Julio Merino (jmmv.dev)</title>
    <link>https://jmmv.dev/tags/pkg_comp/index/</link>
    <description>Recent content in pkg_comp on Julio Merino (jmmv.dev)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 05 Feb 2019 09:00:00 -0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/pkg_comp/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello, sandboxfs 0.1.0</title>
      <link>https://jmmv.dev/2019/02/sandboxfs-0-1-0.html</link>
      <pubDate>Tue, 05 Feb 2019 09:00:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2019/02/sandboxfs-0-1-0.html</guid>
      <description>I am pleased to announce that the first release of sandboxfs, 0.1.0, is finally here! You can download the sources and prebuilt binaries from the 0.1.0 release page and you can read the installation instructions for more details.
The journey to this first release has been a long one. sandboxfs was first conceived over two years ago, was first announced in August 2017, showed its first promising results in April 2018, and has been undergoing a rewrite from Go to Rust.</description>
    </item>
    
    <item>
      <title>Introducing sandboxfs</title>
      <link>https://jmmv.dev/2017/08/introducing-sandboxfs.html</link>
      <pubDate>Fri, 25 Aug 2017 16:25:18 -0400</pubDate>
      
      <guid>https://jmmv.dev/2017/08/introducing-sandboxfs.html</guid>
      <description>sandboxfs is a FUSE-based file system that exposes an arbitrary view of the host&amp;rsquo;s file system under the mount point, and offers access controls that differ from those of the host. You can think of sandboxfs as an advanced version of bindfs (or mount --bind or mount_null(8) depending on your system) in which you can combine and nest directories under an arbitrary layout.
The primary use case for this project is to provide a better file system sandboxing technique for the Bazel build system.</description>
    </item>
    
    <item>
      <title>Easy pkgsrc on macOS with pkg_comp 2.0</title>
      <link>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-macos.html</link>
      <pubDate>Thu, 23 Feb 2017 17:36:54 -0500</pubDate>
      
      <guid>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-macos.html</guid>
      <description>&lt;p&gt;This is a tutorial to guide you through the &lt;a href=&#34;https://jmmv.dev/2017/02/introducing-pkg_comp-2.0.html&#34;&gt;shiny new pkg_comp 2.0&lt;/a&gt; on macOS &lt;a href=&#34;https://github.com/jmmv/pkg_comp/blob/master/INSTALL.md#using-the-macos-installer&#34;&gt;using the macOS-specific self-installer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Goals:&lt;/strong&gt; to use pkg_comp 2.0 to build a binary repository of all the packages you are interested in; to keep the repository fresh on a daily basis; and to use that repository with pkgin to maintain your macOS system up-to-date and secure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Keeping NetBSD up-to-date with pkg_comp 2.0</title>
      <link>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-netbsd.html</link>
      <pubDate>Sat, 18 Feb 2017 11:51:55 -0500</pubDate>
      
      <guid>https://jmmv.dev/2017/02/pkg_comp-2.0-tutorial-netbsd.html</guid>
      <description>&lt;p&gt;This is a tutorial to guide you through the &lt;a href=&#34;https://jmmv.dev/2017/02/introducing-pkg_comp-2.0.html&#34;&gt;shiny new pkg_comp 2.0&lt;/a&gt; on NetBSD.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Goals:&lt;/strong&gt; to use pkg_comp 2.0 to build a binary repository of all the packages you are interested in; to keep the repository fresh on a daily basis; and to use that repository with pkgin to maintain your NetBSD system up-to-date and secure.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Introducing pkg_comp 2.0 (and sandboxctl 1.0)</title>
      <link>https://jmmv.dev/2017/02/introducing-pkg_comp-2.0.html</link>
      <pubDate>Fri, 17 Feb 2017 16:37:06 -0500</pubDate>
      
      <guid>https://jmmv.dev/2017/02/introducing-pkg_comp-2.0.html</guid>
      <description>Announcing the launch of pkg_comp 2.0, how this differs from the 1.x series, why there was a rewrite, what sandboxctl 1.0 is, and more.</description>
    </item>
    
    <item>
      <title>Keeping pkgsrc packages up to date</title>
      <link>https://jmmv.dev/2007/05/keeping-pkgsrc-packages-up-to-date.html</link>
      <pubDate>Sun, 27 May 2007 14:26:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2007/05/keeping-pkgsrc-packages-up-to-date.html</guid>
      <description>drio asks in the suggestion box which is the best way to keep all the packages installed from pkgsrc up to date. I must confess that pkgsrc is quite weak in the updating area when compared to systems such as apt-get or yum. The problem comes from the fact that pkgsrc is a source-based packaging system, meaning that the end user builds packages by himself most of the times. Doing updates from such a system is hard because rebuilds take a long time and have high chances of breaking, leaving your system in an unusable status.</description>
    </item>
    
  </channel>
</rss>
