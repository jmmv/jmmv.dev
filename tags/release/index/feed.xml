<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Release on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/release/index.html</link><description>Recent content in Release on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Feb 2021 06:30:00 -0800</lastBuildDate><atom:link href="https://jmmv.dev/tags/release/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>EndBASIC 0.6 release announcement</title><link>https://jmmv.dev/2021/02/endbasic-0.6.html</link><pubDate>Fri, 19 Feb 2021 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2021/02/endbasic-0.6.html</guid><description>&lt;p>After a very active month of development since the &lt;a href="https://jmmv.dev/2021/01/endbasic-0.5.html">0.5 announcement&lt;/a>, it is time to welcome EndBASIC 0.6!&lt;/p>
&lt;p>This new 0.6 release is super-exciting for three reasons:&lt;/p>
&lt;ul>
&lt;li>preliminary GPIO support in the standard library specifically tailored to the Raspberry Pi;&lt;/li>
&lt;li>multidimensional array support in the language; and&lt;/li>
&lt;li>availability of binary releases for the most common platforms.&lt;/li>
&lt;/ul>
&lt;p>You can dive right in by:&lt;/p>
&lt;ul>
&lt;li>visiting &lt;a href="https://repl.endbasic.dev/">https://repl.endbasic.dev/&lt;/a> for an interactive session,&lt;/li>
&lt;li>reading more about the project at &lt;a href="https://www.endbasic.dev/">https://www.endbasic.dev/&lt;/a>, or&lt;/li>
&lt;li>downloading and installing any of the new &lt;a href="https://github.com/endbasic/endbasic/releases/tag/endbasic-0.6.0">prebuilt binaries&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>But stick around and continue reading if you are interested in many more details about these major changes 😉&lt;/p></description></item><item><title>EndBASIC 0.5 release announcement</title><link>https://jmmv.dev/2021/01/endbasic-0.5.html</link><pubDate>Sun, 24 Jan 2021 08:00:00 -0800</pubDate><guid>https://jmmv.dev/2021/01/endbasic-0.5.html</guid><description>A month has passed since the 0.4.0 announcement so it is about time to say hello to yet another EndBASIC release because 0.5.0 is here! So, what&amp;rsquo;s new? Not much&amp;hellip; unless you look under the covers, in which case a &lt;em>ton&lt;/em> has changed. About 30% of the codebase has been affected in one way or another to improve general quality, so read on to see how.</description></item><item><title>EndBASIC 0.4 release announcement</title><link>https://jmmv.dev/2020/12/endbasic-0.4.html</link><pubDate>Fri, 25 Dec 2020 19:30:00 -0800</pubDate><guid>https://jmmv.dev/2020/12/endbasic-0.4.html</guid><description>&lt;p>About a month ago and after a long hiatus, I &lt;a href="https://jmmv.dev/2020/11/endbasic-0.3.html">published EndBASIC 0.3&lt;/a> and the adrenaline rush that came with it got my wheels spinning again full-steam ahead. So here I am today, ready to announce the 0.4 release. But&amp;hellip; &amp;ldquo;what could have possibly changed in just a month of someone&amp;rsquo;s free time&amp;rdquo;, you wonder? Enough, actually!&lt;/p>
&lt;p>EndBASIC 0.4 is the release that fulfills my original goal of being able to run a &amp;ldquo;guess the number&amp;rdquo; game. The &amp;ldquo;only&amp;rdquo; change needed after 0.3 to make this possible was the addition of random numbers, but these in turn required adding function calls to back &lt;code>RND()&lt;/code> and also supporting floating point numbers because that&amp;rsquo;s what this function is supposed to return.&lt;/p></description></item><item><title>EndBASIC 0.3 is here</title><link>https://jmmv.dev/2020/11/endbasic-0.3.html</link><pubDate>Sun, 29 Nov 2020 12:30:00 -0800</pubDate><guid>https://jmmv.dev/2020/11/endbasic-0.3.html</guid><description>&lt;p>After a 6-month long hiatus caused by me &lt;a href="https://jmmv.dev/2020/10/bye-google-hi-microsoft.html">hunting and changing jobs and cities&lt;/a>, I am pleased to announce the release of EndBASIC 0.3! The Thanksgiving break has been as fruitful as I had hoped 😁&lt;/p>
&lt;p>There are two major changes in this release.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The first is the official debut of the &lt;strong>web-based interface&lt;/strong>. I &lt;a href="https://jmmv.dev/2020/05/bridging-the-web-gap-endbasic.html">introduced this months ago&lt;/a> and have had it running on a &amp;ldquo;push on green&amp;rdquo; model, which means that the web deployment of EndBASIC is always tracking Git &lt;code>HEAD&lt;/code>. This has made formal releases irrelevant which is, in part, why 0.3 is so far behind 0.2. But&amp;hellip; I do believe in formal releases so I&amp;rsquo;m hoping to put some effort and make the web UI track releases instead and then use the &amp;ldquo;push on green&amp;rdquo; flow only for a preview site.&lt;/p></description></item><item><title>EndBASIC 0.2.0 is here</title><link>https://jmmv.dev/2020/05/endbasic-0.2.0.html</link><pubDate>Thu, 07 May 2020 06:30:00 -0400</pubDate><guid>https://jmmv.dev/2020/05/endbasic-0.2.0.html</guid><description>&lt;p>A couple of weeks ago, I &lt;a href="https://jmmv.dev/2020/04/hello-endbasic.html">announced EndBASIC&lt;/a>: a simple BASIC language interpreter written in Rust with a goal to provide an environment for teaching my kids how to code. That first release provided what-I-think-is a robust interpreter, but that was about it: the language features were still minimal and the interactive features were non-existent.&lt;/p>
&lt;p>Well, &lt;a href="https://github.com/endbasic/endbasic/releases/tag/endbasic-0.2.0">EndBASIC 0.2.0&lt;/a> is here and things are changing! It&amp;rsquo;s still far from the vision I want to reach, but it&amp;rsquo;s slowly moving towards that direction. I&amp;rsquo;m a bit less satisfied about the robustness of these new features compared to those in the core language, but that&amp;rsquo;s OK: they will have to change significantly or maybe even be dropped entirely, so no harm done.&lt;/p></description></item><item><title>Hello, EndBASIC!</title><link>https://jmmv.dev/2020/04/hello-endbasic.html</link><pubDate>Wed, 22 Apr 2020 09:00:00 -0400</pubDate><guid>https://jmmv.dev/2020/04/hello-endbasic.html</guid><description>Introducing EndBASIC, a new interpreter for a BASIC-like language that is inspired by Amstrad&amp;rsquo;s Locomotive BASIC 1.1 and Microsoft&amp;rsquo;s QuickBASIC 4.5. Like the former, EndBASIC intends to provide an interactive environment that seamlessly merges coding with immediate visual feedback. Like the latter, EndBASIC offers higher-level programming constructs and strong typing. The main idea behind EndBASIC is to provide a playground for learning the foundations of programming in a simplified environment.</description></item><item><title>shtk 1.6 is now available</title><link>https://jmmv.dev/2014/11/shtk-16-is-now-available.html</link><pubDate>Mon, 17 Nov 2014 15:28:00 -0500</pubDate><guid>https://jmmv.dev/2014/11/shtk-16-is-now-available.html</guid><description>&lt;p>The &lt;a href="https://github.com/jmmv/shtk/">Shell Toolkit&lt;/a>, or shtk for short, is a little project I &lt;a href="https://jmmv.dev/2012/08/introducing-shtk.html">introduced back in August of 2008&lt;/a> to support other tools such as &lt;a href="http://blog.netbsd.org/tnf/entry/introducing_sysbuild_and_sysupgrade">sysbuild and sysupgrade&lt;/a>. Since that time, the project has seen little activity because it did not have much to offer and because shtk's public interface was not documented (hence making it impossible for developers to get started with shtk).&lt;/p> &lt;p>Well, both are changing &lt;i>today&lt;/i> with the brand-new release of &lt;a href="https://github.com/jmmv/shtk/releases/tag/shtk-1.6">shtk 1.6&lt;/a>:&lt;/p></description></item><item><title>lutok-0.3, kyua-testers-0.2 and kyua-cli-0.8</title><link>https://jmmv.dev/2013/12/lutok-03-kyua-testers-02-and-kyua-cli-08.html</link><pubDate>Sun, 08 Dec 2013 07:25:00 -0500</pubDate><guid>https://jmmv.dev/2013/12/lutok-03-kyua-testers-02-and-kyua-cli-08.html</guid><description>&lt;p>Yesterday was release day: I pushed out &lt;a href="https://code.google.com/p/lutok/downloads/detail?name=lutok-0.4.tar.g">Lutok 0.3&lt;/a>, &lt;a href="https://code.google.com/p/kyua/downloads/detail?name=kyua-testers-0.2.tar.gz">Kyua Testers 0.2&lt;/a> and &lt;a href="https://code.google.com/p/kyua/downloads/detail?name=kyua-cli-0.8.tar.gz">Kyua CLI 0.8&lt;/a>.&lt;/p> &lt;p>There are not a lot of changes in these new releases. The reason I cut them was to publish the new TAP-compliant tester and make it available for use in FreeBSD as soon as possible. I will be using this new feature as part of the &lt;a href="http://wiki.freebsd.org/TestSuite">FreeBSD Test Suite&lt;/a> in order to &lt;a href="http://lists.freebsd.org/pipermail/freebsd-testing/2013-November/000095.html">hook existing test programs without having to rewrite&lt;/a> them to use the ATF libraries (or at least not as a first step).&lt;/p></description></item><item><title>'Hello GitHub!' say shtk, sysbuild and sysupgrade</title><link>https://jmmv.dev/2013/07/hello-github-say-shtk-sysbuild-and.html</link><pubDate>Sun, 28 Jul 2013 20:00:00 -0400</pubDate><guid>https://jmmv.dev/2013/07/hello-github-say-shtk-sysbuild-and.html</guid><description>&lt;p>Over a year ago, I developed two command line utilities for NetBSD (sysbuild and sysupgrade) and a supporting library for the two tools (shtk). These were all introduced in their corresponding blog posts &amp;mdash;&lt;a href="https://jmmv.dev/2012/07/introducing-sysbuild-for-netbsd.html">Introducing sysbuild for NetBSD&lt;/a>, &lt;a href="https://jmmv.dev/2012/08/introducing-sysupgrade.html">Introducing sysupgrade for NetBSD&lt;/a> and &lt;a href="https://jmmv.dev/2012/08/introducing-shtk.html">Introducing shtk&lt;/a>&amp;mdash; and since then I have heard good comments about them.&lt;/p> &lt;p>About a couple of weeks ago, I started working on the much-needed rewrite of pkg_comp and a supporting standalone tool. I was using the same development methodology as with the other three projects: putting all the code in pkgsrc and implementing the build system from the package's &lt;tt>Makefile&lt;/tt>. Along the way, this became increasingly annoying to the point where I could not stand it any more. pkgsrc is a packaging system, not a development platform. Developing a project within it is difficult due to the indirections between the outer &lt;tt>Makefile&lt;/tt> and the work directory, and the expected workflow of working with packages. &lt;p>A separate issue is that having the source code in pkgsrc prevents the distribution of the packages as standalone tools for third-party operating systems. (Mind you: I've recently started building NetBSD from Linux and FreeBSD and missed sysbuild dearly.) It's hard and ugly (but not impossible) to generate tarballs for the sources in pkgsrc that can later be hosted elsewhere... and, even if doing that, using pkgsrc as the master tree for the code would seem backwards.&lt;/p></description></item><item><title>Lutok 0.3 released</title><link>https://jmmv.dev/2013/06/lutok-03-released.html</link><pubDate>Sat, 15 Jun 2013 16:24:00 -0400</pubDate><guid>https://jmmv.dev/2013/06/lutok-03-released.html</guid><description>&lt;p>&lt;a href="https://code.google.com/p/lutok/downloads/detail?name=lutok-0.3.tar.gz">Lutok 0.3&lt;/a> was released yesterday evening. The packages in pkgsrc-current, Fedora 19 and Fedora rawhide have all been updated accordingly.&lt;/p> &lt;p>The major highlight of this new release is support for Lua 5.2 while retaining backwards compatibility with Lua 5.1. The incompatible changes between 5.1 and 5.2 only affected a small subset of the functionality in Lutok, which made this dual support possible.&lt;/p> &lt;p>For those that don't know what this project is about: Lutok is a lightweight C++ API for Lua. It is lightweight because it's an almost 1:1 mapping of the C API into C++. However, the major design criterion behind Lutok is to provide an interface that is fully C++ native and that is safe to use in the face of exceptions. For this reason, Lutok is not as performant as the native C library, which is OK for many use cases out there.&lt;/p></description></item><item><title>Kyua 0.3 released!</title><link>https://jmmv.dev/2012/02/kyua-03-released.html</link><pubDate>Fri, 24 Feb 2012 16:19:00 -0500</pubDate><guid>https://jmmv.dev/2012/02/kyua-03-released.html</guid><description>Dear readers,&lt;br />&lt;br />I am pleased to announce that Kyua 0.3 is available!&lt;br />&lt;br />The major feature in this release is the introduction of the "test results store"; i.e. a SQLite3-based database that records all test execution activity so that reports can be gathered in a central machine and reports generated out of it. This is still very experimental and the generated reports are quite rudimentary, but is a first step towards this direction.&lt;br />&lt;br />The &lt;a href="http://code.google.com/p/kyua/downloads/detail?name=kyua-cli-0.3.tar.gz">Kyua 0.3 release page&lt;/a> provides links to the download as well as the list of major changes in this new release.&lt;br />&lt;br />It has been a really long time since the 0.2 release. I wanted to postpone 0.3 until HTML reports were ready, but I have not had the time to implement this for a while already. Instead of postponing the release even further, I have decided to create it right now and then take the time to create nice reports separately. Additionally, I am planning on &lt;a href="https://jmmv.dev/2012/02/switching-projects-to-git.html">doing some repository changes&lt;/a> and wanted to do them without an imminent release along the way.&lt;br />&lt;br />The package in pkgsrc has been updated and now I'm working on bringing binary packages to Fedora.&lt;br />&lt;br />Enjoy!</description></item><item><title>NetBSD 6.0 BETA tagged</title><link>https://jmmv.dev/2012/02/netbsd-60-beta-tagged.html</link><pubDate>Wed, 15 Feb 2012 21:52:00 -0500</pubDate><guid>https://jmmv.dev/2012/02/netbsd-60-beta-tagged.html</guid><description>Dear users of NetBSD,&lt;br />&lt;br />I am pleased to announce that we (well, the release engineering team!) have just &lt;a href="http://mail-index.netbsd.org/source-changes/2012/02/15/msg031809.html">tagged the &lt;tt>netbsd-6&lt;/tt> branch in the CVS repository&lt;/a> and thus opened the gate for testing of NetBSD 6.0_BETA. New binary snapshots should start appearing in the &lt;a href="http://nyftp.netbsd.org/pub/NetBSD-daily/">daily FTP archive&lt;/a> soon. You can, of course, perform a &lt;tt>cvs update -r netbsd-6&lt;/tt> on your existing source tree and roll your own binaries (as I'm already doing on my home server).&lt;br />&lt;br />Please help us make NetBSD 6.0 the best release ever! As you may already know, it will provide tons of new features compared to the ancient 5.x release series that will make your user experience much better. The branch just needs a bit of love to shake out any critical bugs that may be left and to ensure that all those annoying cosmetic issues are corrected. So, if you find any of those, do not hesitate to &lt;a href="http://www.netbsd.org/cgi-bin/sendpr.cgi?gndb=netbsd">file a problem report (PR)&lt;/a>.&lt;br />&lt;br />Thank you!</description></item><item><title>Lutok 0.1 available</title><link>https://jmmv.dev/2012/01/lutok-01-available.html</link><pubDate>Sun, 29 Jan 2012 16:12:00 -0500</pubDate><guid>https://jmmv.dev/2012/01/lutok-01-available.html</guid><description>A few months ago, I &lt;a href="https://jmmv.dev/2011/09/introducing-lutok-lightweight-c-api-for.html">introduced the Lutok project&lt;/a>,&amp;nbsp;a simple C++ API for Lua. To recap: the major goal of this API, which does not mimic the Lua C API bit by bit, is to enforce correct coding practices on the client side. This is done by (ab)using the RAII programming pattern to automatically free resources when not needed and to ensure that the Lua stack is correctly managed. The library also adheres to common C++ programming idioms and exposes exceptions for error management and uses the pimpl idiom to completely hide the Lua C API from clients of Lutok (unless you use the &lt;tt>c_gate&lt;/tt> backdoor!).&lt;br />&lt;br />Today, I am pleased to announce that the first formal release of Lutok, obviously named 0.1, is available for download! You can obtain this release by visiting the &lt;a href="http://code.google.com/p/lutok/downloads/detail?name=lutok-0.1.tar.gz">lutok-0.1.tar.gz download page&lt;/a>.&lt;br />&lt;br />Also, in preparation for this release, I have spent the weekend writing &lt;a href="http://code.google.com/p/lutok/wiki/Examples">some little example programs&lt;/a> to demonstrate the usage of Lutok, and also some&amp;nbsp;&lt;a href="http://code.google.com/p/lutok/wiki/Installation">installation instructions&lt;/a>.&lt;br />&lt;br />Hope you find this release useful and please do send me any comments you may have!&lt;br />&lt;br />Hint: Yes, releasing Lutok 0.1 was a prerequisite for Kyua 0.3. So stay tuned ;-)</description></item><item><title>Kyua 0.2 released</title><link>https://jmmv.dev/2011/08/kyua-02-released.html</link><pubDate>Wed, 24 Aug 2011 17:09:00 -0400</pubDate><guid>https://jmmv.dev/2011/08/kyua-02-released.html</guid><description>Dear readers,&lt;br />&lt;br />I am very proud to announce the second formal release of &lt;a href="http://code.google.com/p/kyua/">Kyua&lt;/a>, 0.2. &amp;nbsp;This release comes with lots of internal changes and a few user-visible changes. &amp;nbsp;Instead of listing all the changes and news here, I'll just recommend you to visit the &lt;a href="http://code.google.com/p/kyua/downloads/detail?name=kyua-cli-0.2.tar.gz">0.2 release page&lt;/a> and read all the notes.&lt;br />&lt;br />This release has been tested under NetBSD-current, Mac OS X Snow Leopard, Debian sid and Ubuntu 10.04.1 LTS.&lt;br />&lt;br />Please report any problems that you encounter.&lt;br />&lt;br />Have fun!</description></item><item><title>Kyua 0.1 released!</title><link>https://jmmv.dev/2011/06/kyua-01-released.html</link><pubDate>Thu, 23 Jun 2011 12:44:00 -0400</pubDate><guid>https://jmmv.dev/2011/06/kyua-01-released.html</guid><description>Dear readers,&lt;br />&lt;br />I'm very proud to announce that the very first release of &lt;a href="http://code.google.com/p/kyua/">Kyua&lt;/a>, obviously numbered 0.1, has been published! The release page for &lt;a href="http://code.google.com/p/kyua/downloads/detail?name=kyua-cli-0.1.tar.gz">kyua-cli-0.1&lt;/a> contains more details about what this release offers, and don't hesitate to join the kyua-discuss mailing list and ask if you have questions.&lt;br />&lt;br />Kyua was started sometime in past October and it has taken over six months to get the first public version. (It is true that my free time has heavily fluctuated during this period though, so it does not mean that six months of intensive coding have gone into the release ;-) Kyua 0.1 hovers at almost &lt;a href="https://www.ohloh.net/p/kyua">40K lines of code according to Ohloh&lt;/a>&amp;nbsp;and comes with 800 test cases, yet it&amp;nbsp;only implements a replacement for the atf-run component of &lt;a href="http://www.netbsd.org/~jmmv/atf/">ATF&lt;/a>.&lt;br />&lt;br />I have a package ready for pkgsrc, but unfortunately can't submit it because pkgsrc is in a freeze in preparation for the next stable branch. No matter what, expect detailed instructions on how to install Kyua and how to run the NetBSD-current test suite with it very soon.&lt;br />&lt;br />Enjoy, and keep the bug reports coming!</description></item></channel></rss>