<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>automation on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/automation/index/</link><description>Recent content in automation on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Jan 2021 09:20:00 -0800</lastBuildDate><atom:link href="https://jmmv.dev/tags/automation/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Prevent accidental commits with DO NOT SUBMIT</title><link>https://jmmv.dev/2021/01/do-not-submit.html</link><pubDate>Mon, 11 Jan 2021 09:20:00 -0800</pubDate><guid>https://jmmv.dev/2021/01/do-not-submit.html</guid><description>&lt;p>One of the teeny tiny features I miss from the Google development stack is something called &lt;code>DO NOT SUBMIT&lt;/code>. Here is what it is and how to replicate it in your projects.&lt;/p></description></item><item><title>Enforcing code health via GitHub Actions</title><link>https://jmmv.dev/2021/01/github-actions-code-health.html</link><pubDate>Fri, 08 Jan 2021 09:50:00 -0800</pubDate><guid>https://jmmv.dev/2021/01/github-actions-code-health.html</guid><description>It is no secret that, in software development, the edit+build+test cycle must be as short as possible. The delay between saving a file and seeing the results has to be minimal and in the order of a few seconds, or else developers lose focus and productivity suffers.
It&amp;rsquo;s equally important to ensure that the code is held to certain quality standards. Compiler warnings, for example, are part of any compilation and catch a set of common problems.</description></item><item><title>Offloading maintenance tasks to Travis CI</title><link>https://jmmv.dev/2015/05/offloading-maintenance-tasks-to-travis.html</link><pubDate>Thu, 21 May 2015 17:00:00 -0400</pubDate><guid>https://jmmv.dev/2015/05/offloading-maintenance-tasks-to-travis.html</guid><description>From day one, the Kyua source tree has had docstring annotations for all of its symbols. The goal of such docstrings is to document the code for the developers of Kyua: these docstrings were never intended to turn into pre-generated HTML documentation because Kyua does not offer an API once installed.
As you might have noticed, Doxygen is an optional component of the build and it used to run on each make invocation.</description></item></channel></rss>