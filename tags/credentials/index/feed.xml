<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>credentials on jmmv.dev</title>
    <link>https://jmmv.dev/tags/credentials/index/</link>
    <description>Recent content in credentials on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Aug 2006 08:50:00 -0400</lastBuildDate><atom:link href="https://jmmv.dev/tags/credentials/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>More on LOCAL_CREDS</title>
      <link>https://jmmv.dev/2006/08/more-on-localcreds.html</link>
      <pubDate>Mon, 28 Aug 2006 08:50:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2006/08/more-on-localcreds.html</guid>
      <description>One of the problems of learning new stuff based on trial-and-error iterations is that it is very easy to miss important details... but that&#39;s the price to pay when there is no decent documentation available for a given feature. We saw yesterday multiple details about LOCAL_CREDS socket credentials and, as you may deduce, I missed some.
First of all I assumed that setting the LOCAL_CREDS option only affected the next received message (I didn&#39;t mention this explicitly in the post though).</description>
    </item>
    
    <item>
      <title>LOCAL_CREDS socket credentials</title>
      <link>https://jmmv.dev/2006/08/localcreds-socket-credentials.html</link>
      <pubDate>Sun, 27 Aug 2006 05:55:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2006/08/localcreds-socket-credentials.html</guid>
      <description>Socket credentials is a feature that allows a user process to receive the credentials (UID, GID, etc.) of the process at the other end of a communication socket in a safe way. The operating system is in charge of managing this information, sent separately from the data flow, so that the user processes cannot fake it. There are many different implementations of this concept out there as you can imagine.</description>
    </item>
    
  </channel>
</rss>
