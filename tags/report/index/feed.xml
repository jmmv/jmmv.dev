<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Report on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/report/index.html</link><description>Recent content in Report on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&ndash;2025 Julio Merino</copyright><lastBuildDate>Mon, 13 Feb 2012 16:43:00 -0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/report/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/02/kyua-weekly-status-report_13_2.html</link><pubDate>Mon, 13 Feb 2012 16:43:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/02/kyua-weekly-status-report_13_2.html</guid><description>A couple of things happened this week:&lt;br />&lt;br />&lt;ul>&lt;li>Spent quite a few time researching the idea of moving away from Monotone and Subversion to Git. I haven't made a decision yet, but I'm pretty convinced this is the right way to go. It will simplify development significantly, it will allow me to code offline (have a bunch of really long flights coming), and it will lower the entry barrier to Kyua by making all components use the same, mainstream VCS.&lt;/li>&lt;li>Implemented filtering by result type of the test case results in the textual reports.&lt;/li>&lt;/ul>&lt;div>I think it is time to prepare a 0.3 release. I wanted to wait until we had HTML reports in place, but this will require significant effort and I have been postponing the implementation for too long already. As it is now, the current codebase provides major changes since the ancient 0.2 release and it is worth a release. Then, we can create packages for NetBSD and Fedora instead of continuing to add new features, which should be a good step in giving further visibility to the project. Finally, we can reserve HTML reporting as the major feature for 0.4 :-)&lt;/div></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/02/kyua-weekly-status-report_207.html</link><pubDate>Tue, 07 Feb 2012 22:31:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/02/kyua-weekly-status-report_207.html</guid><description>&lt;br />&lt;ul>&lt;li>Created an RPM package for Lutok for inclusion in Fedora.&lt;/li>&lt;li>Created a preliminary RPM spec for ATF for Fedora. Now in discussions with the FPC to figure out how to install the tests on a Fedora system, as &lt;tt>/usr/tests&lt;/tt> may not be appropriate.&lt;/li>&lt;li>No activity on Kyua itself though, unfortunately.&lt;/li>&lt;/ul></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/02/kyua-weekly-status-report_21.html</link><pubDate>Wed, 01 Feb 2012 16:08:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/02/kyua-weekly-status-report_21.html</guid><description>This comes two days late... but anyway, I felt like posting it now instead of waiting until next Sunday/Monday.&lt;br />&lt;br />The activity past week focused mostly on implementing support for the &lt;tt>require.memory&lt;/tt> test-case metadata property recently introduced into ATF. This was non-trivial due to the need to write some tricky Autoconf code to make this "slightly portable".&amp;nbsp;Seriously: It's scary to see how hard it is to perform, in a portable manner, an operation as simple as "query the amount of physical memory"... but oh well, such are the native Unix APIs...&lt;br />&lt;br />I later spent the weekend on Lutok, preparing and publishing the project's first release and writing my first RPM library spec for it. This was a prerequisite for the upcoming 0.3 release of Kyua and thus deserved special attention!</description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/01/kyua-weekly-status-report_23_2.html</link><pubDate>Mon, 23 Jan 2012 10:28:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/01/kyua-weekly-status-report_23_2.html</guid><description>&lt;br />&lt;ul>&lt;li>&lt;a href="http://www.netbsd.org/~jmmv/atf/news.html#20120116-atf-0-15-released">Released ATF 0.15&lt;/a> and imported it into NetBSD.&lt;/li>&lt;li>Added support for integer/float printf-like modifiers to the &lt;tt>utils::format&lt;/tt> module. These will be required to beautify size and time quantities in the reports and error messages.&lt;/li>&lt;ul>&lt;li>I spent way more time than I wanted on this. At first, I attempted to use &lt;tt>std::snprintf&lt;/tt> to parse and process the format modifiers for integers and floats so that I could avoid implementing a custom parser for them. While this sounds like a cool idea (yay, code reuse!), it resulted in a ugly, nasty and horrible mess. In the end, I just ended up implementing custom parsing of the formatters, which was way easier and "good enough" for Kyua's needs.&lt;/li>&lt;/ul>&lt;li>Started work on backporting ATF's new &lt;tt>require.memory&lt;/tt> property into Kyua. This needs having a way to parse and format byte quantities in user-friendly forms (e.g. 1k, 2m, etc.)... hence the previous work on &lt;tt>utils::format&lt;/tt>!&lt;/li>&lt;li>Set up a &lt;a href="https://plus.google.com/b/109170076014992185386/">Google+ Page for Kyua&lt;/a>. I have no idea what to use it for yet. Maybe the status reports should go in there. Ideas?&lt;/li>&lt;/ul></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/01/kyua-weekly-status-report_15_2.html</link><pubDate>Sun, 15 Jan 2012 22:21:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/01/kyua-weekly-status-report_15_2.html</guid><description>Finally some progress!&lt;br />&lt;br />&lt;ul>&lt;li>Backported the &lt;tt>require.memory&lt;/tt> changes in NetBSD to the ATF upstream code, and extended them to support OS X as well.&lt;/li>&lt;li>Backported local pkgsrc patches to ATF into the upstream code.&lt;/li>&lt;li>Started to prepare ATF 0.15 by doing test runs of NetBSD/i386 and NetBSD/amd64 and by building the code in various Linux distributions. Several build bugs fixed along the way.&lt;/li>&lt;li>Spent a long while trying to figure out how the Fedora package maintainer procedure has changed since 3 years ago to create packages for ATF, Lutok and Kyua. Not very successful yet unfortunately.&lt;/li>&lt;/ul>&lt;div>Nothing on the Kyua front, but getting a new release of ATF out of the door has higher priority now!&lt;/div></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/01/kyua-weekly-status-report_10_3.html</link><pubDate>Tue, 10 Jan 2012 22:44:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/01/kyua-weekly-status-report_10_3.html</guid><description>It's that time of the week again (although delayed by over a day). Unfortunately, no progress either during past week. Being on semi-vacations doesn't leave much "free time"... However, I traveled back home yesterday and getting back to my daily routine should give some spare time!</description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2012/01/kyua-weekly-status-report_123.html</link><pubDate>Tue, 03 Jan 2012 05:25:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2012/01/kyua-weekly-status-report_123.html</guid><description>Happy new year!&lt;br />&lt;br />No activity past week as I was completely away from the computer.</description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/12/kyua-weekly-status-report_26_3.html</link><pubDate>Mon, 26 Dec 2011 06:38:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_26_3.html</guid><description>The post title should mention ATF instead of Kyua... but I'm keeping the usual one for consistency:&lt;br />&lt;br />&lt;ul>&lt;li>Integrated timestamps into the XML and HTML reports generated by &lt;tt>atf-report&lt;/tt>. These should soon show up in the continuous tests of NetBSD.&lt;/li>&lt;li>Work on integrating the use of POSIX timers into &lt;tt>atf-run&lt;/tt> after Christos Zoulas performed these changes in the NetBSD tree. The result is quite awful because I need to keep compatibility with systems that do not provide the "new" interface...&lt;/li>&lt;/ul></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/12/kyua-weekly-status-report_19_2.html</link><pubDate>Mon, 19 Dec 2011 10:35:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_19_2.html</guid><description>Unfortunately, not much activity this week due to travel reasons. Anyway, some work went in:&lt;br />&lt;br />&lt;ul>&lt;li>Preliminary code to generate HTML reports from &lt;tt>kyua report&lt;/tt>. This is easy peasy but boring. The current code was written as a proof of concept and is awful, hence why it was not committed. I'm now working in cleaning it up.&lt;/li>&lt;li>Backported test program and test case timestamping into ATF based on a patch from Paul Goyette. This is a very useful feature to have, and it will have to be added to Kyua later. (It has always been planned to be added, but have not had the time yet.)&lt;/li>&lt;/ul></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/12/kyua-weekly-status-report_11.html</link><pubDate>Sun, 11 Dec 2011 22:16:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_11.html</guid><description>Some significant improvements this week:&lt;br />&lt;ul>&lt;li>Finally submitted the code to store and load full test case definitions. This is quite tricky (and currently very, very ugly) but it works and it will allow the reports to include all kinds of information from the test cases.&lt;/li>&lt;li>Removed the &lt;tt>Atffile&lt;/tt>s from the tree; yay! For a long time, I had been using &lt;tt>atf-run&lt;/tt> to run broken tests because &lt;tt>atf-run&lt;/tt> allowed me to watch the output of the test case being debugged. However, this has been unnecessary since the &lt;a href="https://jmmv.dev/2011/08/kyua-weekly-status-report_22_2.html">introduction of the &lt;tt>debug&lt;/tt> command in late August&lt;/a>. I now feel confident that these files can go. (And &lt;tt>debug&lt;/tt> is much more powerful than &lt;tt>atf-run&lt;/tt> because you can target a single test case instead of a whole test program.)&lt;/li>&lt;li>Some crazy work attempting to hide the name of SQLite types from the &lt;tt>sqlite::statement&lt;/tt> interface. I've been only able to do so somewhat decently for &lt;tt>bind&lt;/tt>, but all my attempts at doing the same with &lt;tt>column&lt;/tt> result in horrible code so far. So no, such changes have not been submitted.&lt;/li>&lt;li>As of a few minutes ago, &lt;tt>kyua test&lt;/tt> now records the output of the test cases (stdout and stderr) into the database. These will be invaluable for debugging of test cases, particularly when the reports are posted online.&lt;/li>&lt;li>Some preliminary work at implementing HTML reports. This, however, has not received much progress due to the previous item requiring completion.&lt;/li>&lt;/ul>&lt;div>I'm quite excited at this point. HTML reports are a few weeks away &lt;i>at most&lt;/i>. Once that happens, it will be time to start considering replacing the &lt;tt>atf-run&lt;/tt> / &lt;tt>atf-report&lt;/tt> duo for good, particularly within NetBSD. This will certainly not be easy... but all the work that has gone into Kyua so far has this sole goal!&lt;/div></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/12/kyua-weekly-status-report_05.html</link><pubDate>Mon, 05 Dec 2011 19:20:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/12/kyua-weekly-status-report_05.html</guid><description>&lt;br />&lt;ul>&lt;li>Some more work towards allowing storing and loading of full test case definitions (which in turn will allow us to provide detailed HTML reports). I have local changes that do this, but they are gated by the lack of some additional tests and probably some optimizations, because they slow down &lt;tt>kyua report&lt;/tt> significantly. Regarding commits, I have only submitted some related cleanup-changes.&lt;/li>&lt;li>I got distracted by invalid Doxygen comments and traced down why they were not being correctly validated (which is the whole point of running Doxygen during the build). It turns out I had to enable some extra &lt;tt>EXTRACT_*&lt;/tt> settings in the &lt;tt>Doxyfile&lt;/tt>. After doing so, I realized there are many, many documentation problems in the code... and I have been fixing them since. It's a tough operation, but I'm more than half-way through already. To give you an idea, the current diffstat shows about 650 new comment lines (!).&lt;/li>&lt;/ul></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/11/kyua-weekly-status-report_28_2.html</link><pubDate>Mon, 28 Nov 2011 10:06:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/11/kyua-weekly-status-report_28_2.html</guid><description>My goal for this past week was to change the database layer to be able to store full definitions of the test cases, and to later be able to load these while scanning an action. This is to allow the &lt;tt>report&lt;/tt> command to provide all kinds of information about the executed tests, not just their names and their results. However, adding this functionality has proven to be more complex than I wished because the current types to represent test programs and test cases are kinda broken: that the abstractions chosen a while ago do not seem to be appropriate, and this is complicating further changes.&lt;br />&lt;br />Due to this, I ended up doing some cleanups. First, I reimplemented the way in which test programs that fail to list their test cases are represented. And second, I got rid of the useless &lt;tt>test_case_id&lt;/tt> class, which exposed even further problems in the data types that represent test cases.&lt;br />&lt;br />It's now time to sit and think if the current representations of test programs and test cases make sense and, if not, how to better redo them. Not going to be easy, but I hope to have some time for this cleanup during this upcoming week.</description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/11/kyua-weekly-status-report_20.html</link><pubDate>Sun, 20 Nov 2011 22:19:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/11/kyua-weekly-status-report_20.html</guid><description>I only have one thing to report this week, but oh boy it's big: &lt;b>the &lt;tt>report&lt;/tt> command finally reports the results of a run of a test suite!&lt;/b> Yes, you heard well: Kyua is, finally, able to keep a record of all the previous executions of test suites and allows you to extract reports of any of them a posteriori.&lt;br />&lt;div>&lt;br />&lt;/div>&lt;div>At the moment, the report is just some disorganized plain-text. &amp;nbsp;For example:&lt;/div>&lt;div>&lt;br />&lt;/div>&lt;div>&lt;pre>$ kyua test&lt;/pre>&lt;pre>[... wait for the tests to run ...]&lt;/pre>&lt;pre>Committed action 82&lt;/pre>&lt;pre>$&amp;nbsp;kyua report&lt;br />===&amp;gt; Skipped tests&lt;br />[... too long to show ...]&lt;br />===&amp;gt; Expected failures&lt;br />integration/cmd_report_test:output__console__change_file &amp;nbsp;-&amp;gt;&lt;br />&amp;nbsp; &amp;nbsp; expected_failure: --output not implemented yet:&lt;br />&amp;nbsp; &amp;nbsp; atf-check failed; see the output of the test for details&lt;br />===&amp;gt; Failed tests&lt;br />store/transaction_test:put_test_case__ok &amp;nbsp;-&amp;gt;&lt;br />&amp;nbsp; &amp;nbsp; failed: Line 663: stmt.step() not met&lt;br />===&amp;gt; Summary&lt;br />Action: 82&lt;br />Test cases: 934 total, 15 skipped, 1 expected failures,&lt;/pre>&lt;pre>0 broken, 1 failed&lt;/pre>&lt;/div>&lt;br />I'm now working on changing the database schema to be able to really store all the data about test cases, because at the moment I'm only storing their names. Once all the original data is stored, the &lt;tt>report&lt;/tt> command will have lots more information to work with, and then will be the time to start improving the format of the reports. As mentioned earlier, having interactive HTML dashboards is high in the priority list, and a very important goal of Kyua altogether.&lt;br />&lt;br />Stay tuned :-)</description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/11/kyua-weekly-status-report_14.html</link><pubDate>Mon, 14 Nov 2011 11:21:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/11/kyua-weekly-status-report_14.html</guid><description>Kyua has finally gained a &lt;tt>report&lt;/tt> subcommand, aimed at processing the output data of an action (stored in the database) and generating a user-friendly report in a variety of formats. This is still extremely incomplete, so don't get your hopes too high yet ;-) The current version of the &lt;tt>report&lt;/tt> command takes an action and all it does is dump its runtime context (run directory, environment variables, etc.). Consider it just a proof of concept.&lt;div>&lt;br />&lt;/div>&lt;div>I have now started work on loading the data of test case results for a particular action, and once that is done, the &lt;tt>report&lt;/tt> command will start yielding really useful data: i.e. it will actually tell you what happened during a particular execution of a test suite. The way I'm approaching the work these days is by building the skeleton code to implement the basic functionality first (which actually involves writing a lot of nasty code), with the goal of adding missing pieces later bit by bit.&lt;/div>&lt;div>&lt;br />&lt;/div>&lt;div>For example, at this moment I'm only targeting text-based outputs with a limited set of data. However, when that is done, adding extra data or different formats will be relatively easy. Generating HTML dashboards (without going through XML, as was the case of &lt;tt>atf-report&lt;/tt>!) is definitely highly prioritized.&lt;/div>&lt;div>&lt;br />&lt;/div>&lt;div>By the way: I just realized it has already been one year since Kyua saw life. Wow, time flies. And only now we are approaching a point where killing the &lt;tt>atf-run&lt;/tt> / &lt;tt>atf-report&lt;/tt> pair is doable. I'm excited.&lt;/div></description></item><item><title>Kyua: Weekly status report</title><link>https://jmmv.dev/2011/11/kyua-weekly-status-report_07.html</link><pubDate>Mon, 07 Nov 2011 10:04:00 -0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2011/11/kyua-weekly-status-report_07.html</guid><description>Many things have happened this week, but they can all be summarized in one single sentence: &lt;tt>&lt;b>kyua test&lt;/b>&lt;/tt>&lt;b> now records the results of the execution of a test suite into the SQLite database&lt;/b>.&lt;br />&lt;br />"Why is this important?", you ask. Well, that's a good question. Recording test results opens the gate to many long-awaited features that should be coming soon, such as the ability to inspect the history of a particular test, to query all available data of a test result and/or to generate a dashboard of test results. It's interesting to realize that &lt;i>most of these features are just one SQL query away&lt;/i>. If you install Kyua, you can already run a few tests and then use &lt;tt>kyua db-exec&lt;/tt> to issue arbitrary SQL queries against the database; the schema (see &lt;tt>store/schema.sql&lt;/tt>) might look a bit convoluted, but a bunch of &lt;tt>NATURAL JOIN&lt;/tt>s will yield the desired output.&lt;br />&lt;br />The feature requests that have the highest priority at this point are the ability to generate a report of the last tests run both as a text file and as an HTML dashboard, because having these features means we can finally kill the &lt;tt>atf-run&lt;/tt> and &lt;tt>atf-report&lt;/tt> pair. At this point I'm, once again, "stuck" while figuring out how to best organize the code to make all these things possible while still keeping a nice separation across the existing layers (&lt;tt>cli&lt;/tt>, &lt;tt>engine&lt;/tt> and &lt;tt>store&lt;/tt>)... all without introducing much unnecessary complexity. But exciting times lie ahead!</description></item></channel></rss>