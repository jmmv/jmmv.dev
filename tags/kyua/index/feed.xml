<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kyua on Julio Merino (jmmv.dev)</title>
    <link>https://jmmv.dev/tags/kyua/index/</link>
    <description>Recent content in kyua on Julio Merino (jmmv.dev)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 May 2015 17:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://jmmv.dev/tags/kyua/index/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Offloading maintenance tasks to Travis CI</title>
      <link>https://jmmv.dev/2015/05/offloading-maintenance-tasks-to-travis.html</link>
      <pubDate>Thu, 21 May 2015 17:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2015/05/offloading-maintenance-tasks-to-travis.html</guid>
      <description>From day one, the Kyua source tree has had docstring annotations for all of its symbols. The goal of such docstrings is to document the code for the developers of Kyua: these docstrings were never intended to turn into pre-generated HTML documentation because Kyua does not offer an API once installed.
As you might have noticed, Doxygen is an optional component of the build and it used to run on each make invocation.</description>
    </item>
    
    <item>
      <title>Kyua turns parallel</title>
      <link>https://jmmv.dev/2015/02/kyua-turns-parallel.html</link>
      <pubDate>Sat, 28 Feb 2015 15:06:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2015/02/kyua-turns-parallel.html</guid>
      <description>After three months of intensive work on Kyua&#39;s executor Git branch, I am happy to announce that the new execution engine, whose crown feature is the ability to run test cases in parallel, has just landed in master and passes all self-tests!
You can head over to the commit message for more details on the merge, read the NEWS entries, and skim throught the history of the executor branch to understand how this feature has been built.</description>
    </item>
    
    <item>
      <title>Refocusing Kyua maybe?</title>
      <link>https://jmmv.dev/2014/05/refocusing-kyua-maybe.html</link>
      <pubDate>Fri, 23 May 2014 10:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2014/05/refocusing-kyua-maybe.html</guid>
      <description>The FreeBSD devsummit that just passed by gave me enough insight into Jenkins to question the long-term plans for Kyua. Uh, WHAT?! Let me explain.
In the beginning...
One of the original but unstated goals of Kyua was to fix the &#34;mess&#34; that is the NetBSD releng test run logs site: if you pay close attention, you will notice that various individuals have reinvented the wheel over and over again in an attempt to automate release builds and test suite runs.</description>
    </item>
    
    <item>
      <title>How to merge multiple Git repositories into one</title>
      <link>https://jmmv.dev/2014/02/how-to-merge-multiple-git-repositories.html</link>
      <pubDate>Sat, 15 Feb 2014 16:08:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/02/how-to-merge-multiple-git-repositories.html</guid>
      <description>Are you looking for a method to merge multiple Git repositories into a single one? If so, you have reached the right tutorial!
Please bear with me for a second while I provide you with background information and introduce the subject of our experiments. We&amp;rsquo;ll get to the actual procedure soon and you will be able to apply it to any repository of your choice.
 In the Kyua project, and with the introduction of the kyua-atf-compat component in the Summer of 2012, I decided to create independent Git repositories for each component.</description>
    </item>
    
    <item>
      <title>FreeBSD Test Suite tutorial at AsiaBSDCon 2014</title>
      <link>https://jmmv.dev/2014/01/freebsd-test-suite-tutorial-at.html</link>
      <pubDate>Wed, 08 Jan 2014 07:00:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/01/freebsd-test-suite-tutorial-at.html</guid>
      <description>I am pleased to announce that the tutorial on the FreeBSD Test Suite that I proposed for AsiaBSDCon 2014 has been accepted!
The conference website will soon include more details, but allow me to spoil your wait:
 Goals: Learn how to use the test suite, how it is internally organized and how new tests can be written. Stretch goal: Get attendees to contribute one or more tests to the project.</description>
    </item>
    
    <item>
      <title>FreeBSD Test Suite goals and planning</title>
      <link>https://jmmv.dev/2014/01/freebsd-test-suite-goals-and-planning.html</link>
      <pubDate>Sun, 05 Jan 2014 11:30:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2014/01/freebsd-test-suite-goals-and-planning.html</guid>
      <description>I was really impressed and delighted to see how popular my previous (and first) post on FreeBSD testing, titled Introducing the FreeBSD Test Suite, was. Looks like this project may be of great interest to developers and users out there (not unsurprisingly) so I&#39;ll try to keep you all up-to-date with any key developments.
A first question that arises from the announcement is: where are the test suite and infrastructure headed?</description>
    </item>
    
    <item>
      <title>Introducing the FreeBSD Test Suite</title>
      <link>https://jmmv.dev/2013/12/introducing-freebsd-test-suite.html</link>
      <pubDate>Tue, 31 Dec 2013 08:00:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2013/12/introducing-freebsd-test-suite.html</guid>
      <description>I joined the FreeBSD committer ranks a couple of months ago with the intention to equip FreeBSD with an out-of-the-box test suite and with a testing infrastructure. The time until now has been quite fruitful and I have been rushing to get something ready for you before the year end.
With that, I am very pleased to announce that the first mockup of the FreeBSD testing cluster is up and running!</description>
    </item>
    
    <item>
      <title>lutok-0.3, kyua-testers-0.2 and kyua-cli-0.8</title>
      <link>https://jmmv.dev/2013/12/lutok-03-kyua-testers-02-and-kyua-cli-08.html</link>
      <pubDate>Sun, 08 Dec 2013 07:25:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2013/12/lutok-03-kyua-testers-02-and-kyua-cli-08.html</guid>
      <description>Yesterday was release day: I pushed out Lutok 0.3, Kyua Testers 0.2 and Kyua CLI 0.8.
There are not a lot of changes in these new releases. The reason I cut them was to publish the new TAP-compliant tester and make it available for use in FreeBSD as soon as possible. I will be using this new feature as part of the FreeBSD Test Suite in order to hook existing test programs without having to rewrite them to use the ATF libraries (or at least not as a first step).</description>
    </item>
    
    <item>
      <title>Three productive days on the Kyua front</title>
      <link>https://jmmv.dev/2013/11/three-productive-days-on-kyua-front.html</link>
      <pubDate>Thu, 28 Nov 2013 09:00:00 -0500</pubDate>
      
      <guid>https://jmmv.dev/2013/11/three-productive-days-on-kyua-front.html</guid>
      <description>This being Thanksgiving week in the U.S. and Google giving us Thursday and Friday off, I decided to take Monday to Wednesday off as well to spend some time hacking on Kyua &amp;mdash; yes, finally, after months of being inactive. And what a three productive days!
Here comes a little briefing on the three fronts in which I made progress. (This puts on hold the header files series until next Monday.</description>
    </item>
    
    <item>
      <title>EuroBSDCon 2013 takeaways</title>
      <link>https://jmmv.dev/2013/09/eurobsdcon-2013-takeaways.html</link>
      <pubDate>Mon, 30 Sep 2013 08:03:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/09/eurobsdcon-2013-takeaways.html</guid>
      <description>EuroBSDCon 2013 is done. If you have been following my daily posts over the last 4 days (day 1, day 2, day 3 and day 4) as well as #EuroBSDCon updates in Twitter, you may already have a pretty good idea of what went on here. However, with the conference over, it is now a good time to recap the whole event and present the takeaways of these four days which, overall, were quite interesting and productive.</description>
    </item>
    
    <item>
      <title>Live from EuroBSDCon 2013, day 4</title>
      <link>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-4.html</link>
      <pubDate>Sun, 29 Sep 2013 14:16:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-4.html</guid>
      <description>Live from Malta today attending the EuroBSDCon 2013 conference. The conference is over; today was the second and last day and it has just finished.
Hardware and virtualization
One of the three tracks today included a lot of talks on hardware, porting of BSDs to new hardware and virtualization techniques. Of all these, the few talks I attended covered the topics in great detail and proved to be very interesting.</description>
    </item>
    
    <item>
      <title>Live from EuroBSDCon 2013, day 3</title>
      <link>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html</link>
      <pubDate>Sat, 28 Sep 2013 12:28:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2013/09/live-from-eurobsdcon-2013-day-3.html</guid>
      <description>Live from Malta today attending the EuroBSDCon 2013 conference. Today is the first day of the conference itself. Many more people have shown up as expected and there have been tons of very interesting talks all the time. It is both good and bad that there are several tracks: you can select the topic you are most interested in, but sometimes great talks overlap!
Keynote
Today&#39;s opening session was led by Theo de Raadt, the founder of OpenBSD.</description>
    </item>
    
    <item>
      <title>Setting up my old Mac Mini G4 as a development machine</title>
      <link>https://jmmv.dev/2012/10/setting-up-my-old-mac-mini-g4-as.html</link>
      <pubDate>Mon, 22 Oct 2012 15:31:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/10/setting-up-my-old-mac-mini-g4-as.html</guid>
      <description>I&#39;ve spent quite a few time last week setting up my old Mac Mini G4 — a PPC 1.2GHz with 1GB of RAM running NetBSD/macppc current — as a &#34;workstation&#34; for the development of Kyua and other tools for NetBSD. Yes, this machine is very slow, but that&#39;s the whole point of the exercise I&#39;m going to narrate below.
I recently got approval from the NetBSD core team to import Kyua into the NetBSD source tree and replace ATF with it.</description>
    </item>
    
    <item>
      <title>Kyua gets its own blog</title>
      <link>https://jmmv.dev/2012/06/kyua-gets-its-own-blog.html</link>
      <pubDate>Mon, 04 Jun 2012 18:25:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/06/kyua-gets-its-own-blog.html</guid>
      <description>For the last couple of weeks, I have been pondering the creation of a Kyua-specific blog. And, after a lot of consideration, I have finally taken the plunge. Say hello to Engineering Kyua!
From now on, all Kyua-related posts (as well as ATF posts) will go to the new blog.&amp;nbsp;I recommend you to subscribe to&amp;nbsp;Engineering Kyua&#39;s Atom feed&amp;nbsp;right now to not miss a beat! &amp;nbsp;If you care enough about Kyua, that is.</description>
    </item>
    
    <item>
      <title>Exposing a configuration tree through Lua</title>
      <link>https://jmmv.dev/2012/06/exposing-configuration-tree-through-lua.html</link>
      <pubDate>Sat, 02 Jun 2012 20:47:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2012/06/exposing-configuration-tree-through-lua.html</guid>
      <description>In the previous post, I discussed the&amp;nbsp;type-safe tree data structure&amp;nbsp;that is now in the Kyua codebase, aimed at representing the configuration of the program. In this post, we&#39;ll see how this data structure ties to the parsing of the configuration file.
One goal in the design of the configuration file was to make its contents a simple key/value association (i.e. assigning values to predetermined configuration variables). Of course, the fact that the configuration file is just a Lua script means that additional constructions (conditionals, functions, etc.</description>
    </item>
    
  </channel>
</rss>