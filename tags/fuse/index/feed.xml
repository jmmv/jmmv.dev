<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fuse on Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/tags/fuse/index.html</link><description>Recent content in Fuse on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>julio@meroh.net (Julio Merino)</managingEditor><webMaster>julio@meroh.net (Julio Merino)</webMaster><copyright>Copyright 2004&#150;2025 Julio Merino</copyright><lastBuildDate>Mon, 23 Mar 2020 21:20:00 +0500</lastBuildDate><atom:link href="https://jmmv.dev/tags/fuse/index/feed.xml" rel="self" type="application/rss+xml"/><item><title>macOS terminal stalls running a binary</title><link>https://jmmv.dev/2020/03/macos-stuck-terminal-fuse-exec.html</link><pubDate>Mon, 23 Mar 2020 21:20:00 +0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/03/macos-stuck-terminal-fuse-exec.html</guid><description>&lt;p>Here I am, confined to my apartment due to the COVID-19 pandemic and without having posted anything for almost two months. Fortunately, my family and I are still are in good condition, and I&amp;rsquo;m even more fortunate to have a job that can employ me remotely without problems. Or can they?&lt;/p>
&lt;p>For over a year, my team and I have been working on allowing our mobile engineers to work from their laptops (as opposed to from their powerful workstations). And guess what: now, more than ever, this has become super-important: making our engineering workforce productive when working remotely is a challenge, sure, but is also an amazing opportunity for the feature we&amp;rsquo;ve been developing for over a year.&lt;/p></description></item><item><title>The OSXFUSE, hard links, and dladdr puzzle</title><link>https://jmmv.dev/2020/01/osxfuse-hardlinks-dladdr.html</link><pubDate>Fri, 17 Jan 2020 16:30:00 +0500</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2020/01/osxfuse-hardlinks-dladdr.html</guid><description>&lt;p>Hello everyone and welcome to this new decade!&lt;/p>
&lt;p>It&amp;rsquo;s already 2020 and I&amp;rsquo;m only 17 days late in writing a first post. I was planning to start with an opinion article, but as its draft is taking longer than I wanted&amp;hellip; I&amp;rsquo;ll present you the story of a recent crazy bug that has &lt;a href="https://twitter.com/jmmv/status/1217276457648521216">kept me busy&lt;/a> for the last couple of days.&lt;/p>
&lt;h1 id="java-crashes-with-bazel-and-sandboxfs">Java crashes with Bazel and sandboxfs&lt;/h1>
&lt;p>On a machine running macOS Catalina, install &lt;a href="https://github.com/bazelbuild/sandboxfs">sandboxfs&lt;/a> and build Bazel with sandboxfs enabled, like this:&lt;/p></description></item><item><title>NTFS read/write support for Mac OS X</title><link>https://jmmv.dev/2007/03/ntfs-readwrite-support-for-mac-os-x.html</link><pubDate>Sat, 17 Mar 2007 12:53:00 -0400</pubDate><author>julio@meroh.net (Julio Merino)</author><guid>https://jmmv.dev/2007/03/ntfs-readwrite-support-for-mac-os-x.html</guid><description>It is a fact that hard disk drives are very, very large nowadays. Formatting them as FAT (in any of its versions) is suboptimal due to the deficiencies of this file system: big clusters, lack of journaling support, etc. But, like it or not, FAT is the most compatible file system out there: virtually any OS and device supports it in read/write mode.&lt;br />&lt;br />Today, I had to reinstall Windows XP on my Mac (won't bother you with the reasons). In the past, I had used FAT32 for its 30Gb partition so I could access it from Mac OS X. But recently, some guys at Google ported Linux's FUSE to Mac OS X, effectively allowing anyone to use FUSE modules under this operating system. And you guessed right: there is a module that provides stable, full read/write support for NTFS file systems; it's name: ntfs-3g.&lt;br />&lt;br />So I installed Windows XP on a NTFS partition and gave these a try.&lt;br />&lt;br />&lt;a href="http://code.google.com/p/macfuse/">MacFUSE&lt;/a>, as said above, is a port of Linux's FUSE kernel-level interface to Mac OS X. For those that don't know it, FUSE is a kernel facility that allows file system drivers to be run as user-space applications; this speeds up development of these components and also prevents some common programming mistakes to take the whole system down. Having such a compatible interface means that you can run almost any FUSE module under Mac OS X without changes to its code.&lt;br />&lt;br />Installing MacFUSE is trivial, but I was afraid that using ntfs-3g could require messing with the command line — which would be soooo Mac-unlike — and feared it could not integrate well with the system (i.e. no automation nor replacement of the standard read-only driver).&lt;br />&lt;br />It turns out I was wrong. There is a very nice &lt;a href="http://shadowofged.blogspot.com/2007/03/ntfs-3g-for-mac-os-x.html">NTFS-3G for Mac OS X&lt;/a> project that provides you the typical disk image with a couple of installers to properly merge ntfs-3g support into your system. Once done, just reboot and your NTFS partition will &lt;i>automatically&lt;/i> come up in the Finder as a read/write volume! Sweet. Kudos to the developers that made this work.&lt;br />&lt;br />Oh, and by the way. We have got &lt;a href="http://www.netbsd.org/Changes/#puffs+refuse">FUSE support in NetBSD&lt;/a> too!</description></item></channel></rss>