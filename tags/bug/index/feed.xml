<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>bug on jmmv.dev</title>
    <link>https://jmmv.dev/tags/bug/index/</link>
    <description>Recent content in bug on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Oct 2020 05:40:00 -0700</lastBuildDate><atom:link href="https://jmmv.dev/tags/bug/index/feed.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The final boss: Bazel&#39;s own JNI code</title>
      <link>https://jmmv.dev/2020/10/bazel-jni.html</link>
      <pubDate>Fri, 09 Oct 2020 05:40:00 -0700</pubDate>
      
      <guid>https://jmmv.dev/2020/10/bazel-jni.html</guid>
      <description>As you might have read elsewhere, I&amp;rsquo;m leaving the Bazel team and Google in about a week. My plan for these last few weeks was to hand things off as cleanly as possible&amp;hellip; but I was also nerd-sniped by a bug that came my way a fortnight ago. Fixing it has been my self-inflicted punishment for leaving, and oh my, it has been painful. Very painful.
Let me tell you the story of this final boss.</description>
    </item>
    
    <item>
      <title>Bazel output streaming, Ctrl&#43;C, and test flakiness</title>
      <link>https://jmmv.dev/2020/09/bazel-test-streaming-bug.html</link>
      <pubDate>Fri, 18 Sep 2020 07:10:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/09/bazel-test-streaming-bug.html</guid>
      <description>About two weeks ago, I found a very interesting bug in Bazel&amp;rsquo;s test output streaming functionality while writing tests for a new feature related to Ctrl+C interrupts. I fixed the bug, wrote a test for it, and&amp;hellip; the test itself came back as flaky, which made me find another very subtle bug in the test that needed a one-line fix. This is the story of both.
 Bazel has a feature known as test output streaming: by default, Bazel captures the outputs (stdout and stderr) of the tests it runs, saves those in local log files, and tells the user where they are when a test fails.</description>
    </item>
    
    <item>
      <title>Bazel UI locking and file downloads</title>
      <link>https://jmmv.dev/2020/09/bazel-ui-locking.html</link>
      <pubDate>Tue, 01 Sep 2020 16:40:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/09/bazel-ui-locking.html</guid>
      <description>&lt;p&gt;About a month ago, I was benchmarking the impact of a new Bazel feature and I noticed that a test build that should have taken only a few seconds took almost 10 minutes. My Internet connection was flaking out indeed, but something else didn&amp;rsquo;t seem right. So I looked and found that Bazel was doing network calls within a critical section, and these were the root cause behind the massive slowdown. But how did we get such an obvious no-no into the codebase? Read on to see how this happened and how gnarly it was to fix!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
