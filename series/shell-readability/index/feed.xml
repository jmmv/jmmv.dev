<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell Readability on jmmv.dev</title>
    <link>https://jmmv.dev/series/shell-readability/</link>
    <description>Recent content in Shell Readability on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Mar 2018 11:43:00 -0400</lastBuildDate>
    
	<atom:link href="https://jmmv.dev/series/shell-readability/index/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shell readability: local</title>
      <link>https://jmmv.dev/2018/03/shell-readability-local.html</link>
      <pubDate>Tue, 13 Mar 2018 11:43:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2018/03/shell-readability-local.html</guid>
      <description>&lt;p&gt;As most programming languages with support for functions, the shell offers locally-scoped variables. Unfortunately, &lt;em&gt;local variables are not the default&lt;/em&gt;. &lt;strong&gt;You must explicitly declare variables as &lt;code&gt;local&lt;/code&gt;&lt;/strong&gt; and you should &lt;strong&gt;be very strict about doing this&lt;/strong&gt; to prevent subtle but hard-to-diagnose bugs.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s it! What else is there to say about this trivial keyword? As it turns out, more than you might think.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shell readability: strict mode</title>
      <link>https://jmmv.dev/2018/03/shell-readability-strict-mode.html</link>
      <pubDate>Fri, 09 Mar 2018 09:40:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2018/03/shell-readability-strict-mode.html</guid>
      <description>Some programming languages have a feature known as strict mode: a setting that makes the language interpreter disallow certain obviously-broken code that would otherwise work. The simplest examples are JavaScript and Perl but, as it turns out, the shell also has something akin to this feature. The &amp;ldquo;strict mode&amp;rdquo; name, however, is unofficial, so you won&amp;rsquo;t find many references to it online.
You can enable the shell&amp;rsquo;s strict mode by doing one of the following:</description>
    </item>
    
    <item>
      <title>Shell readability: function parameters</title>
      <link>https://jmmv.dev/2018/03/shell-readability-function-parameters.html</link>
      <pubDate>Fri, 02 Mar 2018 06:35:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2018/03/shell-readability-function-parameters.html</guid>
      <description>&lt;p&gt;The shell supports defining functions, which, &lt;a href=&#34;https://jmmv.dev/2018/02/shell-readability-main.html&#34;&gt;as we learned in the previous post&lt;/a&gt;, you should embrace and use. Unfortunately, they are fairly primitive and their use can, paradoxically, introduce other readability problems.&lt;/p&gt;

&lt;p&gt;One specific problem is that &lt;strong&gt;function parameters are numbered, not named&lt;/strong&gt;, so the risk of cryptic code is high. Let&amp;rsquo;s see why this is a problem.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Shell readability: main</title>
      <link>https://jmmv.dev/2018/02/shell-readability-main.html</link>
      <pubDate>Mon, 26 Feb 2018 05:15:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2018/02/shell-readability-main.html</guid>
      <description>Our team develops Bazel, a Java-based tool. We do have, however, a significant amount of shell scripting. The percentage is small at only 3.6% of our codebase&amp;hellip; but given the size of our project, that&amp;rsquo;s about 130,000 linesâ€”a lot, really.
Pretty much nobody likes writing these integration tests in shell. Leaving aside that our infrastructure is clunky, the real problem is that the team at large is not familiar with writing shell per se.</description>
    </item>
    
  </channel>
</rss>