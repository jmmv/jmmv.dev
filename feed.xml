<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jmmv.dev</title>
    <link>https://jmmv.dev/</link>
    <description>Recent content on jmmv.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Jul 2020 07:30:00 -0400</lastBuildDate>
    
	<atom:link href="https://jmmv.dev/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>My 18 steps to prepare a great presentation</title>
      <link>https://jmmv.dev/2020/07/presentation-preparation.html</link>
      <pubDate>Fri, 17 Jul 2020 07:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/07/presentation-preparation.html</guid>
      <description>A few days ago, I shared my tips to give great presentations. But how do I prepare to give one? That&amp;rsquo;s a different story so let&amp;rsquo;s take a look in this thread üßµ!
 üò¥ Procrastinate. No, really. It&amp;rsquo;s not something I do intentionally, but it happens. And all the time I spend not working on the presentation is time I spend thinking about its structure. And it works.
 üë• Think about the audience: What did they come to learn?</description>
    </item>
    
    <item>
      <title>My 18 tips to deliver great presentations</title>
      <link>https://jmmv.dev/2020/07/presentation-tips.html</link>
      <pubDate>Mon, 13 Jul 2020 07:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/07/presentation-tips.html</guid>
      <description>I used to dread üò∞ public speaking üé§ in middle and high school. College was OKish. Now&amp;hellip; even though I‚Äôm far from an expert, I really enjoy it. How? I forced myself to give talks and strive for improvement in each of them. Here are the things I learned üßµ:
 ‚è±Ô∏è Practice, practice, practice. At least 3 times. Be certain that you will finish in the allotted time: not sooner, not later.</description>
    </item>
    
    <item>
      <title>Shipping Bazel&#39;s new dynamic scheduler</title>
      <link>https://jmmv.dev/2020/06/shipping-bazel-new-dynamic-scheduler.html</link>
      <pubDate>Fri, 12 Jun 2020 16:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/06/shipping-bazel-new-dynamic-scheduler.html</guid>
      <description>Back in September 2019, I embarked into the task of rewriting Bazel&amp;rsquo;s dynamic scheduler to deal with slow and flaky networks. Initial testing had shown that dynamic builds might become slower, and it was all due to this feature having been designed for a different use case (in-office, high-speed network). We had to fix two different issues in the scheduler.
The first fix was making the downloads of the remote artifacts happen without holding the output lock.</description>
    </item>
    
    <item>
      <title>Black Lives Matter</title>
      <link>https://jmmv.dev/2020/06/black-lives-matter.html</link>
      <pubDate>Mon, 01 Jun 2020 22:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/06/black-lives-matter.html</guid>
      <description>Shamefully this is a first for me. I have never blogged or tweeted about politics, but somehow this time around the situation is truly settling in‚Äîand for good reason. It should affect you too.
You see, I&amp;rsquo;m a firm believer in equality, and seeing all that&amp;rsquo;s happening around is not acceptable. See Paradox of tolerance.
 
I don&amp;rsquo;t have much to say, in particular because saying things like &amp;ldquo;racism is wrong&amp;rdquo; or, as the image says, &amp;ldquo;Black Lives Matter&amp;rdquo; are like saying &amp;ldquo;the sky is blue&amp;rdquo;&amp;hellip; and I feel silly for stating the obvious.</description>
    </item>
    
    <item>
      <title>Bridging the web gap in EndBASIC</title>
      <link>https://jmmv.dev/2020/05/bridging-the-web-gap-endbasic.html</link>
      <pubDate>Sat, 30 May 2020 08:50:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/05/bridging-the-web-gap-endbasic.html</guid>
      <description>After a ton of work, a lot of which was unexpected, I am ecstatic to announce that EndBASIC is now a reality on the web! The whole language interpreter can now run as a fully client-side web app on a computer, on a tablet&amp;hellip; and even on a phone. Yes: the whole thing, which is written in Rust (94%), works in a modern browser with just a tiny bit of JavaScript glue (1%).</description>
    </item>
    
    <item>
      <title>Running codesign over SSH with a new key</title>
      <link>https://jmmv.dev/2020/05/codesign-and-ssh.html</link>
      <pubDate>Fri, 29 May 2020 15:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/05/codesign-and-ssh.html</guid>
      <description>I just spent sometime between 30 minutes and 1 hour convincing the Mac Pro that sits in my office to successfully codesign an iOS app via Bazel. This was after having to update the signing key to a newer one and after rebooting the machine due to the macOS 10.15.5 upgrade‚Äîall remotely thanks to COVID-19.
The build of the app was failing with an errSecInternalComponent error printed by codesign. It is not the first time I face this, but in all previous cases, I had either been at the computer to click through security popups, had had functional Chrome Remote Desktop access, or did not have to install a new signing key remotely.</description>
    </item>
    
    <item>
      <title>EndBASIC 0.2.0 is here</title>
      <link>https://jmmv.dev/2020/05/endbasic-0.2.0.html</link>
      <pubDate>Thu, 07 May 2020 06:30:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/05/endbasic-0.2.0.html</guid>
      <description>A couple of weeks ago, I announced EndBASIC: a simple BASIC language interpreter written in Rust with a goal to provide an environment for teaching my kids how to code. That first release provided what-I-think-is a robust interpreter, but that was about it: the language features were still minimal and the interactive features were non-existent.
Well, EndBASIC 0.2.0 is here and things are changing! It&amp;rsquo;s still far from the vision I want to reach, but it&amp;rsquo;s slowly moving towards that direction.</description>
    </item>
    
    <item>
      <title>What is Rust&#39;s Into&lt;T&gt; for?</title>
      <link>https://jmmv.dev/2020/04/rust-into-trait.html</link>
      <pubDate>Mon, 27 Apr 2020 18:50:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/04/rust-into-trait.html</guid>
      <description>Rust provides a bunch of traits that you may use or implement in your code, but unless you have experienced them first-hand, it can be hard to imagine what their real utility is. For example, if you go read Into&amp;rsquo;s documentation, all you find is:
 Trait std::convert::Into
A value-to-value conversion that consumes the input value. The opposite of From. [&amp;hellip;]
 Yay, very useful. This text tells me what this trait does, which is fine for a reference manual, but not when I could find it useful.</description>
    </item>
    
    <item>
      <title>Hello, EndBASIC!</title>
      <link>https://jmmv.dev/2020/04/hello-endbasic.html</link>
      <pubDate>Wed, 22 Apr 2020 09:00:00 -0400</pubDate>
      
      <guid>https://jmmv.dev/2020/04/hello-endbasic.html</guid>
      <description>INPUT&amp;#34;Did you ever experience BASIC (true/false)&amp;#34;;answer? IFanswer?THEN PRINT&amp;#34;Great; you are in for a treat!&amp;#34; ELSE PRINT&amp;#34;Oh noes; try today?&amp;#34; ENDIF I have pretty fond memories of my Amstrad CPC 6128 and its Locomotive BASIC 1.1. The experience was quite unique as the computer was ready to take commands in a couple of seconds, and those commands you typed had an immediate effect on the screen. Changing colors, drawing, playing sounds&amp;hellip; were all at your fingertips, which was pretty exciting for a young boy.</description>
    </item>
    
    <item>
      <title>test, [, and [[</title>
      <link>https://jmmv.dev/2020/03/test-bracket.html</link>
      <pubDate>Wed, 25 Mar 2020 05:55:00 +0500</pubDate>
      
      <guid>https://jmmv.dev/2020/03/test-bracket.html</guid>
      <description>Did you know that Unix systems have a binary whose name is a single symbol?
Go and look for it. Run ls /bin/? and behold:
$ ls /bin/? /bin/[  Uh huh. [? The square bracket? That&amp;rsquo;s a program?!
But wait, it gets more interesting:
$ ls -li /bin/[ /bin/test 834 -rwxr-xr-x 1 root wheel 35824 Jan 23 08:59 /bin/[ 834 -rwxr-xr-x 1 root wheel 35824 Jan 23 08:59 /bin/test  The two names, [ and test, point to the same binary1.</description>
    </item>
    
    <item>
      <title>macOS terminal stalls running a binary</title>
      <link>https://jmmv.dev/2020/03/macos-stuck-terminal-fuse-exec.html</link>
      <pubDate>Mon, 23 Mar 2020 21:20:00 +0500</pubDate>
      
      <guid>https://jmmv.dev/2020/03/macos-stuck-terminal-fuse-exec.html</guid>
      <description>Here I am, confined to my apartment due to the COVID-19 pandemic and without having posted anything for almost two months. Fortunately, my family and I are still are in good condition, and I&amp;rsquo;m even more fortunate to have a job that can employ me remotely without problems. Or can they?
For over a year, my team and I have been working on allowing our mobile engineers to work from their laptops (as opposed to from their powerful workstations).</description>
    </item>
    
    <item>
      <title>FOSDEM navigation 101</title>
      <link>https://jmmv.dev/2020/02/fosdem-navigation-101.html</link>
      <pubDate>Mon, 03 Feb 2020 18:20:00 +0500</pubDate>
      
      <guid>https://jmmv.dev/2020/02/fosdem-navigation-101.html</guid>
      <description>FOSDEM 2020 is over. As I type this, I&amp;rsquo;m on my way back home from the conference in Brussels. And it has been nice. In the end. I must confess I was frustrated by the middle of the first day, though things got better after that.
Here is the thing: FOSDEM is not your usual conference. There are lots of things going on at once and all of them are crowded.</description>
    </item>
    
    <item>
      <title>Ensuring system rewrites are truly necessary</title>
      <link>https://jmmv.dev/2020/01/system-rewrites-and-tuning.html</link>
      <pubDate>Fri, 24 Jan 2020 17:10:00 +0000</pubDate>
      
      <guid>https://jmmv.dev/2020/01/system-rewrites-and-tuning.html</guid>
      <description>I think it&amp;rsquo;s safe to say that software engineers&amp;mdash;hey, I&amp;rsquo;m one one myself!&amp;mdash;often dream about what the rewrite of a system would look like if they had the chance to start over. Oh so much more usable. Oh so much better structured. Oh so much faster! We are architects after all.
And it might be true that a rewrite can deliver those benefits. But often enough, we are too quick to let our minds wander into that territory.</description>
    </item>
    
    <item>
      <title>The OSXFUSE, hard links, and dladdr puzzle</title>
      <link>https://jmmv.dev/2020/01/osxfuse-hardlinks-dladdr.html</link>
      <pubDate>Fri, 17 Jan 2020 16:30:00 +0500</pubDate>
      
      <guid>https://jmmv.dev/2020/01/osxfuse-hardlinks-dladdr.html</guid>
      <description>Hello everyone and welcome to this new decade!
It&amp;rsquo;s already 2020 and I&amp;rsquo;m only 17 days late in writing a first post. I was planning to start with an opinion article, but as its draft is taking longer than I wanted&amp;hellip; I&amp;rsquo;ll present you the story of a recent crazy bug that has kept me busy for the last couple of days.
Java crashes with Bazel and sandboxfs On a machine running macOS Catalina, install sandboxfs and build Bazel with sandboxfs enabled, like this:</description>
    </item>
    
    <item>
      <title>Tree artifacts and transient files</title>
      <link>https://jmmv.dev/2019/12/bazel-dynamic-execution-tree-artifacts.html</link>
      <pubDate>Tue, 31 Dec 2019 13:20:00 +0000</pubDate>
      
      <guid>https://jmmv.dev/2019/12/bazel-dynamic-execution-tree-artifacts.html</guid>
      <description>To conclude the deep dive into Bazel&amp;rsquo;s dynamic spawn strategy, let&amp;rsquo;s look at the nightmare that tree artifacts have been with the local lock-free feature. And, yes, I&amp;rsquo;m double-posting today because I really want to finish these series before the end of the decade1!
Tree artifacts are a fancy name for action outputs that are directories, not files. What&amp;rsquo;s special about them is that Bazel does not know a priori what the directory contents are: the rule behind the action just specifies that there will be a directory with files, and Bazel has to treat that as the unit of output from the action.</description>
    </item>
    
  </channel>
</rss>