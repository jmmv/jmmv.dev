<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Julio Merino (jmmv.dev)</title><link>https://jmmv.dev/</link><description>Recent content on Julio Merino (jmmv.dev)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 22 Apr 2022 09:30:00 -0700</lastBuildDate><atom:link href="https://jmmv.dev/feed.xml" rel="self" type="application/rss+xml"/><item><title>Rust traits and dependency injection</title><link>https://jmmv.dev/2022/04/rust-traits-and-dependency-injection.html</link><pubDate>Fri, 22 Apr 2022 09:30:00 -0700</pubDate><guid>https://jmmv.dev/2022/04/rust-traits-and-dependency-injection.html</guid><description>Dependency injection is one of my favorite design patterns to develop highly-testable and modular code. Unfortunately, applying this pattern by taking Rust traits as arguments to public functions has unintended consequences on the visibility of private symbols. Let&amp;rsquo;s look at why and what we can do about it.</description></item><item><title>QB64 Super Dark Blue color theme</title><link>https://jmmv.dev/2022/04/qb64-super-dark-blue.html</link><pubDate>Wed, 20 Apr 2022 19:00:00 -0700</pubDate><guid>https://jmmv.dev/2022/04/qb64-super-dark-blue.html</guid><description>Towards the end of 2021, I was playing with QB64 and thought that its default color scheme&amp;mdash;called Super Dark Blue&amp;mdash;was quite neat. It reminded me of QuickBASIC, which is what the whole program is supposed to do, but the colors felt vivid and modern. Take a look:
QB64 with its default color configuration. &amp;ldquo;Naturally,&amp;rdquo; I wondered if I could adopt those colors in VSCode and Windows Terminal, as these are the apps I look at the most throughout a work day.</description></item><item><title>Introducing db_logger</title><link>https://jmmv.dev/2022/04/introducing-db-logger.html</link><pubDate>Tue, 12 Apr 2022 08:30:00 -0700</pubDate><guid>https://jmmv.dev/2022/04/introducing-db-logger.html</guid><description>Over the last couple of weeks, I have been modernizing the codebase of the EndBASIC cloud service by applying many of the learnings I got from the development of EndTRACKER. The latter was a fork of the former and thus the foundations were the same, but as I iterated on the latter more recently, I got to refine my approach to writing a REST API in Rust.
During this refactoring process, there was a small piece of the system that routinely got in the way for various reasons.</description></item><item><title/><link>https://jmmv.dev/software/db_logger.html</link><pubDate>Tue, 12 Apr 2022 08:30:00 +0000</pubDate><guid>https://jmmv.dev/software/db_logger.html</guid><description>A database-backed logger for use with the log crate</description></item><item><title>Abandoning GAFYD</title><link>https://jmmv.dev/2022/03/abandoning-gafyd.html</link><pubDate>Mon, 28 Mar 2022 09:00:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/abandoning-gafyd.html</guid><description>&lt;p>If you know what GAFYD stands for and have felt that signing up for a free account years ago was a mistake, you know you are in trouble right now. Those accounts are shutting down. The time has come to either pay up or move out, and you should decide what to do ASAP. It took me weeks of active effort to move my and my family&amp;rsquo;s data out of GAFYD and put it back into Google consumer accounts and other non-Google services.&lt;/p></description></item><item><title>A year on Windows: Finale</title><link>https://jmmv.dev/2022/03/a-year-on-windows-finale.html</link><pubDate>Sat, 19 Mar 2022 07:20:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-finale.html</guid><description>&lt;p>We have reached the end of this daily 2-week long series so it&amp;rsquo;s time to close with some parting thoughts. Before drafting some conclusions on how this whole year has gone, there is just one more topic I have to touch on&amp;hellip; and that&amp;rsquo;s the much dreaded telemetry.&lt;/p></description></item><item><title>A year on Windows: Software installation</title><link>https://jmmv.dev/2022/03/a-year-on-windows-winget.html</link><pubDate>Fri, 18 Mar 2022 06:30:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-winget.html</guid><description>&lt;p>Can you believe that Windows ships with something that looks like a package manager? By default since Windows 11? I know, right? Let&amp;rsquo;s take a look.&lt;/p></description></item><item><title>A year on Windows: System debugging</title><link>https://jmmv.dev/2022/03/a-year-on-windows-debugging.html</link><pubDate>Thu, 17 Mar 2022 06:30:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-debugging.html</guid><description>&lt;p>As you are well-aware, Windows is a closed-source operating system. That, however, does &lt;em>not&lt;/em> mean that it is &lt;em>opaque&lt;/em>. In fact, it feels quite the opposite in many areas, which might be a surprise to you&amp;mdash;especially if you develop on/for open-source operating systems.&lt;/p></description></item><item><title>A year on Windows: Networked file systems</title><link>https://jmmv.dev/2022/03/a-year-on-windows-networked-fs.html</link><pubDate>Wed, 16 Mar 2022 06:30:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-networked-fs.html</guid><description>&lt;p>I briefly mentioned in the &lt;a href="https://jmmv.dev/2022/03/a-year-on-windows-intro.html">intro to this series&lt;/a> that, as part of the transition to Windows, I recently built my most powerful home server ever. The server in question is a machine from 2011 so it&amp;rsquo;s not &amp;ldquo;powerful&amp;rdquo;, but it&amp;rsquo;s the best I have ever had as a home server! And it is running FreeBSD 13.&lt;/p>
&lt;p>Wait, wait, wait. What does this have to do with Windows?&lt;/p></description></item><item><title>A year on Windows: PowerShell</title><link>https://jmmv.dev/2022/03/a-year-on-windows-powershell.html</link><pubDate>Tue, 15 Mar 2022 07:20:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-powershell.html</guid><description>&lt;p>The native Windows command line, the one derived from DOS, is objectively painful.&lt;/p>
&lt;p>On the one hand, the batch language is &lt;a href="https://devblogs.microsoft.com/oldnewthing/20050909-24/?p=34263">full of hacks&lt;/a> that have cropped up over the years. These hacks exist to offer new features while maintaining strict backwards compatibility, a heroic effort with nasty consequences. On the other hand, the interactive editing features of &lt;code>cmd.exe&lt;/code> are rudimentary&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Fortunately, PowerShell exists as a first-party, built-into-Windows alternative to &lt;code>cmd.exe&lt;/code>.&lt;/p></description></item><item><title>A year on Windows: Development experience</title><link>https://jmmv.dev/2022/03/a-year-on-windows-devel.html</link><pubDate>Mon, 14 Mar 2022 06:30:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-devel.html</guid><description>&lt;p>We are finally entering the final part of this one-year retrospective by shifting gears into developer-oriented topics.&lt;/p>
&lt;p>I hadn&amp;rsquo;t touched Windows to write code since 2006 and the development experience has massively changed for the better during the last 6 years. So let&amp;rsquo;s start this part by talking about the crown jewel of development on modern Windows: the WSL + Windows Terminal + VSCode trifecta.&lt;/p></description></item><item><title>A year on Windows: Miscellaneous tools</title><link>https://jmmv.dev/2022/03/a-year-on-windows-tools.html</link><pubDate>Sun, 13 Mar 2022 09:00:00 -0700</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-tools.html</guid><description>&lt;p>The previous episode in this series was about PowerToys: a nice collection of first-party tools to extend the functionality of Windows for power users. But what about functionality that&amp;rsquo;s built into the system? There are a few more areas I wanted to touch on before concluding the GUI part of these series, so let&amp;rsquo;s dive in.&lt;/p></description></item><item><title>A year on Windows: PowerToys</title><link>https://jmmv.dev/2022/03/a-year-on-windows-powertoys.html</link><pubDate>Sat, 12 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-powertoys.html</guid><description>If you were around the Windows 95 days, you may remember the PowerToys addon. PowerToys was a collection of first-party miscellaneous utilities targeted at power users and it died off sometime around 2010. In a surprising (to me) move on May 2019, Microsoft relaunched this brand as an open-source project targeting modern versions of Windows.
At the time of this writing, PowerToys provides 12 different disparate tools. Which ones you find interesting will depend on your needs.</description></item><item><title>A year on Windows: Window switching</title><link>https://jmmv.dev/2022/03/a-year-on-windows-alt-tab.html</link><pubDate>Fri, 11 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-alt-tab.html</guid><description>&lt;p>Windows is about managing windows so it should excel at window switching. Uh huh? Let&amp;rsquo;s investigate how that works in this episode and how Windows' approach feels to a long-time macOS user. Spoiler alert: I never really liked macOS&amp;rsquo;s way.&lt;/p></description></item><item><title>A year on Windows: Look'n'feel</title><link>https://jmmv.dev/2022/03/a-year-on-windows-gui.html</link><pubDate>Thu, 10 Mar 2022 06:30:00 -0800</pubDate><guid>https://jmmv.dev/2022/03/a-year-on-windows-gui.html</guid><description>&lt;p>Enough complaining about keyboards, shortcuts, and input methods. Let&amp;rsquo;s shift this one-year reflection to the user interface and slowly towards more positive topics.&lt;/p>
&lt;p>First of all, let&amp;rsquo;s make one thing clear: GUIs are like colors. There are plenty to choose from, everyone has their preferences, and that&amp;rsquo;s just &lt;em>fine&lt;/em>. Windows' GUI is what it is and doesn&amp;rsquo;t leave a lot of room for customization. If you are a macOS user, you have learnt to put up with a similar approach, but if you are a Linux user, you will despair at the lack of options.&lt;/p></description></item></channel></rss>